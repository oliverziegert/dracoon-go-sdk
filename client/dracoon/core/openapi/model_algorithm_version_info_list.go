/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AlgorithmVersionInfoList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlgorithmVersionInfoList{}

// AlgorithmVersionInfoList Information of all available algorithms
type AlgorithmVersionInfoList struct {
	// List of file key algorithms
	FileKeyAlgorithms []AlgorithmVersionInfo `json:"fileKeyAlgorithms"`
	// List of key pair algorithms
	KeyPairAlgorithms []AlgorithmVersionInfo `json:"keyPairAlgorithms"`
}

type _AlgorithmVersionInfoList AlgorithmVersionInfoList

// NewAlgorithmVersionInfoList instantiates a new AlgorithmVersionInfoList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlgorithmVersionInfoList(fileKeyAlgorithms []AlgorithmVersionInfo, keyPairAlgorithms []AlgorithmVersionInfo) *AlgorithmVersionInfoList {
	this := AlgorithmVersionInfoList{}
	this.FileKeyAlgorithms = fileKeyAlgorithms
	this.KeyPairAlgorithms = keyPairAlgorithms
	return &this
}

// NewAlgorithmVersionInfoListWithDefaults instantiates a new AlgorithmVersionInfoList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlgorithmVersionInfoListWithDefaults() *AlgorithmVersionInfoList {
	this := AlgorithmVersionInfoList{}
	return &this
}

// GetFileKeyAlgorithms returns the FileKeyAlgorithms field value
func (o *AlgorithmVersionInfoList) GetFileKeyAlgorithms() []AlgorithmVersionInfo {
	if o == nil {
		var ret []AlgorithmVersionInfo
		return ret
	}

	return o.FileKeyAlgorithms
}

// GetFileKeyAlgorithmsOk returns a tuple with the FileKeyAlgorithms field value
// and a boolean to check if the value has been set.
func (o *AlgorithmVersionInfoList) GetFileKeyAlgorithmsOk() ([]AlgorithmVersionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.FileKeyAlgorithms, true
}

// SetFileKeyAlgorithms sets field value
func (o *AlgorithmVersionInfoList) SetFileKeyAlgorithms(v []AlgorithmVersionInfo) {
	o.FileKeyAlgorithms = v
}

// GetKeyPairAlgorithms returns the KeyPairAlgorithms field value
func (o *AlgorithmVersionInfoList) GetKeyPairAlgorithms() []AlgorithmVersionInfo {
	if o == nil {
		var ret []AlgorithmVersionInfo
		return ret
	}

	return o.KeyPairAlgorithms
}

// GetKeyPairAlgorithmsOk returns a tuple with the KeyPairAlgorithms field value
// and a boolean to check if the value has been set.
func (o *AlgorithmVersionInfoList) GetKeyPairAlgorithmsOk() ([]AlgorithmVersionInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyPairAlgorithms, true
}

// SetKeyPairAlgorithms sets field value
func (o *AlgorithmVersionInfoList) SetKeyPairAlgorithms(v []AlgorithmVersionInfo) {
	o.KeyPairAlgorithms = v
}

func (o AlgorithmVersionInfoList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlgorithmVersionInfoList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fileKeyAlgorithms"] = o.FileKeyAlgorithms
	toSerialize["keyPairAlgorithms"] = o.KeyPairAlgorithms
	return toSerialize, nil
}

func (o *AlgorithmVersionInfoList) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fileKeyAlgorithms",
		"keyPairAlgorithms",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlgorithmVersionInfoList := _AlgorithmVersionInfoList{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlgorithmVersionInfoList)

	if err != nil {
		return err
	}

	*o = AlgorithmVersionInfoList(varAlgorithmVersionInfoList)

	return err
}

type NullableAlgorithmVersionInfoList struct {
	value *AlgorithmVersionInfoList
	isSet bool
}

func (v NullableAlgorithmVersionInfoList) Get() *AlgorithmVersionInfoList {
	return v.value
}

func (v *NullableAlgorithmVersionInfoList) Set(val *AlgorithmVersionInfoList) {
	v.value = val
	v.isSet = true
}

func (v NullableAlgorithmVersionInfoList) IsSet() bool {
	return v.isSet
}

func (v *NullableAlgorithmVersionInfoList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlgorithmVersionInfoList(val *AlgorithmVersionInfoList) *NullableAlgorithmVersionInfoList {
	return &NullableAlgorithmVersionInfoList{value: val, isSet: true}
}

func (v NullableAlgorithmVersionInfoList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlgorithmVersionInfoList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
