/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the TotpSetupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TotpSetupResponse{}

// TotpSetupResponse Contains QR code URL and OTP URI for TOTP setup
type TotpSetupResponse struct {
	// ID
	Id int64 `json:"id"`
	// TOTP data URL (QR Code)
	QrCode string `json:"qrCode"`
	// URI containing secret key, issuer and account information
	OtpUri string `json:"otpUri"`
	// Secret key used for setup of TOTP authentication
	Secret string `json:"secret"`
}

type _TotpSetupResponse TotpSetupResponse

// NewTotpSetupResponse instantiates a new TotpSetupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTotpSetupResponse(id int64, qrCode string, otpUri string, secret string) *TotpSetupResponse {
	this := TotpSetupResponse{}
	this.Id = id
	this.QrCode = qrCode
	this.OtpUri = otpUri
	this.Secret = secret
	return &this
}

// NewTotpSetupResponseWithDefaults instantiates a new TotpSetupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTotpSetupResponseWithDefaults() *TotpSetupResponse {
	this := TotpSetupResponse{}
	return &this
}

// GetId returns the Id field value
func (o *TotpSetupResponse) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TotpSetupResponse) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TotpSetupResponse) SetId(v int64) {
	o.Id = v
}

// GetQrCode returns the QrCode field value
func (o *TotpSetupResponse) GetQrCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QrCode
}

// GetQrCodeOk returns a tuple with the QrCode field value
// and a boolean to check if the value has been set.
func (o *TotpSetupResponse) GetQrCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QrCode, true
}

// SetQrCode sets field value
func (o *TotpSetupResponse) SetQrCode(v string) {
	o.QrCode = v
}

// GetOtpUri returns the OtpUri field value
func (o *TotpSetupResponse) GetOtpUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OtpUri
}

// GetOtpUriOk returns a tuple with the OtpUri field value
// and a boolean to check if the value has been set.
func (o *TotpSetupResponse) GetOtpUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OtpUri, true
}

// SetOtpUri sets field value
func (o *TotpSetupResponse) SetOtpUri(v string) {
	o.OtpUri = v
}

// GetSecret returns the Secret field value
func (o *TotpSetupResponse) GetSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *TotpSetupResponse) GetSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *TotpSetupResponse) SetSecret(v string) {
	o.Secret = v
}

func (o TotpSetupResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TotpSetupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["qrCode"] = o.QrCode
	toSerialize["otpUri"] = o.OtpUri
	toSerialize["secret"] = o.Secret
	return toSerialize, nil
}

func (o *TotpSetupResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"qrCode",
		"otpUri",
		"secret",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTotpSetupResponse := _TotpSetupResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTotpSetupResponse)

	if err != nil {
		return err
	}

	*o = TotpSetupResponse(varTotpSetupResponse)

	return err
}

type NullableTotpSetupResponse struct {
	value *TotpSetupResponse
	isSet bool
}

func (v NullableTotpSetupResponse) Get() *TotpSetupResponse {
	return v.value
}

func (v *NullableTotpSetupResponse) Set(val *TotpSetupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTotpSetupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTotpSetupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTotpSetupResponse(val *TotpSetupResponse) *NullableTotpSetupResponse {
	return &NullableTotpSetupResponse{value: val, isSet: true}
}

func (v NullableTotpSetupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTotpSetupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
