/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RoomPolicies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomPolicies{}

// RoomPolicies Room Polices
type RoomPolicies struct {
	// Default policy room expiration period in seconds.  All files in a room will have their expiration date set to this period after their respective upload.   0 means no default expiration policy is set.
	DefaultExpirationPeriod int32 `json:"defaultExpirationPeriod"`
	// Determines whether virus protection is enabled for room. To be set by room admins
	IsVirusProtectionEnabled bool `json:"isVirusProtectionEnabled"`
}

type _RoomPolicies RoomPolicies

// NewRoomPolicies instantiates a new RoomPolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomPolicies(defaultExpirationPeriod int32, isVirusProtectionEnabled bool) *RoomPolicies {
	this := RoomPolicies{}
	this.DefaultExpirationPeriod = defaultExpirationPeriod
	this.IsVirusProtectionEnabled = isVirusProtectionEnabled
	return &this
}

// NewRoomPoliciesWithDefaults instantiates a new RoomPolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomPoliciesWithDefaults() *RoomPolicies {
	this := RoomPolicies{}
	return &this
}

// GetDefaultExpirationPeriod returns the DefaultExpirationPeriod field value
func (o *RoomPolicies) GetDefaultExpirationPeriod() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DefaultExpirationPeriod
}

// GetDefaultExpirationPeriodOk returns a tuple with the DefaultExpirationPeriod field value
// and a boolean to check if the value has been set.
func (o *RoomPolicies) GetDefaultExpirationPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultExpirationPeriod, true
}

// SetDefaultExpirationPeriod sets field value
func (o *RoomPolicies) SetDefaultExpirationPeriod(v int32) {
	o.DefaultExpirationPeriod = v
}

// GetIsVirusProtectionEnabled returns the IsVirusProtectionEnabled field value
func (o *RoomPolicies) GetIsVirusProtectionEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsVirusProtectionEnabled
}

// GetIsVirusProtectionEnabledOk returns a tuple with the IsVirusProtectionEnabled field value
// and a boolean to check if the value has been set.
func (o *RoomPolicies) GetIsVirusProtectionEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsVirusProtectionEnabled, true
}

// SetIsVirusProtectionEnabled sets field value
func (o *RoomPolicies) SetIsVirusProtectionEnabled(v bool) {
	o.IsVirusProtectionEnabled = v
}

func (o RoomPolicies) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomPolicies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["defaultExpirationPeriod"] = o.DefaultExpirationPeriod
	toSerialize["isVirusProtectionEnabled"] = o.IsVirusProtectionEnabled
	return toSerialize, nil
}

func (o *RoomPolicies) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"defaultExpirationPeriod",
		"isVirusProtectionEnabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoomPolicies := _RoomPolicies{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoomPolicies)

	if err != nil {
		return err
	}

	*o = RoomPolicies(varRoomPolicies)

	return err
}

type NullableRoomPolicies struct {
	value *RoomPolicies
	isSet bool
}

func (v NullableRoomPolicies) Get() *RoomPolicies {
	return v.value
}

func (v *NullableRoomPolicies) Set(val *RoomPolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomPolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomPolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomPolicies(val *RoomPolicies) *NullableRoomPolicies {
	return &NullableRoomPolicies{value: val, isSet: true}
}

func (v NullableRoomPolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomPolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
