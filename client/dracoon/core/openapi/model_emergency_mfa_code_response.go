/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the EmergencyMfaCodeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmergencyMfaCodeResponse{}

// EmergencyMfaCodeResponse Emergency TOTP code
type EmergencyMfaCodeResponse struct {
	// Emergency TOTP code which can be used instead of standard TOTP code
	Code string `json:"code"`
}

type _EmergencyMfaCodeResponse EmergencyMfaCodeResponse

// NewEmergencyMfaCodeResponse instantiates a new EmergencyMfaCodeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmergencyMfaCodeResponse(code string) *EmergencyMfaCodeResponse {
	this := EmergencyMfaCodeResponse{}
	this.Code = code
	return &this
}

// NewEmergencyMfaCodeResponseWithDefaults instantiates a new EmergencyMfaCodeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmergencyMfaCodeResponseWithDefaults() *EmergencyMfaCodeResponse {
	this := EmergencyMfaCodeResponse{}
	return &this
}

// GetCode returns the Code field value
func (o *EmergencyMfaCodeResponse) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *EmergencyMfaCodeResponse) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *EmergencyMfaCodeResponse) SetCode(v string) {
	o.Code = v
}

func (o EmergencyMfaCodeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmergencyMfaCodeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	return toSerialize, nil
}

func (o *EmergencyMfaCodeResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEmergencyMfaCodeResponse := _EmergencyMfaCodeResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEmergencyMfaCodeResponse)

	if err != nil {
		return err
	}

	*o = EmergencyMfaCodeResponse(varEmergencyMfaCodeResponse)

	return err
}

type NullableEmergencyMfaCodeResponse struct {
	value *EmergencyMfaCodeResponse
	isSet bool
}

func (v NullableEmergencyMfaCodeResponse) Get() *EmergencyMfaCodeResponse {
	return v.value
}

func (v *NullableEmergencyMfaCodeResponse) Set(val *EmergencyMfaCodeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEmergencyMfaCodeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEmergencyMfaCodeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmergencyMfaCodeResponse(val *EmergencyMfaCodeResponse) *NullableEmergencyMfaCodeResponse {
	return &NullableEmergencyMfaCodeResponse{value: val, isSet: true}
}

func (v NullableEmergencyMfaCodeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmergencyMfaCodeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
