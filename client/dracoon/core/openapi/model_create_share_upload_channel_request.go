/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the CreateShareUploadChannelRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateShareUploadChannelRequest{}

// CreateShareUploadChannelRequest Request model for creating an upload channel
type CreateShareUploadChannelRequest struct {
	// File name
	Name string `json:"name"`
	// File size in byte
	Size *int64 `json:"size,omitempty"`
	// Password
	Password *string `json:"password,omitempty"`
	// &#128640; Since v4.15.0  Upload direct to S3
	DirectS3Upload *bool `json:"directS3Upload,omitempty"`
	// &#128640; Since v4.22.0  Time the node was created on external file system  (default: current server datetime in UTC format)
	TimestampCreation *time.Time `json:"timestampCreation,omitempty"`
	// &#128640; Since v4.22.0  Time the content of a node was last modified on external file system  (default: current server datetime in UTC format)
	TimestampModification *time.Time `json:"timestampModification,omitempty"`
}

type _CreateShareUploadChannelRequest CreateShareUploadChannelRequest

// NewCreateShareUploadChannelRequest instantiates a new CreateShareUploadChannelRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateShareUploadChannelRequest(name string) *CreateShareUploadChannelRequest {
	this := CreateShareUploadChannelRequest{}
	this.Name = name
	var directS3Upload bool = false
	this.DirectS3Upload = &directS3Upload
	return &this
}

// NewCreateShareUploadChannelRequestWithDefaults instantiates a new CreateShareUploadChannelRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateShareUploadChannelRequestWithDefaults() *CreateShareUploadChannelRequest {
	this := CreateShareUploadChannelRequest{}
	var directS3Upload bool = false
	this.DirectS3Upload = &directS3Upload
	return &this
}

// GetName returns the Name field value
func (o *CreateShareUploadChannelRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateShareUploadChannelRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateShareUploadChannelRequest) SetName(v string) {
	o.Name = v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *CreateShareUploadChannelRequest) GetSize() int64 {
	if o == nil || IsNil(o.Size) {
		var ret int64
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShareUploadChannelRequest) GetSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *CreateShareUploadChannelRequest) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int64 and assigns it to the Size field.
func (o *CreateShareUploadChannelRequest) SetSize(v int64) {
	o.Size = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateShareUploadChannelRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShareUploadChannelRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateShareUploadChannelRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateShareUploadChannelRequest) SetPassword(v string) {
	o.Password = &v
}

// GetDirectS3Upload returns the DirectS3Upload field value if set, zero value otherwise.
func (o *CreateShareUploadChannelRequest) GetDirectS3Upload() bool {
	if o == nil || IsNil(o.DirectS3Upload) {
		var ret bool
		return ret
	}
	return *o.DirectS3Upload
}

// GetDirectS3UploadOk returns a tuple with the DirectS3Upload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShareUploadChannelRequest) GetDirectS3UploadOk() (*bool, bool) {
	if o == nil || IsNil(o.DirectS3Upload) {
		return nil, false
	}
	return o.DirectS3Upload, true
}

// HasDirectS3Upload returns a boolean if a field has been set.
func (o *CreateShareUploadChannelRequest) HasDirectS3Upload() bool {
	if o != nil && !IsNil(o.DirectS3Upload) {
		return true
	}

	return false
}

// SetDirectS3Upload gets a reference to the given bool and assigns it to the DirectS3Upload field.
func (o *CreateShareUploadChannelRequest) SetDirectS3Upload(v bool) {
	o.DirectS3Upload = &v
}

// GetTimestampCreation returns the TimestampCreation field value if set, zero value otherwise.
func (o *CreateShareUploadChannelRequest) GetTimestampCreation() time.Time {
	if o == nil || IsNil(o.TimestampCreation) {
		var ret time.Time
		return ret
	}
	return *o.TimestampCreation
}

// GetTimestampCreationOk returns a tuple with the TimestampCreation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShareUploadChannelRequest) GetTimestampCreationOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimestampCreation) {
		return nil, false
	}
	return o.TimestampCreation, true
}

// HasTimestampCreation returns a boolean if a field has been set.
func (o *CreateShareUploadChannelRequest) HasTimestampCreation() bool {
	if o != nil && !IsNil(o.TimestampCreation) {
		return true
	}

	return false
}

// SetTimestampCreation gets a reference to the given time.Time and assigns it to the TimestampCreation field.
func (o *CreateShareUploadChannelRequest) SetTimestampCreation(v time.Time) {
	o.TimestampCreation = &v
}

// GetTimestampModification returns the TimestampModification field value if set, zero value otherwise.
func (o *CreateShareUploadChannelRequest) GetTimestampModification() time.Time {
	if o == nil || IsNil(o.TimestampModification) {
		var ret time.Time
		return ret
	}
	return *o.TimestampModification
}

// GetTimestampModificationOk returns a tuple with the TimestampModification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateShareUploadChannelRequest) GetTimestampModificationOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimestampModification) {
		return nil, false
	}
	return o.TimestampModification, true
}

// HasTimestampModification returns a boolean if a field has been set.
func (o *CreateShareUploadChannelRequest) HasTimestampModification() bool {
	if o != nil && !IsNil(o.TimestampModification) {
		return true
	}

	return false
}

// SetTimestampModification gets a reference to the given time.Time and assigns it to the TimestampModification field.
func (o *CreateShareUploadChannelRequest) SetTimestampModification(v time.Time) {
	o.TimestampModification = &v
}

func (o CreateShareUploadChannelRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateShareUploadChannelRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.DirectS3Upload) {
		toSerialize["directS3Upload"] = o.DirectS3Upload
	}
	if !IsNil(o.TimestampCreation) {
		toSerialize["timestampCreation"] = o.TimestampCreation
	}
	if !IsNil(o.TimestampModification) {
		toSerialize["timestampModification"] = o.TimestampModification
	}
	return toSerialize, nil
}

func (o *CreateShareUploadChannelRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateShareUploadChannelRequest := _CreateShareUploadChannelRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateShareUploadChannelRequest)

	if err != nil {
		return err
	}

	*o = CreateShareUploadChannelRequest(varCreateShareUploadChannelRequest)

	return err
}

type NullableCreateShareUploadChannelRequest struct {
	value *CreateShareUploadChannelRequest
	isSet bool
}

func (v NullableCreateShareUploadChannelRequest) Get() *CreateShareUploadChannelRequest {
	return v.value
}

func (v *NullableCreateShareUploadChannelRequest) Set(val *CreateShareUploadChannelRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateShareUploadChannelRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateShareUploadChannelRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateShareUploadChannelRequest(val *CreateShareUploadChannelRequest) *NullableCreateShareUploadChannelRequest {
	return &NullableCreateShareUploadChannelRequest{value: val, isSet: true}
}

func (v NullableCreateShareUploadChannelRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateShareUploadChannelRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
