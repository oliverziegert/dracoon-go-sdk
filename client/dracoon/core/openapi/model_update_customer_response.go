/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the UpdateCustomerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCustomerResponse{}

// UpdateCustomerResponse Customer information
type UpdateCustomerResponse struct {
	// Unique identifier for the customer
	Id int64 `json:"id"`
	// Company name
	CompanyName string `json:"companyName"`
	// Customer type
	CustomerContractType string `json:"customerContractType"`
	// Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
	QuotaMax int64 `json:"quotaMax"`
	// Maximal number of users
	UserMax int32 `json:"userMax"`
	// &#128640; Since v4.21.0  Customer UUID
	CustomerUuid string `json:"customerUuid"`
	// Customer is locked:  * `false` - unlocked  * `true` - locked    All users of this customer will be blocked and can not login anymore.
	IsLocked *bool `json:"isLocked,omitempty"`
	// Number of days left for trial period (relevant only for type `demo`)  (not used)
	TrialDays *int32 `json:"trialDays,omitempty"`
	// Creation date
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Modification date
	UpdatedAt          *time.Time          `json:"updatedAt,omitempty"`
	CustomerAttributes *CustomerAttributes `json:"customerAttributes,omitempty"`
	// Provider customer ID
	ProviderCustomerId *string `json:"providerCustomerId,omitempty"`
	// &#128640; Since v4.19.0  Maximal number of webhooks
	WebhooksMax *int64 `json:"webhooksMax,omitempty"`
	// &#128679; Deprecated since v4.8.0  Customer activation code string:  * valid only for types `free` and `demo`  * for `pay` customers it is empty
	// Deprecated
	ActivationCode *string `json:"activationCode,omitempty"`
	// &#128679; Deprecated since v4.7.0  Customer lock status:  * `false` - unlocked  * `true` - locked    Please use `isLocked` instead.  All users of this customer will be blocked and can not login anymore.
	// Deprecated
	LockStatus bool `json:"lockStatus"`
}

type _UpdateCustomerResponse UpdateCustomerResponse

// NewUpdateCustomerResponse instantiates a new UpdateCustomerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCustomerResponse(id int64, companyName string, customerContractType string, quotaMax int64, userMax int32, customerUuid string, lockStatus bool) *UpdateCustomerResponse {
	this := UpdateCustomerResponse{}
	this.Id = id
	this.CompanyName = companyName
	this.CustomerContractType = customerContractType
	this.QuotaMax = quotaMax
	this.UserMax = userMax
	this.CustomerUuid = customerUuid
	var isLocked bool = false
	this.IsLocked = &isLocked
	this.LockStatus = lockStatus
	return &this
}

// NewUpdateCustomerResponseWithDefaults instantiates a new UpdateCustomerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCustomerResponseWithDefaults() *UpdateCustomerResponse {
	this := UpdateCustomerResponse{}
	var isLocked bool = false
	this.IsLocked = &isLocked
	var lockStatus bool = false
	this.LockStatus = lockStatus
	return &this
}

// GetId returns the Id field value
func (o *UpdateCustomerResponse) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UpdateCustomerResponse) SetId(v int64) {
	o.Id = v
}

// GetCompanyName returns the CompanyName field value
func (o *UpdateCustomerResponse) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *UpdateCustomerResponse) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetCustomerContractType returns the CustomerContractType field value
func (o *UpdateCustomerResponse) GetCustomerContractType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerContractType
}

// GetCustomerContractTypeOk returns a tuple with the CustomerContractType field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetCustomerContractTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerContractType, true
}

// SetCustomerContractType sets field value
func (o *UpdateCustomerResponse) SetCustomerContractType(v string) {
	o.CustomerContractType = v
}

// GetQuotaMax returns the QuotaMax field value
func (o *UpdateCustomerResponse) GetQuotaMax() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QuotaMax
}

// GetQuotaMaxOk returns a tuple with the QuotaMax field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetQuotaMaxOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuotaMax, true
}

// SetQuotaMax sets field value
func (o *UpdateCustomerResponse) SetQuotaMax(v int64) {
	o.QuotaMax = v
}

// GetUserMax returns the UserMax field value
func (o *UpdateCustomerResponse) GetUserMax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserMax
}

// GetUserMaxOk returns a tuple with the UserMax field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetUserMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserMax, true
}

// SetUserMax sets field value
func (o *UpdateCustomerResponse) SetUserMax(v int32) {
	o.UserMax = v
}

// GetCustomerUuid returns the CustomerUuid field value
func (o *UpdateCustomerResponse) GetCustomerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerUuid
}

// GetCustomerUuidOk returns a tuple with the CustomerUuid field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetCustomerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerUuid, true
}

// SetCustomerUuid sets field value
func (o *UpdateCustomerResponse) SetCustomerUuid(v string) {
	o.CustomerUuid = v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *UpdateCustomerResponse) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetTrialDays returns the TrialDays field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetTrialDays() int32 {
	if o == nil || IsNil(o.TrialDays) {
		var ret int32
		return ret
	}
	return *o.TrialDays
}

// GetTrialDaysOk returns a tuple with the TrialDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetTrialDaysOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialDays) {
		return nil, false
	}
	return o.TrialDays, true
}

// HasTrialDays returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasTrialDays() bool {
	if o != nil && !IsNil(o.TrialDays) {
		return true
	}

	return false
}

// SetTrialDays gets a reference to the given int32 and assigns it to the TrialDays field.
func (o *UpdateCustomerResponse) SetTrialDays(v int32) {
	o.TrialDays = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *UpdateCustomerResponse) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *UpdateCustomerResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCustomerAttributes returns the CustomerAttributes field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetCustomerAttributes() CustomerAttributes {
	if o == nil || IsNil(o.CustomerAttributes) {
		var ret CustomerAttributes
		return ret
	}
	return *o.CustomerAttributes
}

// GetCustomerAttributesOk returns a tuple with the CustomerAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetCustomerAttributesOk() (*CustomerAttributes, bool) {
	if o == nil || IsNil(o.CustomerAttributes) {
		return nil, false
	}
	return o.CustomerAttributes, true
}

// HasCustomerAttributes returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasCustomerAttributes() bool {
	if o != nil && !IsNil(o.CustomerAttributes) {
		return true
	}

	return false
}

// SetCustomerAttributes gets a reference to the given CustomerAttributes and assigns it to the CustomerAttributes field.
func (o *UpdateCustomerResponse) SetCustomerAttributes(v CustomerAttributes) {
	o.CustomerAttributes = &v
}

// GetProviderCustomerId returns the ProviderCustomerId field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetProviderCustomerId() string {
	if o == nil || IsNil(o.ProviderCustomerId) {
		var ret string
		return ret
	}
	return *o.ProviderCustomerId
}

// GetProviderCustomerIdOk returns a tuple with the ProviderCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetProviderCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderCustomerId) {
		return nil, false
	}
	return o.ProviderCustomerId, true
}

// HasProviderCustomerId returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasProviderCustomerId() bool {
	if o != nil && !IsNil(o.ProviderCustomerId) {
		return true
	}

	return false
}

// SetProviderCustomerId gets a reference to the given string and assigns it to the ProviderCustomerId field.
func (o *UpdateCustomerResponse) SetProviderCustomerId(v string) {
	o.ProviderCustomerId = &v
}

// GetWebhooksMax returns the WebhooksMax field value if set, zero value otherwise.
func (o *UpdateCustomerResponse) GetWebhooksMax() int64 {
	if o == nil || IsNil(o.WebhooksMax) {
		var ret int64
		return ret
	}
	return *o.WebhooksMax
}

// GetWebhooksMaxOk returns a tuple with the WebhooksMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerResponse) GetWebhooksMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.WebhooksMax) {
		return nil, false
	}
	return o.WebhooksMax, true
}

// HasWebhooksMax returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasWebhooksMax() bool {
	if o != nil && !IsNil(o.WebhooksMax) {
		return true
	}

	return false
}

// SetWebhooksMax gets a reference to the given int64 and assigns it to the WebhooksMax field.
func (o *UpdateCustomerResponse) SetWebhooksMax(v int64) {
	o.WebhooksMax = &v
}

// GetActivationCode returns the ActivationCode field value if set, zero value otherwise.
// Deprecated
func (o *UpdateCustomerResponse) GetActivationCode() string {
	if o == nil || IsNil(o.ActivationCode) {
		var ret string
		return ret
	}
	return *o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateCustomerResponse) GetActivationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return o.ActivationCode, true
}

// HasActivationCode returns a boolean if a field has been set.
func (o *UpdateCustomerResponse) HasActivationCode() bool {
	if o != nil && !IsNil(o.ActivationCode) {
		return true
	}

	return false
}

// SetActivationCode gets a reference to the given string and assigns it to the ActivationCode field.
// Deprecated
func (o *UpdateCustomerResponse) SetActivationCode(v string) {
	o.ActivationCode = &v
}

// GetLockStatus returns the LockStatus field value
// Deprecated
func (o *UpdateCustomerResponse) GetLockStatus() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LockStatus
}

// GetLockStatusOk returns a tuple with the LockStatus field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateCustomerResponse) GetLockStatusOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockStatus, true
}

// SetLockStatus sets field value
// Deprecated
func (o *UpdateCustomerResponse) SetLockStatus(v bool) {
	o.LockStatus = v
}

func (o UpdateCustomerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCustomerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["companyName"] = o.CompanyName
	toSerialize["customerContractType"] = o.CustomerContractType
	toSerialize["quotaMax"] = o.QuotaMax
	toSerialize["userMax"] = o.UserMax
	toSerialize["customerUuid"] = o.CustomerUuid
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.TrialDays) {
		toSerialize["trialDays"] = o.TrialDays
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.CustomerAttributes) {
		toSerialize["customerAttributes"] = o.CustomerAttributes
	}
	if !IsNil(o.ProviderCustomerId) {
		toSerialize["providerCustomerId"] = o.ProviderCustomerId
	}
	if !IsNil(o.WebhooksMax) {
		toSerialize["webhooksMax"] = o.WebhooksMax
	}
	if !IsNil(o.ActivationCode) {
		toSerialize["activationCode"] = o.ActivationCode
	}
	toSerialize["lockStatus"] = o.LockStatus
	return toSerialize, nil
}

func (o *UpdateCustomerResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"companyName",
		"customerContractType",
		"quotaMax",
		"userMax",
		"customerUuid",
		"lockStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateCustomerResponse := _UpdateCustomerResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateCustomerResponse)

	if err != nil {
		return err
	}

	*o = UpdateCustomerResponse(varUpdateCustomerResponse)

	return err
}

type NullableUpdateCustomerResponse struct {
	value *UpdateCustomerResponse
	isSet bool
}

func (v NullableUpdateCustomerResponse) Get() *UpdateCustomerResponse {
	return v.value
}

func (v *NullableUpdateCustomerResponse) Set(val *UpdateCustomerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCustomerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCustomerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCustomerResponse(val *UpdateCustomerResponse) *NullableUpdateCustomerResponse {
	return &NullableUpdateCustomerResponse{value: val, isSet: true}
}

func (v NullableUpdateCustomerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCustomerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
