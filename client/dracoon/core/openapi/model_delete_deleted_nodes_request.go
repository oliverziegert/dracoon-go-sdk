/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DeleteDeletedNodesRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeleteDeletedNodesRequest{}

// DeleteDeletedNodesRequest Request model for deleting nodes from recycle bin
type DeleteDeletedNodesRequest struct {
	// List of deleted node IDs
	DeletedNodeIds []int64 `json:"deletedNodeIds"`
}

type _DeleteDeletedNodesRequest DeleteDeletedNodesRequest

// NewDeleteDeletedNodesRequest instantiates a new DeleteDeletedNodesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteDeletedNodesRequest(deletedNodeIds []int64) *DeleteDeletedNodesRequest {
	this := DeleteDeletedNodesRequest{}
	this.DeletedNodeIds = deletedNodeIds
	return &this
}

// NewDeleteDeletedNodesRequestWithDefaults instantiates a new DeleteDeletedNodesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteDeletedNodesRequestWithDefaults() *DeleteDeletedNodesRequest {
	this := DeleteDeletedNodesRequest{}
	return &this
}

// GetDeletedNodeIds returns the DeletedNodeIds field value
func (o *DeleteDeletedNodesRequest) GetDeletedNodeIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.DeletedNodeIds
}

// GetDeletedNodeIdsOk returns a tuple with the DeletedNodeIds field value
// and a boolean to check if the value has been set.
func (o *DeleteDeletedNodesRequest) GetDeletedNodeIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeletedNodeIds, true
}

// SetDeletedNodeIds sets field value
func (o *DeleteDeletedNodesRequest) SetDeletedNodeIds(v []int64) {
	o.DeletedNodeIds = v
}

func (o DeleteDeletedNodesRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeleteDeletedNodesRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deletedNodeIds"] = o.DeletedNodeIds
	return toSerialize, nil
}

func (o *DeleteDeletedNodesRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deletedNodeIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeleteDeletedNodesRequest := _DeleteDeletedNodesRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeleteDeletedNodesRequest)

	if err != nil {
		return err
	}

	*o = DeleteDeletedNodesRequest(varDeleteDeletedNodesRequest)

	return err
}

type NullableDeleteDeletedNodesRequest struct {
	value *DeleteDeletedNodesRequest
	isSet bool
}

func (v NullableDeleteDeletedNodesRequest) Get() *DeleteDeletedNodesRequest {
	return v.value
}

func (v *NullableDeleteDeletedNodesRequest) Set(val *DeleteDeletedNodesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteDeletedNodesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteDeletedNodesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteDeletedNodesRequest(val *DeleteDeletedNodesRequest) *NullableDeleteDeletedNodesRequest {
	return &NullableDeleteDeletedNodesRequest{value: val, isSet: true}
}

func (v NullableDeleteDeletedNodesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteDeletedNodesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
