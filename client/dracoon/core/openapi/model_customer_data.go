/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CustomerData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CustomerData{}

// CustomerData Customer information
type CustomerData struct {
	// Unique identifier for the customer
	Id int64 `json:"id"`
	// Customer name
	Name string `json:"name"`
	// Customer is Provider Customer
	IsProviderCustomer bool `json:"isProviderCustomer"`
	// Space limit (in bytes). -1 for unlimited
	SpaceLimit int64 `json:"spaceLimit"`
	// Space used (in bytes)
	SpaceUsed int64 `json:"spaceUsed"`
	// User accounts limit
	AccountsLimit int32 `json:"accountsLimit"`
	// User accounts used
	AccountsUsed int32 `json:"accountsUsed"`
	// Number of internal user accounts
	CntInternalUser int32 `json:"cntInternalUser"`
	// Number of guest user accounts
	CntGuestUser int32 `json:"cntGuestUser"`
	// Clientside encryption for customer enabled
	CustomerEncryptionEnabled bool `json:"customerEncryptionEnabled"`
}

type _CustomerData CustomerData

// NewCustomerData instantiates a new CustomerData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomerData(id int64, name string, isProviderCustomer bool, spaceLimit int64, spaceUsed int64, accountsLimit int32, accountsUsed int32, cntInternalUser int32, cntGuestUser int32, customerEncryptionEnabled bool) *CustomerData {
	this := CustomerData{}
	this.Id = id
	this.Name = name
	this.IsProviderCustomer = isProviderCustomer
	this.SpaceLimit = spaceLimit
	this.SpaceUsed = spaceUsed
	this.AccountsLimit = accountsLimit
	this.AccountsUsed = accountsUsed
	this.CntInternalUser = cntInternalUser
	this.CntGuestUser = cntGuestUser
	this.CustomerEncryptionEnabled = customerEncryptionEnabled
	return &this
}

// NewCustomerDataWithDefaults instantiates a new CustomerData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerDataWithDefaults() *CustomerData {
	this := CustomerData{}
	return &this
}

// GetId returns the Id field value
func (o *CustomerData) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CustomerData) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CustomerData) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CustomerData) SetName(v string) {
	o.Name = v
}

// GetIsProviderCustomer returns the IsProviderCustomer field value
func (o *CustomerData) GetIsProviderCustomer() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsProviderCustomer
}

// GetIsProviderCustomerOk returns a tuple with the IsProviderCustomer field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetIsProviderCustomerOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsProviderCustomer, true
}

// SetIsProviderCustomer sets field value
func (o *CustomerData) SetIsProviderCustomer(v bool) {
	o.IsProviderCustomer = v
}

// GetSpaceLimit returns the SpaceLimit field value
func (o *CustomerData) GetSpaceLimit() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SpaceLimit
}

// GetSpaceLimitOk returns a tuple with the SpaceLimit field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetSpaceLimitOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceLimit, true
}

// SetSpaceLimit sets field value
func (o *CustomerData) SetSpaceLimit(v int64) {
	o.SpaceLimit = v
}

// GetSpaceUsed returns the SpaceUsed field value
func (o *CustomerData) GetSpaceUsed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SpaceUsed
}

// GetSpaceUsedOk returns a tuple with the SpaceUsed field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetSpaceUsedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceUsed, true
}

// SetSpaceUsed sets field value
func (o *CustomerData) SetSpaceUsed(v int64) {
	o.SpaceUsed = v
}

// GetAccountsLimit returns the AccountsLimit field value
func (o *CustomerData) GetAccountsLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountsLimit
}

// GetAccountsLimitOk returns a tuple with the AccountsLimit field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetAccountsLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountsLimit, true
}

// SetAccountsLimit sets field value
func (o *CustomerData) SetAccountsLimit(v int32) {
	o.AccountsLimit = v
}

// GetAccountsUsed returns the AccountsUsed field value
func (o *CustomerData) GetAccountsUsed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AccountsUsed
}

// GetAccountsUsedOk returns a tuple with the AccountsUsed field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetAccountsUsedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccountsUsed, true
}

// SetAccountsUsed sets field value
func (o *CustomerData) SetAccountsUsed(v int32) {
	o.AccountsUsed = v
}

// GetCntInternalUser returns the CntInternalUser field value
func (o *CustomerData) GetCntInternalUser() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CntInternalUser
}

// GetCntInternalUserOk returns a tuple with the CntInternalUser field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetCntInternalUserOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CntInternalUser, true
}

// SetCntInternalUser sets field value
func (o *CustomerData) SetCntInternalUser(v int32) {
	o.CntInternalUser = v
}

// GetCntGuestUser returns the CntGuestUser field value
func (o *CustomerData) GetCntGuestUser() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CntGuestUser
}

// GetCntGuestUserOk returns a tuple with the CntGuestUser field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetCntGuestUserOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CntGuestUser, true
}

// SetCntGuestUser sets field value
func (o *CustomerData) SetCntGuestUser(v int32) {
	o.CntGuestUser = v
}

// GetCustomerEncryptionEnabled returns the CustomerEncryptionEnabled field value
func (o *CustomerData) GetCustomerEncryptionEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CustomerEncryptionEnabled
}

// GetCustomerEncryptionEnabledOk returns a tuple with the CustomerEncryptionEnabled field value
// and a boolean to check if the value has been set.
func (o *CustomerData) GetCustomerEncryptionEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerEncryptionEnabled, true
}

// SetCustomerEncryptionEnabled sets field value
func (o *CustomerData) SetCustomerEncryptionEnabled(v bool) {
	o.CustomerEncryptionEnabled = v
}

func (o CustomerData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CustomerData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["isProviderCustomer"] = o.IsProviderCustomer
	toSerialize["spaceLimit"] = o.SpaceLimit
	toSerialize["spaceUsed"] = o.SpaceUsed
	toSerialize["accountsLimit"] = o.AccountsLimit
	toSerialize["accountsUsed"] = o.AccountsUsed
	toSerialize["cntInternalUser"] = o.CntInternalUser
	toSerialize["cntGuestUser"] = o.CntGuestUser
	toSerialize["customerEncryptionEnabled"] = o.CustomerEncryptionEnabled
	return toSerialize, nil
}

func (o *CustomerData) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"isProviderCustomer",
		"spaceLimit",
		"spaceUsed",
		"accountsLimit",
		"accountsUsed",
		"cntInternalUser",
		"cntGuestUser",
		"customerEncryptionEnabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomerData := _CustomerData{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomerData)

	if err != nil {
		return err
	}

	*o = CustomerData(varCustomerData)

	return err
}

type NullableCustomerData struct {
	value *CustomerData
	isSet bool
}

func (v NullableCustomerData) Get() *CustomerData {
	return v.value
}

func (v *NullableCustomerData) Set(val *CustomerData) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomerData) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomerData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomerData(val *CustomerData) *NullableCustomerData {
	return &NullableCustomerData{value: val, isSet: true}
}

func (v NullableCustomerData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomerData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
