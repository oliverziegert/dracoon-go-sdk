/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the AuthTokenRestrictions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthTokenRestrictions{}

// AuthTokenRestrictions Auth token restrictions
type AuthTokenRestrictions struct {
	// &#128640; Since v4.13.0  Defines if OAuth token restrictions are enabled
	RestrictionEnabled *bool `json:"restrictionEnabled,omitempty"`
	// &#128640; Since v4.13.0  Restricted OAuth access token validity (in seconds)
	AccessTokenValidity *int32 `json:"accessTokenValidity,omitempty"`
	// &#128640; Since v4.13.0  Restricted OAuth refresh token validity (in seconds)
	RefreshTokenValidity *int32 `json:"refreshTokenValidity,omitempty"`
}

// NewAuthTokenRestrictions instantiates a new AuthTokenRestrictions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthTokenRestrictions() *AuthTokenRestrictions {
	this := AuthTokenRestrictions{}
	return &this
}

// NewAuthTokenRestrictionsWithDefaults instantiates a new AuthTokenRestrictions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthTokenRestrictionsWithDefaults() *AuthTokenRestrictions {
	this := AuthTokenRestrictions{}
	return &this
}

// GetRestrictionEnabled returns the RestrictionEnabled field value if set, zero value otherwise.
func (o *AuthTokenRestrictions) GetRestrictionEnabled() bool {
	if o == nil || IsNil(o.RestrictionEnabled) {
		var ret bool
		return ret
	}
	return *o.RestrictionEnabled
}

// GetRestrictionEnabledOk returns a tuple with the RestrictionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenRestrictions) GetRestrictionEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.RestrictionEnabled) {
		return nil, false
	}
	return o.RestrictionEnabled, true
}

// HasRestrictionEnabled returns a boolean if a field has been set.
func (o *AuthTokenRestrictions) HasRestrictionEnabled() bool {
	if o != nil && !IsNil(o.RestrictionEnabled) {
		return true
	}

	return false
}

// SetRestrictionEnabled gets a reference to the given bool and assigns it to the RestrictionEnabled field.
func (o *AuthTokenRestrictions) SetRestrictionEnabled(v bool) {
	o.RestrictionEnabled = &v
}

// GetAccessTokenValidity returns the AccessTokenValidity field value if set, zero value otherwise.
func (o *AuthTokenRestrictions) GetAccessTokenValidity() int32 {
	if o == nil || IsNil(o.AccessTokenValidity) {
		var ret int32
		return ret
	}
	return *o.AccessTokenValidity
}

// GetAccessTokenValidityOk returns a tuple with the AccessTokenValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenRestrictions) GetAccessTokenValidityOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessTokenValidity) {
		return nil, false
	}
	return o.AccessTokenValidity, true
}

// HasAccessTokenValidity returns a boolean if a field has been set.
func (o *AuthTokenRestrictions) HasAccessTokenValidity() bool {
	if o != nil && !IsNil(o.AccessTokenValidity) {
		return true
	}

	return false
}

// SetAccessTokenValidity gets a reference to the given int32 and assigns it to the AccessTokenValidity field.
func (o *AuthTokenRestrictions) SetAccessTokenValidity(v int32) {
	o.AccessTokenValidity = &v
}

// GetRefreshTokenValidity returns the RefreshTokenValidity field value if set, zero value otherwise.
func (o *AuthTokenRestrictions) GetRefreshTokenValidity() int32 {
	if o == nil || IsNil(o.RefreshTokenValidity) {
		var ret int32
		return ret
	}
	return *o.RefreshTokenValidity
}

// GetRefreshTokenValidityOk returns a tuple with the RefreshTokenValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthTokenRestrictions) GetRefreshTokenValidityOk() (*int32, bool) {
	if o == nil || IsNil(o.RefreshTokenValidity) {
		return nil, false
	}
	return o.RefreshTokenValidity, true
}

// HasRefreshTokenValidity returns a boolean if a field has been set.
func (o *AuthTokenRestrictions) HasRefreshTokenValidity() bool {
	if o != nil && !IsNil(o.RefreshTokenValidity) {
		return true
	}

	return false
}

// SetRefreshTokenValidity gets a reference to the given int32 and assigns it to the RefreshTokenValidity field.
func (o *AuthTokenRestrictions) SetRefreshTokenValidity(v int32) {
	o.RefreshTokenValidity = &v
}

func (o AuthTokenRestrictions) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthTokenRestrictions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RestrictionEnabled) {
		toSerialize["restrictionEnabled"] = o.RestrictionEnabled
	}
	if !IsNil(o.AccessTokenValidity) {
		toSerialize["accessTokenValidity"] = o.AccessTokenValidity
	}
	if !IsNil(o.RefreshTokenValidity) {
		toSerialize["refreshTokenValidity"] = o.RefreshTokenValidity
	}
	return toSerialize, nil
}

type NullableAuthTokenRestrictions struct {
	value *AuthTokenRestrictions
	isSet bool
}

func (v NullableAuthTokenRestrictions) Get() *AuthTokenRestrictions {
	return v.value
}

func (v *NullableAuthTokenRestrictions) Set(val *AuthTokenRestrictions) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthTokenRestrictions) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthTokenRestrictions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthTokenRestrictions(val *AuthTokenRestrictions) *NullableAuthTokenRestrictions {
	return &NullableAuthTokenRestrictions{value: val, isSet: true}
}

func (v NullableAuthTokenRestrictions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthTokenRestrictions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
