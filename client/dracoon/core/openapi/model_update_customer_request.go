/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateCustomerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCustomerRequest{}

// UpdateCustomerRequest Request model for updating a customer
type UpdateCustomerRequest struct {
	// Company name
	CompanyName *string `json:"companyName,omitempty"`
	// Customer type
	CustomerContractType string `json:"customerContractType"`
	// Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
	QuotaMax *int64 `json:"quotaMax,omitempty"`
	// Maximal number of users
	UserMax *int32 `json:"userMax,omitempty"`
	// Customer is locked:  * `false` - unlocked  * `true` - locked    All users of this customer will be blocked and can not login anymore.
	IsLocked *bool `json:"isLocked,omitempty"`
	// Provider customer ID
	ProviderCustomerId *string `json:"providerCustomerId,omitempty"`
	// &#128640; Since v4.19.0  Maximal number of webhooks
	WebhooksMax *int64 `json:"webhooksMax,omitempty"`
	// &#128679; Deprecated since v4.7.0  Customer lock status:  * `false` - unlocked  * `true` - locked    Please use `isLocked` instead.  All users of this customer will be blocked and can not login anymore.
	// Deprecated
	LockStatus *bool `json:"lockStatus,omitempty"`
}

type _UpdateCustomerRequest UpdateCustomerRequest

// NewUpdateCustomerRequest instantiates a new UpdateCustomerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCustomerRequest(customerContractType string) *UpdateCustomerRequest {
	this := UpdateCustomerRequest{}
	this.CustomerContractType = customerContractType
	var isLocked bool = false
	this.IsLocked = &isLocked
	var lockStatus bool = false
	this.LockStatus = &lockStatus
	return &this
}

// NewUpdateCustomerRequestWithDefaults instantiates a new UpdateCustomerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCustomerRequestWithDefaults() *UpdateCustomerRequest {
	this := UpdateCustomerRequest{}
	var isLocked bool = false
	this.IsLocked = &isLocked
	var lockStatus bool = false
	this.LockStatus = &lockStatus
	return &this
}

// GetCompanyName returns the CompanyName field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetCompanyName() string {
	if o == nil || IsNil(o.CompanyName) {
		var ret string
		return ret
	}
	return *o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetCompanyNameOk() (*string, bool) {
	if o == nil || IsNil(o.CompanyName) {
		return nil, false
	}
	return o.CompanyName, true
}

// HasCompanyName returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasCompanyName() bool {
	if o != nil && !IsNil(o.CompanyName) {
		return true
	}

	return false
}

// SetCompanyName gets a reference to the given string and assigns it to the CompanyName field.
func (o *UpdateCustomerRequest) SetCompanyName(v string) {
	o.CompanyName = &v
}

// GetCustomerContractType returns the CustomerContractType field value
func (o *UpdateCustomerRequest) GetCustomerContractType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerContractType
}

// GetCustomerContractTypeOk returns a tuple with the CustomerContractType field value
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetCustomerContractTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerContractType, true
}

// SetCustomerContractType sets field value
func (o *UpdateCustomerRequest) SetCustomerContractType(v string) {
	o.CustomerContractType = v
}

// GetQuotaMax returns the QuotaMax field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetQuotaMax() int64 {
	if o == nil || IsNil(o.QuotaMax) {
		var ret int64
		return ret
	}
	return *o.QuotaMax
}

// GetQuotaMaxOk returns a tuple with the QuotaMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetQuotaMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.QuotaMax) {
		return nil, false
	}
	return o.QuotaMax, true
}

// HasQuotaMax returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasQuotaMax() bool {
	if o != nil && !IsNil(o.QuotaMax) {
		return true
	}

	return false
}

// SetQuotaMax gets a reference to the given int64 and assigns it to the QuotaMax field.
func (o *UpdateCustomerRequest) SetQuotaMax(v int64) {
	o.QuotaMax = &v
}

// GetUserMax returns the UserMax field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetUserMax() int32 {
	if o == nil || IsNil(o.UserMax) {
		var ret int32
		return ret
	}
	return *o.UserMax
}

// GetUserMaxOk returns a tuple with the UserMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetUserMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.UserMax) {
		return nil, false
	}
	return o.UserMax, true
}

// HasUserMax returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasUserMax() bool {
	if o != nil && !IsNil(o.UserMax) {
		return true
	}

	return false
}

// SetUserMax gets a reference to the given int32 and assigns it to the UserMax field.
func (o *UpdateCustomerRequest) SetUserMax(v int32) {
	o.UserMax = &v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *UpdateCustomerRequest) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetProviderCustomerId returns the ProviderCustomerId field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetProviderCustomerId() string {
	if o == nil || IsNil(o.ProviderCustomerId) {
		var ret string
		return ret
	}
	return *o.ProviderCustomerId
}

// GetProviderCustomerIdOk returns a tuple with the ProviderCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetProviderCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderCustomerId) {
		return nil, false
	}
	return o.ProviderCustomerId, true
}

// HasProviderCustomerId returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasProviderCustomerId() bool {
	if o != nil && !IsNil(o.ProviderCustomerId) {
		return true
	}

	return false
}

// SetProviderCustomerId gets a reference to the given string and assigns it to the ProviderCustomerId field.
func (o *UpdateCustomerRequest) SetProviderCustomerId(v string) {
	o.ProviderCustomerId = &v
}

// GetWebhooksMax returns the WebhooksMax field value if set, zero value otherwise.
func (o *UpdateCustomerRequest) GetWebhooksMax() int64 {
	if o == nil || IsNil(o.WebhooksMax) {
		var ret int64
		return ret
	}
	return *o.WebhooksMax
}

// GetWebhooksMaxOk returns a tuple with the WebhooksMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomerRequest) GetWebhooksMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.WebhooksMax) {
		return nil, false
	}
	return o.WebhooksMax, true
}

// HasWebhooksMax returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasWebhooksMax() bool {
	if o != nil && !IsNil(o.WebhooksMax) {
		return true
	}

	return false
}

// SetWebhooksMax gets a reference to the given int64 and assigns it to the WebhooksMax field.
func (o *UpdateCustomerRequest) SetWebhooksMax(v int64) {
	o.WebhooksMax = &v
}

// GetLockStatus returns the LockStatus field value if set, zero value otherwise.
// Deprecated
func (o *UpdateCustomerRequest) GetLockStatus() bool {
	if o == nil || IsNil(o.LockStatus) {
		var ret bool
		return ret
	}
	return *o.LockStatus
}

// GetLockStatusOk returns a tuple with the LockStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateCustomerRequest) GetLockStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.LockStatus) {
		return nil, false
	}
	return o.LockStatus, true
}

// HasLockStatus returns a boolean if a field has been set.
func (o *UpdateCustomerRequest) HasLockStatus() bool {
	if o != nil && !IsNil(o.LockStatus) {
		return true
	}

	return false
}

// SetLockStatus gets a reference to the given bool and assigns it to the LockStatus field.
// Deprecated
func (o *UpdateCustomerRequest) SetLockStatus(v bool) {
	o.LockStatus = &v
}

func (o UpdateCustomerRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCustomerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompanyName) {
		toSerialize["companyName"] = o.CompanyName
	}
	toSerialize["customerContractType"] = o.CustomerContractType
	if !IsNil(o.QuotaMax) {
		toSerialize["quotaMax"] = o.QuotaMax
	}
	if !IsNil(o.UserMax) {
		toSerialize["userMax"] = o.UserMax
	}
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.ProviderCustomerId) {
		toSerialize["providerCustomerId"] = o.ProviderCustomerId
	}
	if !IsNil(o.WebhooksMax) {
		toSerialize["webhooksMax"] = o.WebhooksMax
	}
	if !IsNil(o.LockStatus) {
		toSerialize["lockStatus"] = o.LockStatus
	}
	return toSerialize, nil
}

func (o *UpdateCustomerRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customerContractType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateCustomerRequest := _UpdateCustomerRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateCustomerRequest)

	if err != nil {
		return err
	}

	*o = UpdateCustomerRequest(varUpdateCustomerRequest)

	return err
}

type NullableUpdateCustomerRequest struct {
	value *UpdateCustomerRequest
	isSet bool
}

func (v NullableUpdateCustomerRequest) Get() *UpdateCustomerRequest {
	return v.value
}

func (v *NullableUpdateCustomerRequest) Set(val *UpdateCustomerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCustomerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCustomerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCustomerRequest(val *UpdateCustomerRequest) *NullableUpdateCustomerRequest {
	return &NullableUpdateCustomerRequest{value: val, isSet: true}
}

func (v NullableUpdateCustomerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCustomerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
