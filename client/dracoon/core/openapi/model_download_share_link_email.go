/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the DownloadShareLinkEmail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DownloadShareLinkEmail{}

// DownloadShareLinkEmail Request model for sending an email of a Download Share link
type DownloadShareLinkEmail struct {
	// List of recipient email addresses
	Recipients []string `json:"recipients"`
	// Notification email content
	Body string `json:"body"`
	// Language tag for messages to receiver
	ReceiverLanguage *string `json:"receiverLanguage,omitempty"`
}

type _DownloadShareLinkEmail DownloadShareLinkEmail

// NewDownloadShareLinkEmail instantiates a new DownloadShareLinkEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDownloadShareLinkEmail(recipients []string, body string) *DownloadShareLinkEmail {
	this := DownloadShareLinkEmail{}
	this.Recipients = recipients
	this.Body = body
	return &this
}

// NewDownloadShareLinkEmailWithDefaults instantiates a new DownloadShareLinkEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDownloadShareLinkEmailWithDefaults() *DownloadShareLinkEmail {
	this := DownloadShareLinkEmail{}
	return &this
}

// GetRecipients returns the Recipients field value
func (o *DownloadShareLinkEmail) GetRecipients() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value
// and a boolean to check if the value has been set.
func (o *DownloadShareLinkEmail) GetRecipientsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Recipients, true
}

// SetRecipients sets field value
func (o *DownloadShareLinkEmail) SetRecipients(v []string) {
	o.Recipients = v
}

// GetBody returns the Body field value
func (o *DownloadShareLinkEmail) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *DownloadShareLinkEmail) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *DownloadShareLinkEmail) SetBody(v string) {
	o.Body = v
}

// GetReceiverLanguage returns the ReceiverLanguage field value if set, zero value otherwise.
func (o *DownloadShareLinkEmail) GetReceiverLanguage() string {
	if o == nil || IsNil(o.ReceiverLanguage) {
		var ret string
		return ret
	}
	return *o.ReceiverLanguage
}

// GetReceiverLanguageOk returns a tuple with the ReceiverLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DownloadShareLinkEmail) GetReceiverLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverLanguage) {
		return nil, false
	}
	return o.ReceiverLanguage, true
}

// HasReceiverLanguage returns a boolean if a field has been set.
func (o *DownloadShareLinkEmail) HasReceiverLanguage() bool {
	if o != nil && !IsNil(o.ReceiverLanguage) {
		return true
	}

	return false
}

// SetReceiverLanguage gets a reference to the given string and assigns it to the ReceiverLanguage field.
func (o *DownloadShareLinkEmail) SetReceiverLanguage(v string) {
	o.ReceiverLanguage = &v
}

func (o DownloadShareLinkEmail) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DownloadShareLinkEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recipients"] = o.Recipients
	toSerialize["body"] = o.Body
	if !IsNil(o.ReceiverLanguage) {
		toSerialize["receiverLanguage"] = o.ReceiverLanguage
	}
	return toSerialize, nil
}

func (o *DownloadShareLinkEmail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"recipients",
		"body",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDownloadShareLinkEmail := _DownloadShareLinkEmail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDownloadShareLinkEmail)

	if err != nil {
		return err
	}

	*o = DownloadShareLinkEmail(varDownloadShareLinkEmail)

	return err
}

type NullableDownloadShareLinkEmail struct {
	value *DownloadShareLinkEmail
	isSet bool
}

func (v NullableDownloadShareLinkEmail) Get() *DownloadShareLinkEmail {
	return v.value
}

func (v *NullableDownloadShareLinkEmail) Set(val *DownloadShareLinkEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableDownloadShareLinkEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableDownloadShareLinkEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDownloadShareLinkEmail(val *DownloadShareLinkEmail) *NullableDownloadShareLinkEmail {
	return &NullableDownloadShareLinkEmail{value: val, isSet: true}
}

func (v NullableDownloadShareLinkEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDownloadShareLinkEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
