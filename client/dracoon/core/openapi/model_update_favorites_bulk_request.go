/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateFavoritesBulkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFavoritesBulkRequest{}

// UpdateFavoritesBulkRequest Request model for updating favorites
type UpdateFavoritesBulkRequest struct {
	// Sets the favorite attribute to true or false on each file in an array of nodes.
	IsFavorite bool `json:"isFavorite"`
	// List of ids
	ObjectIds []int64 `json:"objectIds"`
}

type _UpdateFavoritesBulkRequest UpdateFavoritesBulkRequest

// NewUpdateFavoritesBulkRequest instantiates a new UpdateFavoritesBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFavoritesBulkRequest(isFavorite bool, objectIds []int64) *UpdateFavoritesBulkRequest {
	this := UpdateFavoritesBulkRequest{}
	this.IsFavorite = isFavorite
	this.ObjectIds = objectIds
	return &this
}

// NewUpdateFavoritesBulkRequestWithDefaults instantiates a new UpdateFavoritesBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFavoritesBulkRequestWithDefaults() *UpdateFavoritesBulkRequest {
	this := UpdateFavoritesBulkRequest{}
	return &this
}

// GetIsFavorite returns the IsFavorite field value
func (o *UpdateFavoritesBulkRequest) GetIsFavorite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsFavorite
}

// GetIsFavoriteOk returns a tuple with the IsFavorite field value
// and a boolean to check if the value has been set.
func (o *UpdateFavoritesBulkRequest) GetIsFavoriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsFavorite, true
}

// SetIsFavorite sets field value
func (o *UpdateFavoritesBulkRequest) SetIsFavorite(v bool) {
	o.IsFavorite = v
}

// GetObjectIds returns the ObjectIds field value
func (o *UpdateFavoritesBulkRequest) GetObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value
// and a boolean to check if the value has been set.
func (o *UpdateFavoritesBulkRequest) GetObjectIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// SetObjectIds sets field value
func (o *UpdateFavoritesBulkRequest) SetObjectIds(v []int64) {
	o.ObjectIds = v
}

func (o UpdateFavoritesBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFavoritesBulkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["isFavorite"] = o.IsFavorite
	toSerialize["objectIds"] = o.ObjectIds
	return toSerialize, nil
}

func (o *UpdateFavoritesBulkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"isFavorite",
		"objectIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateFavoritesBulkRequest := _UpdateFavoritesBulkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateFavoritesBulkRequest)

	if err != nil {
		return err
	}

	*o = UpdateFavoritesBulkRequest(varUpdateFavoritesBulkRequest)

	return err
}

type NullableUpdateFavoritesBulkRequest struct {
	value *UpdateFavoritesBulkRequest
	isSet bool
}

func (v NullableUpdateFavoritesBulkRequest) Get() *UpdateFavoritesBulkRequest {
	return v.value
}

func (v *NullableUpdateFavoritesBulkRequest) Set(val *UpdateFavoritesBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFavoritesBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFavoritesBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFavoritesBulkRequest(val *UpdateFavoritesBulkRequest) *NullableUpdateFavoritesBulkRequest {
	return &NullableUpdateFavoritesBulkRequest{value: val, isSet: true}
}

func (v NullableUpdateFavoritesBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFavoritesBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
