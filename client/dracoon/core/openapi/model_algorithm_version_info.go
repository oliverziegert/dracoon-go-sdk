/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the AlgorithmVersionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlgorithmVersionInfo{}

// AlgorithmVersionInfo Algorithm information
type AlgorithmVersionInfo struct {
	// Algorithm version
	Version string `json:"version"`
	// Algorithm description
	Description string `json:"description"`
	// Algorithm status  Derived from preference value and threshold
	Status string `json:"status"`
}

type _AlgorithmVersionInfo AlgorithmVersionInfo

// NewAlgorithmVersionInfo instantiates a new AlgorithmVersionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlgorithmVersionInfo(version string, description string, status string) *AlgorithmVersionInfo {
	this := AlgorithmVersionInfo{}
	this.Version = version
	this.Description = description
	this.Status = status
	return &this
}

// NewAlgorithmVersionInfoWithDefaults instantiates a new AlgorithmVersionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlgorithmVersionInfoWithDefaults() *AlgorithmVersionInfo {
	this := AlgorithmVersionInfo{}
	return &this
}

// GetVersion returns the Version field value
func (o *AlgorithmVersionInfo) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *AlgorithmVersionInfo) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *AlgorithmVersionInfo) SetVersion(v string) {
	o.Version = v
}

// GetDescription returns the Description field value
func (o *AlgorithmVersionInfo) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *AlgorithmVersionInfo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *AlgorithmVersionInfo) SetDescription(v string) {
	o.Description = v
}

// GetStatus returns the Status field value
func (o *AlgorithmVersionInfo) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *AlgorithmVersionInfo) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *AlgorithmVersionInfo) SetStatus(v string) {
	o.Status = v
}

func (o AlgorithmVersionInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlgorithmVersionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["description"] = o.Description
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *AlgorithmVersionInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"description",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlgorithmVersionInfo := _AlgorithmVersionInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlgorithmVersionInfo)

	if err != nil {
		return err
	}

	*o = AlgorithmVersionInfo(varAlgorithmVersionInfo)

	return err
}

type NullableAlgorithmVersionInfo struct {
	value *AlgorithmVersionInfo
	isSet bool
}

func (v NullableAlgorithmVersionInfo) Get() *AlgorithmVersionInfo {
	return v.value
}

func (v *NullableAlgorithmVersionInfo) Set(val *AlgorithmVersionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAlgorithmVersionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAlgorithmVersionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlgorithmVersionInfo(val *AlgorithmVersionInfo) *NullableAlgorithmVersionInfo {
	return &NullableAlgorithmVersionInfo{value: val, isSet: true}
}

func (v NullableAlgorithmVersionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlgorithmVersionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
