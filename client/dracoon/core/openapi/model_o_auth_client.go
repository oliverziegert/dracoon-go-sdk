/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OAuthClient type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OAuthClient{}

// OAuthClient OAuth client information
type OAuthClient struct {
	// ID of the OAuth client
	ClientId string `json:"clientId"`
	// Secret, which client uses at authentication.
	ClientSecret *string `json:"clientSecret,omitempty"`
	// Name, which is shown at the client configuration and authorization.
	ClientName *string `json:"clientName,omitempty"`
	// Determines whether client is a confidential or public client.
	ClientType *string `json:"clientType,omitempty"`
	// Determines whether client is a standard client.
	IsStandard *bool `json:"isStandard,omitempty"`
	// Determines whether client is an external client.
	IsExternal *bool `json:"isExternal,omitempty"`
	// Determines whether client is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty"`
	// Authorized grant types  * `authorization_code`  * `implicit`  * `password`  * `client_credentials`  * `refresh_token`    cf. [RFC 6749](https://tools.ietf.org/html/rfc6749)
	GrantTypes []string `json:"grantTypes"`
	// URIs, to which a user is redirected after authorization.
	RedirectUris []string `json:"redirectUris,omitempty"`
	// Validity of the access token in seconds.
	AccessTokenValidity *int32 `json:"accessTokenValidity,omitempty"`
	// Validity of the refresh token in seconds.
	RefreshTokenValidity *int32 `json:"refreshTokenValidity,omitempty"`
	// &#128640; Since v4.22.0  Validity of the approval interval in seconds.
	ApprovalValidity *int32 `json:"approvalValidity,omitempty"`
}

type _OAuthClient OAuthClient

// NewOAuthClient instantiates a new OAuthClient object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOAuthClient(clientId string, grantTypes []string) *OAuthClient {
	this := OAuthClient{}
	this.ClientId = clientId
	this.GrantTypes = grantTypes
	return &this
}

// NewOAuthClientWithDefaults instantiates a new OAuthClient object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOAuthClientWithDefaults() *OAuthClient {
	this := OAuthClient{}
	return &this
}

// GetClientId returns the ClientId field value
func (o *OAuthClient) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *OAuthClient) SetClientId(v string) {
	o.ClientId = v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *OAuthClient) GetClientSecret() string {
	if o == nil || IsNil(o.ClientSecret) {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *OAuthClient) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *OAuthClient) SetClientSecret(v string) {
	o.ClientSecret = &v
}

// GetClientName returns the ClientName field value if set, zero value otherwise.
func (o *OAuthClient) GetClientName() string {
	if o == nil || IsNil(o.ClientName) {
		var ret string
		return ret
	}
	return *o.ClientName
}

// GetClientNameOk returns a tuple with the ClientName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetClientNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClientName) {
		return nil, false
	}
	return o.ClientName, true
}

// HasClientName returns a boolean if a field has been set.
func (o *OAuthClient) HasClientName() bool {
	if o != nil && !IsNil(o.ClientName) {
		return true
	}

	return false
}

// SetClientName gets a reference to the given string and assigns it to the ClientName field.
func (o *OAuthClient) SetClientName(v string) {
	o.ClientName = &v
}

// GetClientType returns the ClientType field value if set, zero value otherwise.
func (o *OAuthClient) GetClientType() string {
	if o == nil || IsNil(o.ClientType) {
		var ret string
		return ret
	}
	return *o.ClientType
}

// GetClientTypeOk returns a tuple with the ClientType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetClientTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ClientType) {
		return nil, false
	}
	return o.ClientType, true
}

// HasClientType returns a boolean if a field has been set.
func (o *OAuthClient) HasClientType() bool {
	if o != nil && !IsNil(o.ClientType) {
		return true
	}

	return false
}

// SetClientType gets a reference to the given string and assigns it to the ClientType field.
func (o *OAuthClient) SetClientType(v string) {
	o.ClientType = &v
}

// GetIsStandard returns the IsStandard field value if set, zero value otherwise.
func (o *OAuthClient) GetIsStandard() bool {
	if o == nil || IsNil(o.IsStandard) {
		var ret bool
		return ret
	}
	return *o.IsStandard
}

// GetIsStandardOk returns a tuple with the IsStandard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetIsStandardOk() (*bool, bool) {
	if o == nil || IsNil(o.IsStandard) {
		return nil, false
	}
	return o.IsStandard, true
}

// HasIsStandard returns a boolean if a field has been set.
func (o *OAuthClient) HasIsStandard() bool {
	if o != nil && !IsNil(o.IsStandard) {
		return true
	}

	return false
}

// SetIsStandard gets a reference to the given bool and assigns it to the IsStandard field.
func (o *OAuthClient) SetIsStandard(v bool) {
	o.IsStandard = &v
}

// GetIsExternal returns the IsExternal field value if set, zero value otherwise.
func (o *OAuthClient) GetIsExternal() bool {
	if o == nil || IsNil(o.IsExternal) {
		var ret bool
		return ret
	}
	return *o.IsExternal
}

// GetIsExternalOk returns a tuple with the IsExternal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetIsExternalOk() (*bool, bool) {
	if o == nil || IsNil(o.IsExternal) {
		return nil, false
	}
	return o.IsExternal, true
}

// HasIsExternal returns a boolean if a field has been set.
func (o *OAuthClient) HasIsExternal() bool {
	if o != nil && !IsNil(o.IsExternal) {
		return true
	}

	return false
}

// SetIsExternal gets a reference to the given bool and assigns it to the IsExternal field.
func (o *OAuthClient) SetIsExternal(v bool) {
	o.IsExternal = &v
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *OAuthClient) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *OAuthClient) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *OAuthClient) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetGrantTypes returns the GrantTypes field value
func (o *OAuthClient) GetGrantTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.GrantTypes
}

// GetGrantTypesOk returns a tuple with the GrantTypes field value
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetGrantTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GrantTypes, true
}

// SetGrantTypes sets field value
func (o *OAuthClient) SetGrantTypes(v []string) {
	o.GrantTypes = v
}

// GetRedirectUris returns the RedirectUris field value if set, zero value otherwise.
func (o *OAuthClient) GetRedirectUris() []string {
	if o == nil || IsNil(o.RedirectUris) {
		var ret []string
		return ret
	}
	return o.RedirectUris
}

// GetRedirectUrisOk returns a tuple with the RedirectUris field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetRedirectUrisOk() ([]string, bool) {
	if o == nil || IsNil(o.RedirectUris) {
		return nil, false
	}
	return o.RedirectUris, true
}

// HasRedirectUris returns a boolean if a field has been set.
func (o *OAuthClient) HasRedirectUris() bool {
	if o != nil && !IsNil(o.RedirectUris) {
		return true
	}

	return false
}

// SetRedirectUris gets a reference to the given []string and assigns it to the RedirectUris field.
func (o *OAuthClient) SetRedirectUris(v []string) {
	o.RedirectUris = v
}

// GetAccessTokenValidity returns the AccessTokenValidity field value if set, zero value otherwise.
func (o *OAuthClient) GetAccessTokenValidity() int32 {
	if o == nil || IsNil(o.AccessTokenValidity) {
		var ret int32
		return ret
	}
	return *o.AccessTokenValidity
}

// GetAccessTokenValidityOk returns a tuple with the AccessTokenValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetAccessTokenValidityOk() (*int32, bool) {
	if o == nil || IsNil(o.AccessTokenValidity) {
		return nil, false
	}
	return o.AccessTokenValidity, true
}

// HasAccessTokenValidity returns a boolean if a field has been set.
func (o *OAuthClient) HasAccessTokenValidity() bool {
	if o != nil && !IsNil(o.AccessTokenValidity) {
		return true
	}

	return false
}

// SetAccessTokenValidity gets a reference to the given int32 and assigns it to the AccessTokenValidity field.
func (o *OAuthClient) SetAccessTokenValidity(v int32) {
	o.AccessTokenValidity = &v
}

// GetRefreshTokenValidity returns the RefreshTokenValidity field value if set, zero value otherwise.
func (o *OAuthClient) GetRefreshTokenValidity() int32 {
	if o == nil || IsNil(o.RefreshTokenValidity) {
		var ret int32
		return ret
	}
	return *o.RefreshTokenValidity
}

// GetRefreshTokenValidityOk returns a tuple with the RefreshTokenValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetRefreshTokenValidityOk() (*int32, bool) {
	if o == nil || IsNil(o.RefreshTokenValidity) {
		return nil, false
	}
	return o.RefreshTokenValidity, true
}

// HasRefreshTokenValidity returns a boolean if a field has been set.
func (o *OAuthClient) HasRefreshTokenValidity() bool {
	if o != nil && !IsNil(o.RefreshTokenValidity) {
		return true
	}

	return false
}

// SetRefreshTokenValidity gets a reference to the given int32 and assigns it to the RefreshTokenValidity field.
func (o *OAuthClient) SetRefreshTokenValidity(v int32) {
	o.RefreshTokenValidity = &v
}

// GetApprovalValidity returns the ApprovalValidity field value if set, zero value otherwise.
func (o *OAuthClient) GetApprovalValidity() int32 {
	if o == nil || IsNil(o.ApprovalValidity) {
		var ret int32
		return ret
	}
	return *o.ApprovalValidity
}

// GetApprovalValidityOk returns a tuple with the ApprovalValidity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OAuthClient) GetApprovalValidityOk() (*int32, bool) {
	if o == nil || IsNil(o.ApprovalValidity) {
		return nil, false
	}
	return o.ApprovalValidity, true
}

// HasApprovalValidity returns a boolean if a field has been set.
func (o *OAuthClient) HasApprovalValidity() bool {
	if o != nil && !IsNil(o.ApprovalValidity) {
		return true
	}

	return false
}

// SetApprovalValidity gets a reference to the given int32 and assigns it to the ApprovalValidity field.
func (o *OAuthClient) SetApprovalValidity(v int32) {
	o.ApprovalValidity = &v
}

func (o OAuthClient) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OAuthClient) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["clientId"] = o.ClientId
	if !IsNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if !IsNil(o.ClientName) {
		toSerialize["clientName"] = o.ClientName
	}
	if !IsNil(o.ClientType) {
		toSerialize["clientType"] = o.ClientType
	}
	if !IsNil(o.IsStandard) {
		toSerialize["isStandard"] = o.IsStandard
	}
	if !IsNil(o.IsExternal) {
		toSerialize["isExternal"] = o.IsExternal
	}
	if !IsNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	toSerialize["grantTypes"] = o.GrantTypes
	if !IsNil(o.RedirectUris) {
		toSerialize["redirectUris"] = o.RedirectUris
	}
	if !IsNil(o.AccessTokenValidity) {
		toSerialize["accessTokenValidity"] = o.AccessTokenValidity
	}
	if !IsNil(o.RefreshTokenValidity) {
		toSerialize["refreshTokenValidity"] = o.RefreshTokenValidity
	}
	if !IsNil(o.ApprovalValidity) {
		toSerialize["approvalValidity"] = o.ApprovalValidity
	}
	return toSerialize, nil
}

func (o *OAuthClient) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientId",
		"grantTypes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOAuthClient := _OAuthClient{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOAuthClient)

	if err != nil {
		return err
	}

	*o = OAuthClient(varOAuthClient)

	return err
}

type NullableOAuthClient struct {
	value *OAuthClient
	isSet bool
}

func (v NullableOAuthClient) Get() *OAuthClient {
	return v.value
}

func (v *NullableOAuthClient) Set(val *OAuthClient) {
	v.value = val
	v.isSet = true
}

func (v NullableOAuthClient) IsSet() bool {
	return v.isSet
}

func (v *NullableOAuthClient) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOAuthClient(val *OAuthClient) *NullableOAuthClient {
	return &NullableOAuthClient{value: val, isSet: true}
}

func (v NullableOAuthClient) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOAuthClient) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
