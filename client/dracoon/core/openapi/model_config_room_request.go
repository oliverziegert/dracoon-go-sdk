/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfigRoomRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfigRoomRequest{}

// ConfigRoomRequest Request model for configuring a room
type ConfigRoomRequest struct {
	// Retention period for deleted nodes in days
	RecycleBinRetentionPeriod *int32 `json:"recycleBinRetentionPeriod,omitempty"`
	// Inherit permissions from parent room  (default: `false` if `parentId` is `0`; otherwise: `true`)
	InheritPermissions *bool `json:"inheritPermissions,omitempty"`
	// Take over existing permissions
	TakeOverPermissions *bool `json:"takeOverPermissions,omitempty"`
	// List of user ids  A room requires at least one admin (user or group)
	AdminIds []int64 `json:"adminIds,omitempty"`
	// List of group ids  A room requires at least one admin (user or group)
	AdminGroupIds []int64 `json:"adminGroupIds,omitempty"`
	// Behaviour when new users are added to the group:  * `autoallow`  * `pending`    Only relevant if `adminGroupIds` has items.
	NewGroupMemberAcceptance *string `json:"newGroupMemberAcceptance,omitempty"`
	// Is activities log active (for rooms only)
	HasActivitiesLog *bool `json:"hasActivitiesLog,omitempty"`
	// Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential    Provided (or default) classification is taken from room  when file gets uploaded without any classification.
	Classification *int32 `json:"classification,omitempty"`
}

// NewConfigRoomRequest instantiates a new ConfigRoomRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfigRoomRequest() *ConfigRoomRequest {
	this := ConfigRoomRequest{}
	var newGroupMemberAcceptance string = "autoallow"
	this.NewGroupMemberAcceptance = &newGroupMemberAcceptance
	var hasActivitiesLog bool = true
	this.HasActivitiesLog = &hasActivitiesLog
	var classification int32 = 2
	this.Classification = &classification
	return &this
}

// NewConfigRoomRequestWithDefaults instantiates a new ConfigRoomRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfigRoomRequestWithDefaults() *ConfigRoomRequest {
	this := ConfigRoomRequest{}
	var newGroupMemberAcceptance string = "autoallow"
	this.NewGroupMemberAcceptance = &newGroupMemberAcceptance
	var hasActivitiesLog bool = true
	this.HasActivitiesLog = &hasActivitiesLog
	var classification int32 = 2
	this.Classification = &classification
	return &this
}

// GetRecycleBinRetentionPeriod returns the RecycleBinRetentionPeriod field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetRecycleBinRetentionPeriod() int32 {
	if o == nil || IsNil(o.RecycleBinRetentionPeriod) {
		var ret int32
		return ret
	}
	return *o.RecycleBinRetentionPeriod
}

// GetRecycleBinRetentionPeriodOk returns a tuple with the RecycleBinRetentionPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetRecycleBinRetentionPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.RecycleBinRetentionPeriod) {
		return nil, false
	}
	return o.RecycleBinRetentionPeriod, true
}

// HasRecycleBinRetentionPeriod returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasRecycleBinRetentionPeriod() bool {
	if o != nil && !IsNil(o.RecycleBinRetentionPeriod) {
		return true
	}

	return false
}

// SetRecycleBinRetentionPeriod gets a reference to the given int32 and assigns it to the RecycleBinRetentionPeriod field.
func (o *ConfigRoomRequest) SetRecycleBinRetentionPeriod(v int32) {
	o.RecycleBinRetentionPeriod = &v
}

// GetInheritPermissions returns the InheritPermissions field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetInheritPermissions() bool {
	if o == nil || IsNil(o.InheritPermissions) {
		var ret bool
		return ret
	}
	return *o.InheritPermissions
}

// GetInheritPermissionsOk returns a tuple with the InheritPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetInheritPermissionsOk() (*bool, bool) {
	if o == nil || IsNil(o.InheritPermissions) {
		return nil, false
	}
	return o.InheritPermissions, true
}

// HasInheritPermissions returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasInheritPermissions() bool {
	if o != nil && !IsNil(o.InheritPermissions) {
		return true
	}

	return false
}

// SetInheritPermissions gets a reference to the given bool and assigns it to the InheritPermissions field.
func (o *ConfigRoomRequest) SetInheritPermissions(v bool) {
	o.InheritPermissions = &v
}

// GetTakeOverPermissions returns the TakeOverPermissions field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetTakeOverPermissions() bool {
	if o == nil || IsNil(o.TakeOverPermissions) {
		var ret bool
		return ret
	}
	return *o.TakeOverPermissions
}

// GetTakeOverPermissionsOk returns a tuple with the TakeOverPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetTakeOverPermissionsOk() (*bool, bool) {
	if o == nil || IsNil(o.TakeOverPermissions) {
		return nil, false
	}
	return o.TakeOverPermissions, true
}

// HasTakeOverPermissions returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasTakeOverPermissions() bool {
	if o != nil && !IsNil(o.TakeOverPermissions) {
		return true
	}

	return false
}

// SetTakeOverPermissions gets a reference to the given bool and assigns it to the TakeOverPermissions field.
func (o *ConfigRoomRequest) SetTakeOverPermissions(v bool) {
	o.TakeOverPermissions = &v
}

// GetAdminIds returns the AdminIds field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetAdminIds() []int64 {
	if o == nil || IsNil(o.AdminIds) {
		var ret []int64
		return ret
	}
	return o.AdminIds
}

// GetAdminIdsOk returns a tuple with the AdminIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetAdminIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AdminIds) {
		return nil, false
	}
	return o.AdminIds, true
}

// HasAdminIds returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasAdminIds() bool {
	if o != nil && !IsNil(o.AdminIds) {
		return true
	}

	return false
}

// SetAdminIds gets a reference to the given []int64 and assigns it to the AdminIds field.
func (o *ConfigRoomRequest) SetAdminIds(v []int64) {
	o.AdminIds = v
}

// GetAdminGroupIds returns the AdminGroupIds field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetAdminGroupIds() []int64 {
	if o == nil || IsNil(o.AdminGroupIds) {
		var ret []int64
		return ret
	}
	return o.AdminGroupIds
}

// GetAdminGroupIdsOk returns a tuple with the AdminGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetAdminGroupIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AdminGroupIds) {
		return nil, false
	}
	return o.AdminGroupIds, true
}

// HasAdminGroupIds returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasAdminGroupIds() bool {
	if o != nil && !IsNil(o.AdminGroupIds) {
		return true
	}

	return false
}

// SetAdminGroupIds gets a reference to the given []int64 and assigns it to the AdminGroupIds field.
func (o *ConfigRoomRequest) SetAdminGroupIds(v []int64) {
	o.AdminGroupIds = v
}

// GetNewGroupMemberAcceptance returns the NewGroupMemberAcceptance field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetNewGroupMemberAcceptance() string {
	if o == nil || IsNil(o.NewGroupMemberAcceptance) {
		var ret string
		return ret
	}
	return *o.NewGroupMemberAcceptance
}

// GetNewGroupMemberAcceptanceOk returns a tuple with the NewGroupMemberAcceptance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetNewGroupMemberAcceptanceOk() (*string, bool) {
	if o == nil || IsNil(o.NewGroupMemberAcceptance) {
		return nil, false
	}
	return o.NewGroupMemberAcceptance, true
}

// HasNewGroupMemberAcceptance returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasNewGroupMemberAcceptance() bool {
	if o != nil && !IsNil(o.NewGroupMemberAcceptance) {
		return true
	}

	return false
}

// SetNewGroupMemberAcceptance gets a reference to the given string and assigns it to the NewGroupMemberAcceptance field.
func (o *ConfigRoomRequest) SetNewGroupMemberAcceptance(v string) {
	o.NewGroupMemberAcceptance = &v
}

// GetHasActivitiesLog returns the HasActivitiesLog field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetHasActivitiesLog() bool {
	if o == nil || IsNil(o.HasActivitiesLog) {
		var ret bool
		return ret
	}
	return *o.HasActivitiesLog
}

// GetHasActivitiesLogOk returns a tuple with the HasActivitiesLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetHasActivitiesLogOk() (*bool, bool) {
	if o == nil || IsNil(o.HasActivitiesLog) {
		return nil, false
	}
	return o.HasActivitiesLog, true
}

// HasHasActivitiesLog returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasHasActivitiesLog() bool {
	if o != nil && !IsNil(o.HasActivitiesLog) {
		return true
	}

	return false
}

// SetHasActivitiesLog gets a reference to the given bool and assigns it to the HasActivitiesLog field.
func (o *ConfigRoomRequest) SetHasActivitiesLog(v bool) {
	o.HasActivitiesLog = &v
}

// GetClassification returns the Classification field value if set, zero value otherwise.
func (o *ConfigRoomRequest) GetClassification() int32 {
	if o == nil || IsNil(o.Classification) {
		var ret int32
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfigRoomRequest) GetClassificationOk() (*int32, bool) {
	if o == nil || IsNil(o.Classification) {
		return nil, false
	}
	return o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *ConfigRoomRequest) HasClassification() bool {
	if o != nil && !IsNil(o.Classification) {
		return true
	}

	return false
}

// SetClassification gets a reference to the given int32 and assigns it to the Classification field.
func (o *ConfigRoomRequest) SetClassification(v int32) {
	o.Classification = &v
}

func (o ConfigRoomRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfigRoomRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecycleBinRetentionPeriod) {
		toSerialize["recycleBinRetentionPeriod"] = o.RecycleBinRetentionPeriod
	}
	if !IsNil(o.InheritPermissions) {
		toSerialize["inheritPermissions"] = o.InheritPermissions
	}
	if !IsNil(o.TakeOverPermissions) {
		toSerialize["takeOverPermissions"] = o.TakeOverPermissions
	}
	if !IsNil(o.AdminIds) {
		toSerialize["adminIds"] = o.AdminIds
	}
	if !IsNil(o.AdminGroupIds) {
		toSerialize["adminGroupIds"] = o.AdminGroupIds
	}
	if !IsNil(o.NewGroupMemberAcceptance) {
		toSerialize["newGroupMemberAcceptance"] = o.NewGroupMemberAcceptance
	}
	if !IsNil(o.HasActivitiesLog) {
		toSerialize["hasActivitiesLog"] = o.HasActivitiesLog
	}
	if !IsNil(o.Classification) {
		toSerialize["classification"] = o.Classification
	}
	return toSerialize, nil
}

type NullableConfigRoomRequest struct {
	value *ConfigRoomRequest
	isSet bool
}

func (v NullableConfigRoomRequest) Get() *ConfigRoomRequest {
	return v.value
}

func (v *NullableConfigRoomRequest) Set(val *ConfigRoomRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfigRoomRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfigRoomRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfigRoomRequest(val *ConfigRoomRequest) *NullableConfigRoomRequest {
	return &NullableConfigRoomRequest{value: val, isSet: true}
}

func (v NullableConfigRoomRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfigRoomRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
