/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateUploadShareRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUploadShareRequest{}

// UpdateUploadShareRequest Request model for updating an Upload Share
type UpdateUploadShareRequest struct {
	// Alias name
	Name *string `json:"name,omitempty"`
	// Password
	Password   *string           `json:"password,omitempty"`
	Expiration *ObjectExpiration `json:"expiration,omitempty"`
	// Number of days after which uploaded files expire
	FilesExpiryPeriod *int32 `json:"filesExpiryPeriod,omitempty"`
	// User notes
	Notes *string `json:"notes,omitempty"`
	// &#128640; Since v4.11.0  Internal notes
	InternalNotes *string `json:"internalNotes,omitempty"`
	// Show creator first and last name.
	ShowCreatorName *bool `json:"showCreatorName,omitempty"`
	// Show creator email address.
	ShowCreatorUsername *bool `json:"showCreatorUsername,omitempty"`
	// Allow display of already uploaded files
	ShowUploadedFiles *bool `json:"showUploadedFiles,omitempty"`
	// Maximal amount of files to upload
	MaxSlots *int32 `json:"maxSlots,omitempty"`
	// Maximal total size of uploaded files (in bytes)
	MaxSize *int64 `json:"maxSize,omitempty"`
	// List of recipient FQTNs  E.123 / E.164 Format
	TextMessageRecipients []string `json:"textMessageRecipients,omitempty"`
	// Language tag for messages to receiver
	ReceiverLanguage *string `json:"receiverLanguage,omitempty"`
	// Country shorthand symbol (cf. ISO 3166-2)
	DefaultCountry *string `json:"defaultCountry,omitempty"`
	// Set 'true' to reset 'password' for Upload Share.
	ResetPassword *bool `json:"resetPassword,omitempty"`
	// Set 'true' to reset 'filesExpiryPeriod' for Upload Share
	ResetFilesExpiryPeriod *bool `json:"resetFilesExpiryPeriod,omitempty"`
	// Set 'true' to reset 'maxSlots' for Upload Share
	ResetMaxSlots *bool `json:"resetMaxSlots,omitempty"`
	// Set 'true' to reset 'maxSize' for Upload Share
	ResetMaxSize *bool `json:"resetMaxSize,omitempty"`
	// &#128679; Deprecated since v4.20.0  Notify creator on every upload.
	// Deprecated
	NotifyCreator *bool `json:"notifyCreator,omitempty"`
}

// NewUpdateUploadShareRequest instantiates a new UpdateUploadShareRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUploadShareRequest() *UpdateUploadShareRequest {
	this := UpdateUploadShareRequest{}
	return &this
}

// NewUpdateUploadShareRequestWithDefaults instantiates a new UpdateUploadShareRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUploadShareRequestWithDefaults() *UpdateUploadShareRequest {
	this := UpdateUploadShareRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateUploadShareRequest) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UpdateUploadShareRequest) SetPassword(v string) {
	o.Password = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetExpiration() ObjectExpiration {
	if o == nil || IsNil(o.Expiration) {
		var ret ObjectExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetExpirationOk() (*ObjectExpiration, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given ObjectExpiration and assigns it to the Expiration field.
func (o *UpdateUploadShareRequest) SetExpiration(v ObjectExpiration) {
	o.Expiration = &v
}

// GetFilesExpiryPeriod returns the FilesExpiryPeriod field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetFilesExpiryPeriod() int32 {
	if o == nil || IsNil(o.FilesExpiryPeriod) {
		var ret int32
		return ret
	}
	return *o.FilesExpiryPeriod
}

// GetFilesExpiryPeriodOk returns a tuple with the FilesExpiryPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetFilesExpiryPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesExpiryPeriod) {
		return nil, false
	}
	return o.FilesExpiryPeriod, true
}

// HasFilesExpiryPeriod returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasFilesExpiryPeriod() bool {
	if o != nil && !IsNil(o.FilesExpiryPeriod) {
		return true
	}

	return false
}

// SetFilesExpiryPeriod gets a reference to the given int32 and assigns it to the FilesExpiryPeriod field.
func (o *UpdateUploadShareRequest) SetFilesExpiryPeriod(v int32) {
	o.FilesExpiryPeriod = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *UpdateUploadShareRequest) SetNotes(v string) {
	o.Notes = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *UpdateUploadShareRequest) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetShowCreatorName returns the ShowCreatorName field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetShowCreatorName() bool {
	if o == nil || IsNil(o.ShowCreatorName) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorName
}

// GetShowCreatorNameOk returns a tuple with the ShowCreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetShowCreatorNameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorName) {
		return nil, false
	}
	return o.ShowCreatorName, true
}

// HasShowCreatorName returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasShowCreatorName() bool {
	if o != nil && !IsNil(o.ShowCreatorName) {
		return true
	}

	return false
}

// SetShowCreatorName gets a reference to the given bool and assigns it to the ShowCreatorName field.
func (o *UpdateUploadShareRequest) SetShowCreatorName(v bool) {
	o.ShowCreatorName = &v
}

// GetShowCreatorUsername returns the ShowCreatorUsername field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetShowCreatorUsername() bool {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorUsername
}

// GetShowCreatorUsernameOk returns a tuple with the ShowCreatorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetShowCreatorUsernameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		return nil, false
	}
	return o.ShowCreatorUsername, true
}

// HasShowCreatorUsername returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasShowCreatorUsername() bool {
	if o != nil && !IsNil(o.ShowCreatorUsername) {
		return true
	}

	return false
}

// SetShowCreatorUsername gets a reference to the given bool and assigns it to the ShowCreatorUsername field.
func (o *UpdateUploadShareRequest) SetShowCreatorUsername(v bool) {
	o.ShowCreatorUsername = &v
}

// GetShowUploadedFiles returns the ShowUploadedFiles field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetShowUploadedFiles() bool {
	if o == nil || IsNil(o.ShowUploadedFiles) {
		var ret bool
		return ret
	}
	return *o.ShowUploadedFiles
}

// GetShowUploadedFilesOk returns a tuple with the ShowUploadedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetShowUploadedFilesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowUploadedFiles) {
		return nil, false
	}
	return o.ShowUploadedFiles, true
}

// HasShowUploadedFiles returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasShowUploadedFiles() bool {
	if o != nil && !IsNil(o.ShowUploadedFiles) {
		return true
	}

	return false
}

// SetShowUploadedFiles gets a reference to the given bool and assigns it to the ShowUploadedFiles field.
func (o *UpdateUploadShareRequest) SetShowUploadedFiles(v bool) {
	o.ShowUploadedFiles = &v
}

// GetMaxSlots returns the MaxSlots field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetMaxSlots() int32 {
	if o == nil || IsNil(o.MaxSlots) {
		var ret int32
		return ret
	}
	return *o.MaxSlots
}

// GetMaxSlotsOk returns a tuple with the MaxSlots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetMaxSlotsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSlots) {
		return nil, false
	}
	return o.MaxSlots, true
}

// HasMaxSlots returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasMaxSlots() bool {
	if o != nil && !IsNil(o.MaxSlots) {
		return true
	}

	return false
}

// SetMaxSlots gets a reference to the given int32 and assigns it to the MaxSlots field.
func (o *UpdateUploadShareRequest) SetMaxSlots(v int32) {
	o.MaxSlots = &v
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetMaxSize() int64 {
	if o == nil || IsNil(o.MaxSize) {
		var ret int64
		return ret
	}
	return *o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxSize) {
		return nil, false
	}
	return o.MaxSize, true
}

// HasMaxSize returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasMaxSize() bool {
	if o != nil && !IsNil(o.MaxSize) {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given int64 and assigns it to the MaxSize field.
func (o *UpdateUploadShareRequest) SetMaxSize(v int64) {
	o.MaxSize = &v
}

// GetTextMessageRecipients returns the TextMessageRecipients field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetTextMessageRecipients() []string {
	if o == nil || IsNil(o.TextMessageRecipients) {
		var ret []string
		return ret
	}
	return o.TextMessageRecipients
}

// GetTextMessageRecipientsOk returns a tuple with the TextMessageRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetTextMessageRecipientsOk() ([]string, bool) {
	if o == nil || IsNil(o.TextMessageRecipients) {
		return nil, false
	}
	return o.TextMessageRecipients, true
}

// HasTextMessageRecipients returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasTextMessageRecipients() bool {
	if o != nil && !IsNil(o.TextMessageRecipients) {
		return true
	}

	return false
}

// SetTextMessageRecipients gets a reference to the given []string and assigns it to the TextMessageRecipients field.
func (o *UpdateUploadShareRequest) SetTextMessageRecipients(v []string) {
	o.TextMessageRecipients = v
}

// GetReceiverLanguage returns the ReceiverLanguage field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetReceiverLanguage() string {
	if o == nil || IsNil(o.ReceiverLanguage) {
		var ret string
		return ret
	}
	return *o.ReceiverLanguage
}

// GetReceiverLanguageOk returns a tuple with the ReceiverLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetReceiverLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverLanguage) {
		return nil, false
	}
	return o.ReceiverLanguage, true
}

// HasReceiverLanguage returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasReceiverLanguage() bool {
	if o != nil && !IsNil(o.ReceiverLanguage) {
		return true
	}

	return false
}

// SetReceiverLanguage gets a reference to the given string and assigns it to the ReceiverLanguage field.
func (o *UpdateUploadShareRequest) SetReceiverLanguage(v string) {
	o.ReceiverLanguage = &v
}

// GetDefaultCountry returns the DefaultCountry field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetDefaultCountry() string {
	if o == nil || IsNil(o.DefaultCountry) {
		var ret string
		return ret
	}
	return *o.DefaultCountry
}

// GetDefaultCountryOk returns a tuple with the DefaultCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetDefaultCountryOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultCountry) {
		return nil, false
	}
	return o.DefaultCountry, true
}

// HasDefaultCountry returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasDefaultCountry() bool {
	if o != nil && !IsNil(o.DefaultCountry) {
		return true
	}

	return false
}

// SetDefaultCountry gets a reference to the given string and assigns it to the DefaultCountry field.
func (o *UpdateUploadShareRequest) SetDefaultCountry(v string) {
	o.DefaultCountry = &v
}

// GetResetPassword returns the ResetPassword field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetResetPassword() bool {
	if o == nil || IsNil(o.ResetPassword) {
		var ret bool
		return ret
	}
	return *o.ResetPassword
}

// GetResetPasswordOk returns a tuple with the ResetPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetResetPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetPassword) {
		return nil, false
	}
	return o.ResetPassword, true
}

// HasResetPassword returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasResetPassword() bool {
	if o != nil && !IsNil(o.ResetPassword) {
		return true
	}

	return false
}

// SetResetPassword gets a reference to the given bool and assigns it to the ResetPassword field.
func (o *UpdateUploadShareRequest) SetResetPassword(v bool) {
	o.ResetPassword = &v
}

// GetResetFilesExpiryPeriod returns the ResetFilesExpiryPeriod field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetResetFilesExpiryPeriod() bool {
	if o == nil || IsNil(o.ResetFilesExpiryPeriod) {
		var ret bool
		return ret
	}
	return *o.ResetFilesExpiryPeriod
}

// GetResetFilesExpiryPeriodOk returns a tuple with the ResetFilesExpiryPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetResetFilesExpiryPeriodOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetFilesExpiryPeriod) {
		return nil, false
	}
	return o.ResetFilesExpiryPeriod, true
}

// HasResetFilesExpiryPeriod returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasResetFilesExpiryPeriod() bool {
	if o != nil && !IsNil(o.ResetFilesExpiryPeriod) {
		return true
	}

	return false
}

// SetResetFilesExpiryPeriod gets a reference to the given bool and assigns it to the ResetFilesExpiryPeriod field.
func (o *UpdateUploadShareRequest) SetResetFilesExpiryPeriod(v bool) {
	o.ResetFilesExpiryPeriod = &v
}

// GetResetMaxSlots returns the ResetMaxSlots field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetResetMaxSlots() bool {
	if o == nil || IsNil(o.ResetMaxSlots) {
		var ret bool
		return ret
	}
	return *o.ResetMaxSlots
}

// GetResetMaxSlotsOk returns a tuple with the ResetMaxSlots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetResetMaxSlotsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetMaxSlots) {
		return nil, false
	}
	return o.ResetMaxSlots, true
}

// HasResetMaxSlots returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasResetMaxSlots() bool {
	if o != nil && !IsNil(o.ResetMaxSlots) {
		return true
	}

	return false
}

// SetResetMaxSlots gets a reference to the given bool and assigns it to the ResetMaxSlots field.
func (o *UpdateUploadShareRequest) SetResetMaxSlots(v bool) {
	o.ResetMaxSlots = &v
}

// GetResetMaxSize returns the ResetMaxSize field value if set, zero value otherwise.
func (o *UpdateUploadShareRequest) GetResetMaxSize() bool {
	if o == nil || IsNil(o.ResetMaxSize) {
		var ret bool
		return ret
	}
	return *o.ResetMaxSize
}

// GetResetMaxSizeOk returns a tuple with the ResetMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadShareRequest) GetResetMaxSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetMaxSize) {
		return nil, false
	}
	return o.ResetMaxSize, true
}

// HasResetMaxSize returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasResetMaxSize() bool {
	if o != nil && !IsNil(o.ResetMaxSize) {
		return true
	}

	return false
}

// SetResetMaxSize gets a reference to the given bool and assigns it to the ResetMaxSize field.
func (o *UpdateUploadShareRequest) SetResetMaxSize(v bool) {
	o.ResetMaxSize = &v
}

// GetNotifyCreator returns the NotifyCreator field value if set, zero value otherwise.
// Deprecated
func (o *UpdateUploadShareRequest) GetNotifyCreator() bool {
	if o == nil || IsNil(o.NotifyCreator) {
		var ret bool
		return ret
	}
	return *o.NotifyCreator
}

// GetNotifyCreatorOk returns a tuple with the NotifyCreator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateUploadShareRequest) GetNotifyCreatorOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyCreator) {
		return nil, false
	}
	return o.NotifyCreator, true
}

// HasNotifyCreator returns a boolean if a field has been set.
func (o *UpdateUploadShareRequest) HasNotifyCreator() bool {
	if o != nil && !IsNil(o.NotifyCreator) {
		return true
	}

	return false
}

// SetNotifyCreator gets a reference to the given bool and assigns it to the NotifyCreator field.
// Deprecated
func (o *UpdateUploadShareRequest) SetNotifyCreator(v bool) {
	o.NotifyCreator = &v
}

func (o UpdateUploadShareRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUploadShareRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.FilesExpiryPeriod) {
		toSerialize["filesExpiryPeriod"] = o.FilesExpiryPeriod
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.InternalNotes) {
		toSerialize["internalNotes"] = o.InternalNotes
	}
	if !IsNil(o.ShowCreatorName) {
		toSerialize["showCreatorName"] = o.ShowCreatorName
	}
	if !IsNil(o.ShowCreatorUsername) {
		toSerialize["showCreatorUsername"] = o.ShowCreatorUsername
	}
	if !IsNil(o.ShowUploadedFiles) {
		toSerialize["showUploadedFiles"] = o.ShowUploadedFiles
	}
	if !IsNil(o.MaxSlots) {
		toSerialize["maxSlots"] = o.MaxSlots
	}
	if !IsNil(o.MaxSize) {
		toSerialize["maxSize"] = o.MaxSize
	}
	if !IsNil(o.TextMessageRecipients) {
		toSerialize["textMessageRecipients"] = o.TextMessageRecipients
	}
	if !IsNil(o.ReceiverLanguage) {
		toSerialize["receiverLanguage"] = o.ReceiverLanguage
	}
	if !IsNil(o.DefaultCountry) {
		toSerialize["defaultCountry"] = o.DefaultCountry
	}
	if !IsNil(o.ResetPassword) {
		toSerialize["resetPassword"] = o.ResetPassword
	}
	if !IsNil(o.ResetFilesExpiryPeriod) {
		toSerialize["resetFilesExpiryPeriod"] = o.ResetFilesExpiryPeriod
	}
	if !IsNil(o.ResetMaxSlots) {
		toSerialize["resetMaxSlots"] = o.ResetMaxSlots
	}
	if !IsNil(o.ResetMaxSize) {
		toSerialize["resetMaxSize"] = o.ResetMaxSize
	}
	if !IsNil(o.NotifyCreator) {
		toSerialize["notifyCreator"] = o.NotifyCreator
	}
	return toSerialize, nil
}

type NullableUpdateUploadShareRequest struct {
	value *UpdateUploadShareRequest
	isSet bool
}

func (v NullableUpdateUploadShareRequest) Get() *UpdateUploadShareRequest {
	return v.value
}

func (v *NullableUpdateUploadShareRequest) Set(val *UpdateUploadShareRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUploadShareRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUploadShareRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUploadShareRequest(val *UpdateUploadShareRequest) *NullableUpdateUploadShareRequest {
	return &NullableUpdateUploadShareRequest{value: val, isSet: true}
}

func (v NullableUpdateUploadShareRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUploadShareRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
