/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateDownloadShareRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDownloadShareRequest{}

// UpdateDownloadShareRequest Request model for updating a Download Share
type UpdateDownloadShareRequest struct {
	// Alias name
	Name *string `json:"name,omitempty"`
	// Access password, not allowed for encrypted shares
	Password   *string           `json:"password,omitempty"`
	Expiration *ObjectExpiration `json:"expiration,omitempty"`
	// User notes
	Notes *string `json:"notes,omitempty"`
	// &#128640; Since v4.11.0  Internal notes
	InternalNotes *string `json:"internalNotes,omitempty"`
	// Show creator first and last name.
	ShowCreatorName *bool `json:"showCreatorName,omitempty"`
	// Show creator email address.
	ShowCreatorUsername *bool `json:"showCreatorUsername,omitempty"`
	// Max allowed downloads
	MaxDownloads *int32 `json:"maxDownloads,omitempty"`
	// List of recipient FQTNs  E.123 / E.164 Format
	TextMessageRecipients []string `json:"textMessageRecipients,omitempty"`
	// Language tag for messages to receiver
	ReceiverLanguage *string `json:"receiverLanguage,omitempty"`
	// Country shorthand symbol (cf. ISO 3166-2)
	DefaultCountry *string `json:"defaultCountry,omitempty"`
	// Set 'true' to reset 'password' for Download Share.
	ResetPassword *bool `json:"resetPassword,omitempty"`
	// Set 'true' to reset 'maxDownloads' for Download Share.
	ResetMaxDownloads *bool `json:"resetMaxDownloads,omitempty"`
	// &#128679; Deprecated since v4.20.0  Notify creator on every download.
	// Deprecated
	NotifyCreator *bool `json:"notifyCreator,omitempty"`
}

// NewUpdateDownloadShareRequest instantiates a new UpdateDownloadShareRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDownloadShareRequest() *UpdateDownloadShareRequest {
	this := UpdateDownloadShareRequest{}
	return &this
}

// NewUpdateDownloadShareRequestWithDefaults instantiates a new UpdateDownloadShareRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDownloadShareRequestWithDefaults() *UpdateDownloadShareRequest {
	this := UpdateDownloadShareRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateDownloadShareRequest) SetName(v string) {
	o.Name = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UpdateDownloadShareRequest) SetPassword(v string) {
	o.Password = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetExpiration() ObjectExpiration {
	if o == nil || IsNil(o.Expiration) {
		var ret ObjectExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetExpirationOk() (*ObjectExpiration, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given ObjectExpiration and assigns it to the Expiration field.
func (o *UpdateDownloadShareRequest) SetExpiration(v ObjectExpiration) {
	o.Expiration = &v
}

// GetNotes returns the Notes field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetNotes() string {
	if o == nil || IsNil(o.Notes) {
		var ret string
		return ret
	}
	return *o.Notes
}

// GetNotesOk returns a tuple with the Notes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetNotesOk() (*string, bool) {
	if o == nil || IsNil(o.Notes) {
		return nil, false
	}
	return o.Notes, true
}

// HasNotes returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasNotes() bool {
	if o != nil && !IsNil(o.Notes) {
		return true
	}

	return false
}

// SetNotes gets a reference to the given string and assigns it to the Notes field.
func (o *UpdateDownloadShareRequest) SetNotes(v string) {
	o.Notes = &v
}

// GetInternalNotes returns the InternalNotes field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetInternalNotes() string {
	if o == nil || IsNil(o.InternalNotes) {
		var ret string
		return ret
	}
	return *o.InternalNotes
}

// GetInternalNotesOk returns a tuple with the InternalNotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetInternalNotesOk() (*string, bool) {
	if o == nil || IsNil(o.InternalNotes) {
		return nil, false
	}
	return o.InternalNotes, true
}

// HasInternalNotes returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasInternalNotes() bool {
	if o != nil && !IsNil(o.InternalNotes) {
		return true
	}

	return false
}

// SetInternalNotes gets a reference to the given string and assigns it to the InternalNotes field.
func (o *UpdateDownloadShareRequest) SetInternalNotes(v string) {
	o.InternalNotes = &v
}

// GetShowCreatorName returns the ShowCreatorName field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetShowCreatorName() bool {
	if o == nil || IsNil(o.ShowCreatorName) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorName
}

// GetShowCreatorNameOk returns a tuple with the ShowCreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetShowCreatorNameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorName) {
		return nil, false
	}
	return o.ShowCreatorName, true
}

// HasShowCreatorName returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasShowCreatorName() bool {
	if o != nil && !IsNil(o.ShowCreatorName) {
		return true
	}

	return false
}

// SetShowCreatorName gets a reference to the given bool and assigns it to the ShowCreatorName field.
func (o *UpdateDownloadShareRequest) SetShowCreatorName(v bool) {
	o.ShowCreatorName = &v
}

// GetShowCreatorUsername returns the ShowCreatorUsername field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetShowCreatorUsername() bool {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorUsername
}

// GetShowCreatorUsernameOk returns a tuple with the ShowCreatorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetShowCreatorUsernameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		return nil, false
	}
	return o.ShowCreatorUsername, true
}

// HasShowCreatorUsername returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasShowCreatorUsername() bool {
	if o != nil && !IsNil(o.ShowCreatorUsername) {
		return true
	}

	return false
}

// SetShowCreatorUsername gets a reference to the given bool and assigns it to the ShowCreatorUsername field.
func (o *UpdateDownloadShareRequest) SetShowCreatorUsername(v bool) {
	o.ShowCreatorUsername = &v
}

// GetMaxDownloads returns the MaxDownloads field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetMaxDownloads() int32 {
	if o == nil || IsNil(o.MaxDownloads) {
		var ret int32
		return ret
	}
	return *o.MaxDownloads
}

// GetMaxDownloadsOk returns a tuple with the MaxDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetMaxDownloadsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDownloads) {
		return nil, false
	}
	return o.MaxDownloads, true
}

// HasMaxDownloads returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasMaxDownloads() bool {
	if o != nil && !IsNil(o.MaxDownloads) {
		return true
	}

	return false
}

// SetMaxDownloads gets a reference to the given int32 and assigns it to the MaxDownloads field.
func (o *UpdateDownloadShareRequest) SetMaxDownloads(v int32) {
	o.MaxDownloads = &v
}

// GetTextMessageRecipients returns the TextMessageRecipients field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetTextMessageRecipients() []string {
	if o == nil || IsNil(o.TextMessageRecipients) {
		var ret []string
		return ret
	}
	return o.TextMessageRecipients
}

// GetTextMessageRecipientsOk returns a tuple with the TextMessageRecipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetTextMessageRecipientsOk() ([]string, bool) {
	if o == nil || IsNil(o.TextMessageRecipients) {
		return nil, false
	}
	return o.TextMessageRecipients, true
}

// HasTextMessageRecipients returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasTextMessageRecipients() bool {
	if o != nil && !IsNil(o.TextMessageRecipients) {
		return true
	}

	return false
}

// SetTextMessageRecipients gets a reference to the given []string and assigns it to the TextMessageRecipients field.
func (o *UpdateDownloadShareRequest) SetTextMessageRecipients(v []string) {
	o.TextMessageRecipients = v
}

// GetReceiverLanguage returns the ReceiverLanguage field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetReceiverLanguage() string {
	if o == nil || IsNil(o.ReceiverLanguage) {
		var ret string
		return ret
	}
	return *o.ReceiverLanguage
}

// GetReceiverLanguageOk returns a tuple with the ReceiverLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetReceiverLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiverLanguage) {
		return nil, false
	}
	return o.ReceiverLanguage, true
}

// HasReceiverLanguage returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasReceiverLanguage() bool {
	if o != nil && !IsNil(o.ReceiverLanguage) {
		return true
	}

	return false
}

// SetReceiverLanguage gets a reference to the given string and assigns it to the ReceiverLanguage field.
func (o *UpdateDownloadShareRequest) SetReceiverLanguage(v string) {
	o.ReceiverLanguage = &v
}

// GetDefaultCountry returns the DefaultCountry field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetDefaultCountry() string {
	if o == nil || IsNil(o.DefaultCountry) {
		var ret string
		return ret
	}
	return *o.DefaultCountry
}

// GetDefaultCountryOk returns a tuple with the DefaultCountry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetDefaultCountryOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultCountry) {
		return nil, false
	}
	return o.DefaultCountry, true
}

// HasDefaultCountry returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasDefaultCountry() bool {
	if o != nil && !IsNil(o.DefaultCountry) {
		return true
	}

	return false
}

// SetDefaultCountry gets a reference to the given string and assigns it to the DefaultCountry field.
func (o *UpdateDownloadShareRequest) SetDefaultCountry(v string) {
	o.DefaultCountry = &v
}

// GetResetPassword returns the ResetPassword field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetResetPassword() bool {
	if o == nil || IsNil(o.ResetPassword) {
		var ret bool
		return ret
	}
	return *o.ResetPassword
}

// GetResetPasswordOk returns a tuple with the ResetPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetResetPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetPassword) {
		return nil, false
	}
	return o.ResetPassword, true
}

// HasResetPassword returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasResetPassword() bool {
	if o != nil && !IsNil(o.ResetPassword) {
		return true
	}

	return false
}

// SetResetPassword gets a reference to the given bool and assigns it to the ResetPassword field.
func (o *UpdateDownloadShareRequest) SetResetPassword(v bool) {
	o.ResetPassword = &v
}

// GetResetMaxDownloads returns the ResetMaxDownloads field value if set, zero value otherwise.
func (o *UpdateDownloadShareRequest) GetResetMaxDownloads() bool {
	if o == nil || IsNil(o.ResetMaxDownloads) {
		var ret bool
		return ret
	}
	return *o.ResetMaxDownloads
}

// GetResetMaxDownloadsOk returns a tuple with the ResetMaxDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadShareRequest) GetResetMaxDownloadsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetMaxDownloads) {
		return nil, false
	}
	return o.ResetMaxDownloads, true
}

// HasResetMaxDownloads returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasResetMaxDownloads() bool {
	if o != nil && !IsNil(o.ResetMaxDownloads) {
		return true
	}

	return false
}

// SetResetMaxDownloads gets a reference to the given bool and assigns it to the ResetMaxDownloads field.
func (o *UpdateDownloadShareRequest) SetResetMaxDownloads(v bool) {
	o.ResetMaxDownloads = &v
}

// GetNotifyCreator returns the NotifyCreator field value if set, zero value otherwise.
// Deprecated
func (o *UpdateDownloadShareRequest) GetNotifyCreator() bool {
	if o == nil || IsNil(o.NotifyCreator) {
		var ret bool
		return ret
	}
	return *o.NotifyCreator
}

// GetNotifyCreatorOk returns a tuple with the NotifyCreator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateDownloadShareRequest) GetNotifyCreatorOk() (*bool, bool) {
	if o == nil || IsNil(o.NotifyCreator) {
		return nil, false
	}
	return o.NotifyCreator, true
}

// HasNotifyCreator returns a boolean if a field has been set.
func (o *UpdateDownloadShareRequest) HasNotifyCreator() bool {
	if o != nil && !IsNil(o.NotifyCreator) {
		return true
	}

	return false
}

// SetNotifyCreator gets a reference to the given bool and assigns it to the NotifyCreator field.
// Deprecated
func (o *UpdateDownloadShareRequest) SetNotifyCreator(v bool) {
	o.NotifyCreator = &v
}

func (o UpdateDownloadShareRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDownloadShareRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.Notes) {
		toSerialize["notes"] = o.Notes
	}
	if !IsNil(o.InternalNotes) {
		toSerialize["internalNotes"] = o.InternalNotes
	}
	if !IsNil(o.ShowCreatorName) {
		toSerialize["showCreatorName"] = o.ShowCreatorName
	}
	if !IsNil(o.ShowCreatorUsername) {
		toSerialize["showCreatorUsername"] = o.ShowCreatorUsername
	}
	if !IsNil(o.MaxDownloads) {
		toSerialize["maxDownloads"] = o.MaxDownloads
	}
	if !IsNil(o.TextMessageRecipients) {
		toSerialize["textMessageRecipients"] = o.TextMessageRecipients
	}
	if !IsNil(o.ReceiverLanguage) {
		toSerialize["receiverLanguage"] = o.ReceiverLanguage
	}
	if !IsNil(o.DefaultCountry) {
		toSerialize["defaultCountry"] = o.DefaultCountry
	}
	if !IsNil(o.ResetPassword) {
		toSerialize["resetPassword"] = o.ResetPassword
	}
	if !IsNil(o.ResetMaxDownloads) {
		toSerialize["resetMaxDownloads"] = o.ResetMaxDownloads
	}
	if !IsNil(o.NotifyCreator) {
		toSerialize["notifyCreator"] = o.NotifyCreator
	}
	return toSerialize, nil
}

type NullableUpdateDownloadShareRequest struct {
	value *UpdateDownloadShareRequest
	isSet bool
}

func (v NullableUpdateDownloadShareRequest) Get() *UpdateDownloadShareRequest {
	return v.value
}

func (v *NullableUpdateDownloadShareRequest) Set(val *UpdateDownloadShareRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDownloadShareRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDownloadShareRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDownloadShareRequest(val *UpdateDownloadShareRequest) *NullableUpdateDownloadShareRequest {
	return &NullableUpdateDownloadShareRequest{value: val, isSet: true}
}

func (v NullableUpdateDownloadShareRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDownloadShareRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
