/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ResetPasswordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResetPasswordRequest{}

// ResetPasswordRequest Request model for reseting user's login password
type ResetPasswordRequest struct {
	// &#128640; Since v4.13.0  Username
	UserName *string `json:"userName,omitempty"`
	// IETF language tag
	CreatorLanguage *string `json:"creatorLanguage,omitempty"`
	// &#128679; Deprecated since v4.7.0  Language ID or ISO 639-1 code
	// Deprecated
	Language *string `json:"language,omitempty"`
	// &#128679; Deprecated since v4.13.0  User login name
	// Deprecated
	Login *string `json:"login,omitempty"`
}

// NewResetPasswordRequest instantiates a new ResetPasswordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResetPasswordRequest() *ResetPasswordRequest {
	this := ResetPasswordRequest{}
	return &this
}

// NewResetPasswordRequestWithDefaults instantiates a new ResetPasswordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResetPasswordRequestWithDefaults() *ResetPasswordRequest {
	this := ResetPasswordRequest{}
	return &this
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *ResetPasswordRequest) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResetPasswordRequest) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *ResetPasswordRequest) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *ResetPasswordRequest) SetUserName(v string) {
	o.UserName = &v
}

// GetCreatorLanguage returns the CreatorLanguage field value if set, zero value otherwise.
func (o *ResetPasswordRequest) GetCreatorLanguage() string {
	if o == nil || IsNil(o.CreatorLanguage) {
		var ret string
		return ret
	}
	return *o.CreatorLanguage
}

// GetCreatorLanguageOk returns a tuple with the CreatorLanguage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResetPasswordRequest) GetCreatorLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.CreatorLanguage) {
		return nil, false
	}
	return o.CreatorLanguage, true
}

// HasCreatorLanguage returns a boolean if a field has been set.
func (o *ResetPasswordRequest) HasCreatorLanguage() bool {
	if o != nil && !IsNil(o.CreatorLanguage) {
		return true
	}

	return false
}

// SetCreatorLanguage gets a reference to the given string and assigns it to the CreatorLanguage field.
func (o *ResetPasswordRequest) SetCreatorLanguage(v string) {
	o.CreatorLanguage = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
// Deprecated
func (o *ResetPasswordRequest) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ResetPasswordRequest) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *ResetPasswordRequest) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
// Deprecated
func (o *ResetPasswordRequest) SetLanguage(v string) {
	o.Language = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
// Deprecated
func (o *ResetPasswordRequest) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ResetPasswordRequest) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *ResetPasswordRequest) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
// Deprecated
func (o *ResetPasswordRequest) SetLogin(v string) {
	o.Login = &v
}

func (o ResetPasswordRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResetPasswordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.CreatorLanguage) {
		toSerialize["creatorLanguage"] = o.CreatorLanguage
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	return toSerialize, nil
}

type NullableResetPasswordRequest struct {
	value *ResetPasswordRequest
	isSet bool
}

func (v NullableResetPasswordRequest) Get() *ResetPasswordRequest {
	return v.value
}

func (v *NullableResetPasswordRequest) Set(val *ResetPasswordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResetPasswordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResetPasswordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResetPasswordRequest(val *ResetPasswordRequest) *NullableResetPasswordRequest {
	return &NullableResetPasswordRequest{value: val, isSet: true}
}

func (v NullableResetPasswordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResetPasswordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
