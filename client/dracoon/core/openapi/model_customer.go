/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the Customer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Customer{}

// Customer Customer information
type Customer struct {
	// Unique identifier for the customer
	Id int64 `json:"id"`
	// Company name
	CompanyName string `json:"companyName"`
	// Customer type
	CustomerContractType string `json:"customerContractType"`
	// Maximal disc space which can be allocated by customer in bytes. -1 for unlimited
	QuotaMax int64 `json:"quotaMax"`
	// Used amount of disc space in bytes
	QuotaUsed int64 `json:"quotaUsed"`
	// Maximal number of users
	UserMax int32 `json:"userMax"`
	// Number of users which are already allocated.
	UserUsed int32 `json:"userUsed"`
	// Number of internal user accounts
	CntInternalUser int32 `json:"cntInternalUser"`
	// Number of guest user accounts
	CntGuestUser int32 `json:"cntGuestUser"`
	// Creation date
	CreatedAt time.Time `json:"createdAt"`
	// Customer is locked:  * `false` - unlocked  * `true` - locked    All users of this customer will be blocked and can not login anymore.
	IsLocked *bool `json:"isLocked,omitempty"`
	// Number of days left for trial period (relevant only for type `demo`)  (not used)
	TrialDaysLeft *int32 `json:"trialDaysLeft,omitempty"`
	// Modification date
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
	// Date of last seen login for the customer
	LastLoginAt        *time.Time          `json:"lastLoginAt,omitempty"`
	CustomerAttributes *CustomerAttributes `json:"customerAttributes,omitempty"`
	// Provider customer ID
	ProviderCustomerId *string `json:"providerCustomerId,omitempty"`
	// &#128640; Since v4.19.0  Maximal number of webhooks
	WebhooksMax *int64 `json:"webhooksMax,omitempty"`
	// &#128679; Deprecated since v4.8.0  Customer activation code string:  * valid only for types `free` and `demo`  * for `pay` customers it is empty
	// Deprecated
	ActivationCode *string `json:"activationCode,omitempty"`
	// &#128679; Deprecated since v4.7.0  Customer lock status:  * `false` - unlocked  * `true` - locked    Please use `isLocked` instead.  All users of this customer will be blocked and can not login anymore.
	// Deprecated
	LockStatus bool `json:"lockStatus"`
	// &#128640; Since v4.21.0  Customer UUID
	CustomerUuid string `json:"customerUuid"`
}

type _Customer Customer

// NewCustomer instantiates a new Customer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCustomer(id int64, companyName string, customerContractType string, quotaMax int64, quotaUsed int64, userMax int32, userUsed int32, cntInternalUser int32, cntGuestUser int32, createdAt time.Time, lockStatus bool, customerUuid string) *Customer {
	this := Customer{}
	this.Id = id
	this.CompanyName = companyName
	this.CustomerContractType = customerContractType
	this.QuotaMax = quotaMax
	this.QuotaUsed = quotaUsed
	this.UserMax = userMax
	this.UserUsed = userUsed
	this.CntInternalUser = cntInternalUser
	this.CntGuestUser = cntGuestUser
	this.CreatedAt = createdAt
	var isLocked bool = false
	this.IsLocked = &isLocked
	this.LockStatus = lockStatus
	this.CustomerUuid = customerUuid
	return &this
}

// NewCustomerWithDefaults instantiates a new Customer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCustomerWithDefaults() *Customer {
	this := Customer{}
	var isLocked bool = false
	this.IsLocked = &isLocked
	var lockStatus bool = false
	this.LockStatus = lockStatus
	return &this
}

// GetId returns the Id field value
func (o *Customer) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Customer) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Customer) SetId(v int64) {
	o.Id = v
}

// GetCompanyName returns the CompanyName field value
func (o *Customer) GetCompanyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompanyName
}

// GetCompanyNameOk returns a tuple with the CompanyName field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCompanyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompanyName, true
}

// SetCompanyName sets field value
func (o *Customer) SetCompanyName(v string) {
	o.CompanyName = v
}

// GetCustomerContractType returns the CustomerContractType field value
func (o *Customer) GetCustomerContractType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerContractType
}

// GetCustomerContractTypeOk returns a tuple with the CustomerContractType field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCustomerContractTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerContractType, true
}

// SetCustomerContractType sets field value
func (o *Customer) SetCustomerContractType(v string) {
	o.CustomerContractType = v
}

// GetQuotaMax returns the QuotaMax field value
func (o *Customer) GetQuotaMax() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QuotaMax
}

// GetQuotaMaxOk returns a tuple with the QuotaMax field value
// and a boolean to check if the value has been set.
func (o *Customer) GetQuotaMaxOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuotaMax, true
}

// SetQuotaMax sets field value
func (o *Customer) SetQuotaMax(v int64) {
	o.QuotaMax = v
}

// GetQuotaUsed returns the QuotaUsed field value
func (o *Customer) GetQuotaUsed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QuotaUsed
}

// GetQuotaUsedOk returns a tuple with the QuotaUsed field value
// and a boolean to check if the value has been set.
func (o *Customer) GetQuotaUsedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuotaUsed, true
}

// SetQuotaUsed sets field value
func (o *Customer) SetQuotaUsed(v int64) {
	o.QuotaUsed = v
}

// GetUserMax returns the UserMax field value
func (o *Customer) GetUserMax() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserMax
}

// GetUserMaxOk returns a tuple with the UserMax field value
// and a boolean to check if the value has been set.
func (o *Customer) GetUserMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserMax, true
}

// SetUserMax sets field value
func (o *Customer) SetUserMax(v int32) {
	o.UserMax = v
}

// GetUserUsed returns the UserUsed field value
func (o *Customer) GetUserUsed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UserUsed
}

// GetUserUsedOk returns a tuple with the UserUsed field value
// and a boolean to check if the value has been set.
func (o *Customer) GetUserUsedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserUsed, true
}

// SetUserUsed sets field value
func (o *Customer) SetUserUsed(v int32) {
	o.UserUsed = v
}

// GetCntInternalUser returns the CntInternalUser field value
func (o *Customer) GetCntInternalUser() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CntInternalUser
}

// GetCntInternalUserOk returns a tuple with the CntInternalUser field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCntInternalUserOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CntInternalUser, true
}

// SetCntInternalUser sets field value
func (o *Customer) SetCntInternalUser(v int32) {
	o.CntInternalUser = v
}

// GetCntGuestUser returns the CntGuestUser field value
func (o *Customer) GetCntGuestUser() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CntGuestUser
}

// GetCntGuestUserOk returns a tuple with the CntGuestUser field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCntGuestUserOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CntGuestUser, true
}

// SetCntGuestUser sets field value
func (o *Customer) SetCntGuestUser(v int32) {
	o.CntGuestUser = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Customer) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Customer) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetIsLocked returns the IsLocked field value if set, zero value otherwise.
func (o *Customer) GetIsLocked() bool {
	if o == nil || IsNil(o.IsLocked) {
		var ret bool
		return ret
	}
	return *o.IsLocked
}

// GetIsLockedOk returns a tuple with the IsLocked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetIsLockedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsLocked) {
		return nil, false
	}
	return o.IsLocked, true
}

// HasIsLocked returns a boolean if a field has been set.
func (o *Customer) HasIsLocked() bool {
	if o != nil && !IsNil(o.IsLocked) {
		return true
	}

	return false
}

// SetIsLocked gets a reference to the given bool and assigns it to the IsLocked field.
func (o *Customer) SetIsLocked(v bool) {
	o.IsLocked = &v
}

// GetTrialDaysLeft returns the TrialDaysLeft field value if set, zero value otherwise.
func (o *Customer) GetTrialDaysLeft() int32 {
	if o == nil || IsNil(o.TrialDaysLeft) {
		var ret int32
		return ret
	}
	return *o.TrialDaysLeft
}

// GetTrialDaysLeftOk returns a tuple with the TrialDaysLeft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetTrialDaysLeftOk() (*int32, bool) {
	if o == nil || IsNil(o.TrialDaysLeft) {
		return nil, false
	}
	return o.TrialDaysLeft, true
}

// HasTrialDaysLeft returns a boolean if a field has been set.
func (o *Customer) HasTrialDaysLeft() bool {
	if o != nil && !IsNil(o.TrialDaysLeft) {
		return true
	}

	return false
}

// SetTrialDaysLeft gets a reference to the given int32 and assigns it to the TrialDaysLeft field.
func (o *Customer) SetTrialDaysLeft(v int32) {
	o.TrialDaysLeft = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Customer) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Customer) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *Customer) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetLastLoginAt returns the LastLoginAt field value if set, zero value otherwise.
func (o *Customer) GetLastLoginAt() time.Time {
	if o == nil || IsNil(o.LastLoginAt) {
		var ret time.Time
		return ret
	}
	return *o.LastLoginAt
}

// GetLastLoginAtOk returns a tuple with the LastLoginAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetLastLoginAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastLoginAt) {
		return nil, false
	}
	return o.LastLoginAt, true
}

// HasLastLoginAt returns a boolean if a field has been set.
func (o *Customer) HasLastLoginAt() bool {
	if o != nil && !IsNil(o.LastLoginAt) {
		return true
	}

	return false
}

// SetLastLoginAt gets a reference to the given time.Time and assigns it to the LastLoginAt field.
func (o *Customer) SetLastLoginAt(v time.Time) {
	o.LastLoginAt = &v
}

// GetCustomerAttributes returns the CustomerAttributes field value if set, zero value otherwise.
func (o *Customer) GetCustomerAttributes() CustomerAttributes {
	if o == nil || IsNil(o.CustomerAttributes) {
		var ret CustomerAttributes
		return ret
	}
	return *o.CustomerAttributes
}

// GetCustomerAttributesOk returns a tuple with the CustomerAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetCustomerAttributesOk() (*CustomerAttributes, bool) {
	if o == nil || IsNil(o.CustomerAttributes) {
		return nil, false
	}
	return o.CustomerAttributes, true
}

// HasCustomerAttributes returns a boolean if a field has been set.
func (o *Customer) HasCustomerAttributes() bool {
	if o != nil && !IsNil(o.CustomerAttributes) {
		return true
	}

	return false
}

// SetCustomerAttributes gets a reference to the given CustomerAttributes and assigns it to the CustomerAttributes field.
func (o *Customer) SetCustomerAttributes(v CustomerAttributes) {
	o.CustomerAttributes = &v
}

// GetProviderCustomerId returns the ProviderCustomerId field value if set, zero value otherwise.
func (o *Customer) GetProviderCustomerId() string {
	if o == nil || IsNil(o.ProviderCustomerId) {
		var ret string
		return ret
	}
	return *o.ProviderCustomerId
}

// GetProviderCustomerIdOk returns a tuple with the ProviderCustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetProviderCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderCustomerId) {
		return nil, false
	}
	return o.ProviderCustomerId, true
}

// HasProviderCustomerId returns a boolean if a field has been set.
func (o *Customer) HasProviderCustomerId() bool {
	if o != nil && !IsNil(o.ProviderCustomerId) {
		return true
	}

	return false
}

// SetProviderCustomerId gets a reference to the given string and assigns it to the ProviderCustomerId field.
func (o *Customer) SetProviderCustomerId(v string) {
	o.ProviderCustomerId = &v
}

// GetWebhooksMax returns the WebhooksMax field value if set, zero value otherwise.
func (o *Customer) GetWebhooksMax() int64 {
	if o == nil || IsNil(o.WebhooksMax) {
		var ret int64
		return ret
	}
	return *o.WebhooksMax
}

// GetWebhooksMaxOk returns a tuple with the WebhooksMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Customer) GetWebhooksMaxOk() (*int64, bool) {
	if o == nil || IsNil(o.WebhooksMax) {
		return nil, false
	}
	return o.WebhooksMax, true
}

// HasWebhooksMax returns a boolean if a field has been set.
func (o *Customer) HasWebhooksMax() bool {
	if o != nil && !IsNil(o.WebhooksMax) {
		return true
	}

	return false
}

// SetWebhooksMax gets a reference to the given int64 and assigns it to the WebhooksMax field.
func (o *Customer) SetWebhooksMax(v int64) {
	o.WebhooksMax = &v
}

// GetActivationCode returns the ActivationCode field value if set, zero value otherwise.
// Deprecated
func (o *Customer) GetActivationCode() string {
	if o == nil || IsNil(o.ActivationCode) {
		var ret string
		return ret
	}
	return *o.ActivationCode
}

// GetActivationCodeOk returns a tuple with the ActivationCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *Customer) GetActivationCodeOk() (*string, bool) {
	if o == nil || IsNil(o.ActivationCode) {
		return nil, false
	}
	return o.ActivationCode, true
}

// HasActivationCode returns a boolean if a field has been set.
func (o *Customer) HasActivationCode() bool {
	if o != nil && !IsNil(o.ActivationCode) {
		return true
	}

	return false
}

// SetActivationCode gets a reference to the given string and assigns it to the ActivationCode field.
// Deprecated
func (o *Customer) SetActivationCode(v string) {
	o.ActivationCode = &v
}

// GetLockStatus returns the LockStatus field value
// Deprecated
func (o *Customer) GetLockStatus() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.LockStatus
}

// GetLockStatusOk returns a tuple with the LockStatus field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *Customer) GetLockStatusOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LockStatus, true
}

// SetLockStatus sets field value
// Deprecated
func (o *Customer) SetLockStatus(v bool) {
	o.LockStatus = v
}

// GetCustomerUuid returns the CustomerUuid field value
func (o *Customer) GetCustomerUuid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomerUuid
}

// GetCustomerUuidOk returns a tuple with the CustomerUuid field value
// and a boolean to check if the value has been set.
func (o *Customer) GetCustomerUuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomerUuid, true
}

// SetCustomerUuid sets field value
func (o *Customer) SetCustomerUuid(v string) {
	o.CustomerUuid = v
}

func (o Customer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Customer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["companyName"] = o.CompanyName
	toSerialize["customerContractType"] = o.CustomerContractType
	toSerialize["quotaMax"] = o.QuotaMax
	toSerialize["quotaUsed"] = o.QuotaUsed
	toSerialize["userMax"] = o.UserMax
	toSerialize["userUsed"] = o.UserUsed
	toSerialize["cntInternalUser"] = o.CntInternalUser
	toSerialize["cntGuestUser"] = o.CntGuestUser
	toSerialize["createdAt"] = o.CreatedAt
	if !IsNil(o.IsLocked) {
		toSerialize["isLocked"] = o.IsLocked
	}
	if !IsNil(o.TrialDaysLeft) {
		toSerialize["trialDaysLeft"] = o.TrialDaysLeft
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	if !IsNil(o.LastLoginAt) {
		toSerialize["lastLoginAt"] = o.LastLoginAt
	}
	if !IsNil(o.CustomerAttributes) {
		toSerialize["customerAttributes"] = o.CustomerAttributes
	}
	if !IsNil(o.ProviderCustomerId) {
		toSerialize["providerCustomerId"] = o.ProviderCustomerId
	}
	if !IsNil(o.WebhooksMax) {
		toSerialize["webhooksMax"] = o.WebhooksMax
	}
	if !IsNil(o.ActivationCode) {
		toSerialize["activationCode"] = o.ActivationCode
	}
	toSerialize["lockStatus"] = o.LockStatus
	toSerialize["customerUuid"] = o.CustomerUuid
	return toSerialize, nil
}

func (o *Customer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"companyName",
		"customerContractType",
		"quotaMax",
		"quotaUsed",
		"userMax",
		"userUsed",
		"cntInternalUser",
		"cntGuestUser",
		"createdAt",
		"lockStatus",
		"customerUuid",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCustomer := _Customer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCustomer)

	if err != nil {
		return err
	}

	*o = Customer(varCustomer)

	return err
}

type NullableCustomer struct {
	value *Customer
	isSet bool
}

func (v NullableCustomer) Get() *Customer {
	return v.value
}

func (v *NullableCustomer) Set(val *Customer) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomer) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomer(val *Customer) *NullableCustomer {
	return &NullableCustomer{value: val, isSet: true}
}

func (v NullableCustomer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
