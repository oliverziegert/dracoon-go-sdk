/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateClassificationPoliciesConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateClassificationPoliciesConfig{}

// UpdateClassificationPoliciesConfig Set of classification policies
type UpdateClassificationPoliciesConfig struct {
	ShareClassificationPolicies *ShareClassificationPolicies `json:"shareClassificationPolicies,omitempty"`
}

// NewUpdateClassificationPoliciesConfig instantiates a new UpdateClassificationPoliciesConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateClassificationPoliciesConfig() *UpdateClassificationPoliciesConfig {
	this := UpdateClassificationPoliciesConfig{}
	return &this
}

// NewUpdateClassificationPoliciesConfigWithDefaults instantiates a new UpdateClassificationPoliciesConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateClassificationPoliciesConfigWithDefaults() *UpdateClassificationPoliciesConfig {
	this := UpdateClassificationPoliciesConfig{}
	return &this
}

// GetShareClassificationPolicies returns the ShareClassificationPolicies field value if set, zero value otherwise.
func (o *UpdateClassificationPoliciesConfig) GetShareClassificationPolicies() ShareClassificationPolicies {
	if o == nil || IsNil(o.ShareClassificationPolicies) {
		var ret ShareClassificationPolicies
		return ret
	}
	return *o.ShareClassificationPolicies
}

// GetShareClassificationPoliciesOk returns a tuple with the ShareClassificationPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateClassificationPoliciesConfig) GetShareClassificationPoliciesOk() (*ShareClassificationPolicies, bool) {
	if o == nil || IsNil(o.ShareClassificationPolicies) {
		return nil, false
	}
	return o.ShareClassificationPolicies, true
}

// HasShareClassificationPolicies returns a boolean if a field has been set.
func (o *UpdateClassificationPoliciesConfig) HasShareClassificationPolicies() bool {
	if o != nil && !IsNil(o.ShareClassificationPolicies) {
		return true
	}

	return false
}

// SetShareClassificationPolicies gets a reference to the given ShareClassificationPolicies and assigns it to the ShareClassificationPolicies field.
func (o *UpdateClassificationPoliciesConfig) SetShareClassificationPolicies(v ShareClassificationPolicies) {
	o.ShareClassificationPolicies = &v
}

func (o UpdateClassificationPoliciesConfig) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateClassificationPoliciesConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ShareClassificationPolicies) {
		toSerialize["shareClassificationPolicies"] = o.ShareClassificationPolicies
	}
	return toSerialize, nil
}

type NullableUpdateClassificationPoliciesConfig struct {
	value *UpdateClassificationPoliciesConfig
	isSet bool
}

func (v NullableUpdateClassificationPoliciesConfig) Get() *UpdateClassificationPoliciesConfig {
	return v.value
}

func (v *NullableUpdateClassificationPoliciesConfig) Set(val *UpdateClassificationPoliciesConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateClassificationPoliciesConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateClassificationPoliciesConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateClassificationPoliciesConfig(val *UpdateClassificationPoliciesConfig) *NullableUpdateClassificationPoliciesConfig {
	return &NullableUpdateClassificationPoliciesConfig{value: val, isSet: true}
}

func (v NullableUpdateClassificationPoliciesConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateClassificationPoliciesConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
