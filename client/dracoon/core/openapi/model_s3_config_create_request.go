/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the S3ConfigCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3ConfigCreateRequest{}

// S3ConfigCreateRequest Request model for creating a S3 configuration
type S3ConfigCreateRequest struct {
	// S3 object storage bucket URL
	BucketUrl *string `json:"bucketUrl,omitempty"`
	// Access Key ID
	AccessKey string `json:"accessKey"`
	// Secret Access Key
	SecretKey string `json:"secretKey"`
	// S3 region
	Region *string `json:"region,omitempty"`
	// &#128679; Deprecated since v4.24.0  S3 object storage endpoint URL  use `bucketUrl` instead
	// Deprecated
	EndpointUrl *string `json:"endpointUrl,omitempty"`
	// &#128679; Deprecated since v4.24.0  S3 bucket name  use `bucketUrl` instead
	// Deprecated
	BucketName *string `json:"bucketName,omitempty"`
}

type _S3ConfigCreateRequest S3ConfigCreateRequest

// NewS3ConfigCreateRequest instantiates a new S3ConfigCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3ConfigCreateRequest(accessKey string, secretKey string) *S3ConfigCreateRequest {
	this := S3ConfigCreateRequest{}
	this.AccessKey = accessKey
	this.SecretKey = secretKey
	return &this
}

// NewS3ConfigCreateRequestWithDefaults instantiates a new S3ConfigCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3ConfigCreateRequestWithDefaults() *S3ConfigCreateRequest {
	this := S3ConfigCreateRequest{}
	return &this
}

// GetBucketUrl returns the BucketUrl field value if set, zero value otherwise.
func (o *S3ConfigCreateRequest) GetBucketUrl() string {
	if o == nil || IsNil(o.BucketUrl) {
		var ret string
		return ret
	}
	return *o.BucketUrl
}

// GetBucketUrlOk returns a tuple with the BucketUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3ConfigCreateRequest) GetBucketUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BucketUrl) {
		return nil, false
	}
	return o.BucketUrl, true
}

// HasBucketUrl returns a boolean if a field has been set.
func (o *S3ConfigCreateRequest) HasBucketUrl() bool {
	if o != nil && !IsNil(o.BucketUrl) {
		return true
	}

	return false
}

// SetBucketUrl gets a reference to the given string and assigns it to the BucketUrl field.
func (o *S3ConfigCreateRequest) SetBucketUrl(v string) {
	o.BucketUrl = &v
}

// GetAccessKey returns the AccessKey field value
func (o *S3ConfigCreateRequest) GetAccessKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value
// and a boolean to check if the value has been set.
func (o *S3ConfigCreateRequest) GetAccessKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessKey, true
}

// SetAccessKey sets field value
func (o *S3ConfigCreateRequest) SetAccessKey(v string) {
	o.AccessKey = v
}

// GetSecretKey returns the SecretKey field value
func (o *S3ConfigCreateRequest) GetSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
func (o *S3ConfigCreateRequest) GetSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretKey, true
}

// SetSecretKey sets field value
func (o *S3ConfigCreateRequest) SetSecretKey(v string) {
	o.SecretKey = v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *S3ConfigCreateRequest) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3ConfigCreateRequest) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *S3ConfigCreateRequest) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *S3ConfigCreateRequest) SetRegion(v string) {
	o.Region = &v
}

// GetEndpointUrl returns the EndpointUrl field value if set, zero value otherwise.
// Deprecated
func (o *S3ConfigCreateRequest) GetEndpointUrl() string {
	if o == nil || IsNil(o.EndpointUrl) {
		var ret string
		return ret
	}
	return *o.EndpointUrl
}

// GetEndpointUrlOk returns a tuple with the EndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *S3ConfigCreateRequest) GetEndpointUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointUrl) {
		return nil, false
	}
	return o.EndpointUrl, true
}

// HasEndpointUrl returns a boolean if a field has been set.
func (o *S3ConfigCreateRequest) HasEndpointUrl() bool {
	if o != nil && !IsNil(o.EndpointUrl) {
		return true
	}

	return false
}

// SetEndpointUrl gets a reference to the given string and assigns it to the EndpointUrl field.
// Deprecated
func (o *S3ConfigCreateRequest) SetEndpointUrl(v string) {
	o.EndpointUrl = &v
}

// GetBucketName returns the BucketName field value if set, zero value otherwise.
// Deprecated
func (o *S3ConfigCreateRequest) GetBucketName() string {
	if o == nil || IsNil(o.BucketName) {
		var ret string
		return ret
	}
	return *o.BucketName
}

// GetBucketNameOk returns a tuple with the BucketName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *S3ConfigCreateRequest) GetBucketNameOk() (*string, bool) {
	if o == nil || IsNil(o.BucketName) {
		return nil, false
	}
	return o.BucketName, true
}

// HasBucketName returns a boolean if a field has been set.
func (o *S3ConfigCreateRequest) HasBucketName() bool {
	if o != nil && !IsNil(o.BucketName) {
		return true
	}

	return false
}

// SetBucketName gets a reference to the given string and assigns it to the BucketName field.
// Deprecated
func (o *S3ConfigCreateRequest) SetBucketName(v string) {
	o.BucketName = &v
}

func (o S3ConfigCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3ConfigCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BucketUrl) {
		toSerialize["bucketUrl"] = o.BucketUrl
	}
	toSerialize["accessKey"] = o.AccessKey
	toSerialize["secretKey"] = o.SecretKey
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.EndpointUrl) {
		toSerialize["endpointUrl"] = o.EndpointUrl
	}
	if !IsNil(o.BucketName) {
		toSerialize["bucketName"] = o.BucketName
	}
	return toSerialize, nil
}

func (o *S3ConfigCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accessKey",
		"secretKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varS3ConfigCreateRequest := _S3ConfigCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varS3ConfigCreateRequest)

	if err != nil {
		return err
	}

	*o = S3ConfigCreateRequest(varS3ConfigCreateRequest)

	return err
}

type NullableS3ConfigCreateRequest struct {
	value *S3ConfigCreateRequest
	isSet bool
}

func (v NullableS3ConfigCreateRequest) Get() *S3ConfigCreateRequest {
	return v.value
}

func (v *NullableS3ConfigCreateRequest) Set(val *S3ConfigCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableS3ConfigCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableS3ConfigCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3ConfigCreateRequest(val *S3ConfigCreateRequest) *NullableS3ConfigCreateRequest {
	return &NullableS3ConfigCreateRequest{value: val, isSet: true}
}

func (v NullableS3ConfigCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3ConfigCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
