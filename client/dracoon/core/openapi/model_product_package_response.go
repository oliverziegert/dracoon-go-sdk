/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ProductPackageResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProductPackageResponse{}

// ProductPackageResponse ProductPackageResponse
type ProductPackageResponse struct {
	// ID
	ProductPackageId int64 `json:"productPackageId"`
	// Name
	ProductPackageName string `json:"productPackageName"`
	// Features
	Features []Feature `json:"features"`
	// OAuth Client Information
	Clients []FeaturedOAuthClient `json:"clients"`
}

type _ProductPackageResponse ProductPackageResponse

// NewProductPackageResponse instantiates a new ProductPackageResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductPackageResponse(productPackageId int64, productPackageName string, features []Feature, clients []FeaturedOAuthClient) *ProductPackageResponse {
	this := ProductPackageResponse{}
	this.ProductPackageId = productPackageId
	this.ProductPackageName = productPackageName
	this.Features = features
	this.Clients = clients
	return &this
}

// NewProductPackageResponseWithDefaults instantiates a new ProductPackageResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductPackageResponseWithDefaults() *ProductPackageResponse {
	this := ProductPackageResponse{}
	return &this
}

// GetProductPackageId returns the ProductPackageId field value
func (o *ProductPackageResponse) GetProductPackageId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProductPackageId
}

// GetProductPackageIdOk returns a tuple with the ProductPackageId field value
// and a boolean to check if the value has been set.
func (o *ProductPackageResponse) GetProductPackageIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductPackageId, true
}

// SetProductPackageId sets field value
func (o *ProductPackageResponse) SetProductPackageId(v int64) {
	o.ProductPackageId = v
}

// GetProductPackageName returns the ProductPackageName field value
func (o *ProductPackageResponse) GetProductPackageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProductPackageName
}

// GetProductPackageNameOk returns a tuple with the ProductPackageName field value
// and a boolean to check if the value has been set.
func (o *ProductPackageResponse) GetProductPackageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProductPackageName, true
}

// SetProductPackageName sets field value
func (o *ProductPackageResponse) SetProductPackageName(v string) {
	o.ProductPackageName = v
}

// GetFeatures returns the Features field value
func (o *ProductPackageResponse) GetFeatures() []Feature {
	if o == nil {
		var ret []Feature
		return ret
	}

	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value
// and a boolean to check if the value has been set.
func (o *ProductPackageResponse) GetFeaturesOk() ([]Feature, bool) {
	if o == nil {
		return nil, false
	}
	return o.Features, true
}

// SetFeatures sets field value
func (o *ProductPackageResponse) SetFeatures(v []Feature) {
	o.Features = v
}

// GetClients returns the Clients field value
func (o *ProductPackageResponse) GetClients() []FeaturedOAuthClient {
	if o == nil {
		var ret []FeaturedOAuthClient
		return ret
	}

	return o.Clients
}

// GetClientsOk returns a tuple with the Clients field value
// and a boolean to check if the value has been set.
func (o *ProductPackageResponse) GetClientsOk() ([]FeaturedOAuthClient, bool) {
	if o == nil {
		return nil, false
	}
	return o.Clients, true
}

// SetClients sets field value
func (o *ProductPackageResponse) SetClients(v []FeaturedOAuthClient) {
	o.Clients = v
}

func (o ProductPackageResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProductPackageResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["productPackageId"] = o.ProductPackageId
	toSerialize["productPackageName"] = o.ProductPackageName
	toSerialize["features"] = o.Features
	toSerialize["clients"] = o.Clients
	return toSerialize, nil
}

func (o *ProductPackageResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"productPackageId",
		"productPackageName",
		"features",
		"clients",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varProductPackageResponse := _ProductPackageResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varProductPackageResponse)

	if err != nil {
		return err
	}

	*o = ProductPackageResponse(varProductPackageResponse)

	return err
}

type NullableProductPackageResponse struct {
	value *ProductPackageResponse
	isSet bool
}

func (v NullableProductPackageResponse) Get() *ProductPackageResponse {
	return v.value
}

func (v *NullableProductPackageResponse) Set(val *ProductPackageResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProductPackageResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProductPackageResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductPackageResponse(val *ProductPackageResponse) *NullableProductPackageResponse {
	return &NullableProductPackageResponse{value: val, isSet: true}
}

func (v NullableProductPackageResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductPackageResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
