/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateSystemDefaults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSystemDefaults{}

// UpdateSystemDefaults Request model for updating system defaults
type UpdateSystemDefaults struct {
	// Define which language should be default.
	LanguageDefault *string `json:"languageDefault,omitempty"`
	// Default expiration period for Download Shares in days.
	DownloadShareDefaultExpirationPeriod *int32 `json:"downloadShareDefaultExpirationPeriod,omitempty"`
	// Default expiration period for Upload Shares in days.
	UploadShareDefaultExpirationPeriod *int32 `json:"uploadShareDefaultExpirationPeriod,omitempty"`
	// Default expiration period for all uploaded files in days.
	FileDefaultExpirationPeriod *int32 `json:"fileDefaultExpirationPeriod,omitempty"`
	// &#128640; Since v4.12.0  Defines if new users get the role Non Member Viewer by default
	NonmemberViewerDefault *bool `json:"nonmemberViewerDefault,omitempty"`
}

// NewUpdateSystemDefaults instantiates a new UpdateSystemDefaults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSystemDefaults() *UpdateSystemDefaults {
	this := UpdateSystemDefaults{}
	return &this
}

// NewUpdateSystemDefaultsWithDefaults instantiates a new UpdateSystemDefaults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSystemDefaultsWithDefaults() *UpdateSystemDefaults {
	this := UpdateSystemDefaults{}
	return &this
}

// GetLanguageDefault returns the LanguageDefault field value if set, zero value otherwise.
func (o *UpdateSystemDefaults) GetLanguageDefault() string {
	if o == nil || IsNil(o.LanguageDefault) {
		var ret string
		return ret
	}
	return *o.LanguageDefault
}

// GetLanguageDefaultOk returns a tuple with the LanguageDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemDefaults) GetLanguageDefaultOk() (*string, bool) {
	if o == nil || IsNil(o.LanguageDefault) {
		return nil, false
	}
	return o.LanguageDefault, true
}

// HasLanguageDefault returns a boolean if a field has been set.
func (o *UpdateSystemDefaults) HasLanguageDefault() bool {
	if o != nil && !IsNil(o.LanguageDefault) {
		return true
	}

	return false
}

// SetLanguageDefault gets a reference to the given string and assigns it to the LanguageDefault field.
func (o *UpdateSystemDefaults) SetLanguageDefault(v string) {
	o.LanguageDefault = &v
}

// GetDownloadShareDefaultExpirationPeriod returns the DownloadShareDefaultExpirationPeriod field value if set, zero value otherwise.
func (o *UpdateSystemDefaults) GetDownloadShareDefaultExpirationPeriod() int32 {
	if o == nil || IsNil(o.DownloadShareDefaultExpirationPeriod) {
		var ret int32
		return ret
	}
	return *o.DownloadShareDefaultExpirationPeriod
}

// GetDownloadShareDefaultExpirationPeriodOk returns a tuple with the DownloadShareDefaultExpirationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemDefaults) GetDownloadShareDefaultExpirationPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.DownloadShareDefaultExpirationPeriod) {
		return nil, false
	}
	return o.DownloadShareDefaultExpirationPeriod, true
}

// HasDownloadShareDefaultExpirationPeriod returns a boolean if a field has been set.
func (o *UpdateSystemDefaults) HasDownloadShareDefaultExpirationPeriod() bool {
	if o != nil && !IsNil(o.DownloadShareDefaultExpirationPeriod) {
		return true
	}

	return false
}

// SetDownloadShareDefaultExpirationPeriod gets a reference to the given int32 and assigns it to the DownloadShareDefaultExpirationPeriod field.
func (o *UpdateSystemDefaults) SetDownloadShareDefaultExpirationPeriod(v int32) {
	o.DownloadShareDefaultExpirationPeriod = &v
}

// GetUploadShareDefaultExpirationPeriod returns the UploadShareDefaultExpirationPeriod field value if set, zero value otherwise.
func (o *UpdateSystemDefaults) GetUploadShareDefaultExpirationPeriod() int32 {
	if o == nil || IsNil(o.UploadShareDefaultExpirationPeriod) {
		var ret int32
		return ret
	}
	return *o.UploadShareDefaultExpirationPeriod
}

// GetUploadShareDefaultExpirationPeriodOk returns a tuple with the UploadShareDefaultExpirationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemDefaults) GetUploadShareDefaultExpirationPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.UploadShareDefaultExpirationPeriod) {
		return nil, false
	}
	return o.UploadShareDefaultExpirationPeriod, true
}

// HasUploadShareDefaultExpirationPeriod returns a boolean if a field has been set.
func (o *UpdateSystemDefaults) HasUploadShareDefaultExpirationPeriod() bool {
	if o != nil && !IsNil(o.UploadShareDefaultExpirationPeriod) {
		return true
	}

	return false
}

// SetUploadShareDefaultExpirationPeriod gets a reference to the given int32 and assigns it to the UploadShareDefaultExpirationPeriod field.
func (o *UpdateSystemDefaults) SetUploadShareDefaultExpirationPeriod(v int32) {
	o.UploadShareDefaultExpirationPeriod = &v
}

// GetFileDefaultExpirationPeriod returns the FileDefaultExpirationPeriod field value if set, zero value otherwise.
func (o *UpdateSystemDefaults) GetFileDefaultExpirationPeriod() int32 {
	if o == nil || IsNil(o.FileDefaultExpirationPeriod) {
		var ret int32
		return ret
	}
	return *o.FileDefaultExpirationPeriod
}

// GetFileDefaultExpirationPeriodOk returns a tuple with the FileDefaultExpirationPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemDefaults) GetFileDefaultExpirationPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.FileDefaultExpirationPeriod) {
		return nil, false
	}
	return o.FileDefaultExpirationPeriod, true
}

// HasFileDefaultExpirationPeriod returns a boolean if a field has been set.
func (o *UpdateSystemDefaults) HasFileDefaultExpirationPeriod() bool {
	if o != nil && !IsNil(o.FileDefaultExpirationPeriod) {
		return true
	}

	return false
}

// SetFileDefaultExpirationPeriod gets a reference to the given int32 and assigns it to the FileDefaultExpirationPeriod field.
func (o *UpdateSystemDefaults) SetFileDefaultExpirationPeriod(v int32) {
	o.FileDefaultExpirationPeriod = &v
}

// GetNonmemberViewerDefault returns the NonmemberViewerDefault field value if set, zero value otherwise.
func (o *UpdateSystemDefaults) GetNonmemberViewerDefault() bool {
	if o == nil || IsNil(o.NonmemberViewerDefault) {
		var ret bool
		return ret
	}
	return *o.NonmemberViewerDefault
}

// GetNonmemberViewerDefaultOk returns a tuple with the NonmemberViewerDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateSystemDefaults) GetNonmemberViewerDefaultOk() (*bool, bool) {
	if o == nil || IsNil(o.NonmemberViewerDefault) {
		return nil, false
	}
	return o.NonmemberViewerDefault, true
}

// HasNonmemberViewerDefault returns a boolean if a field has been set.
func (o *UpdateSystemDefaults) HasNonmemberViewerDefault() bool {
	if o != nil && !IsNil(o.NonmemberViewerDefault) {
		return true
	}

	return false
}

// SetNonmemberViewerDefault gets a reference to the given bool and assigns it to the NonmemberViewerDefault field.
func (o *UpdateSystemDefaults) SetNonmemberViewerDefault(v bool) {
	o.NonmemberViewerDefault = &v
}

func (o UpdateSystemDefaults) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSystemDefaults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LanguageDefault) {
		toSerialize["languageDefault"] = o.LanguageDefault
	}
	if !IsNil(o.DownloadShareDefaultExpirationPeriod) {
		toSerialize["downloadShareDefaultExpirationPeriod"] = o.DownloadShareDefaultExpirationPeriod
	}
	if !IsNil(o.UploadShareDefaultExpirationPeriod) {
		toSerialize["uploadShareDefaultExpirationPeriod"] = o.UploadShareDefaultExpirationPeriod
	}
	if !IsNil(o.FileDefaultExpirationPeriod) {
		toSerialize["fileDefaultExpirationPeriod"] = o.FileDefaultExpirationPeriod
	}
	if !IsNil(o.NonmemberViewerDefault) {
		toSerialize["nonmemberViewerDefault"] = o.NonmemberViewerDefault
	}
	return toSerialize, nil
}

type NullableUpdateSystemDefaults struct {
	value *UpdateSystemDefaults
	isSet bool
}

func (v NullableUpdateSystemDefaults) Get() *UpdateSystemDefaults {
	return v.value
}

func (v *NullableUpdateSystemDefaults) Set(val *UpdateSystemDefaults) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSystemDefaults) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSystemDefaults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSystemDefaults(val *UpdateSystemDefaults) *NullableUpdateSystemDefaults {
	return &NullableUpdateSystemDefaults{value: val, isSet: true}
}

func (v NullableUpdateSystemDefaults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSystemDefaults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
