/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateUserAccountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserAccountRequest{}

// UpdateUserAccountRequest Request model for updating user account information
type UpdateUserAccountRequest struct {
	// &#128640; Since v4.13.0  Username
	UserName *string `json:"userName,omitempty"`
	// Accept EULA  Present, if EULA is system global active.  cf. `GET system/config/settings/general` - `eulaEnabled`  If accepted can not be undone.
	AcceptEULA *bool `json:"acceptEULA,omitempty"`
	// User first name
	FirstName *string `json:"firstName,omitempty"`
	// User last name
	LastName *string `json:"lastName,omitempty"`
	// Email
	Email *string `json:"email,omitempty"`
	// Phone number
	Phone *string `json:"phone,omitempty"`
	// &#128640; Since v4.20.0  IETF language tag
	Language *string `json:"language,omitempty"`
	// &#128679; Deprecated since v4.18.0  Job title
	// Deprecated
	Title *string `json:"title,omitempty"`
	// &#128679; Deprecated since v4.13.0  User login name
	// Deprecated
	Login *string `json:"login,omitempty"`
	// &#128679; Deprecated since v4.12.0  Gender  Do NOT use `gender`! It will be ignored.
	// Deprecated
	Gender *string `json:"gender,omitempty"`
}

// NewUpdateUserAccountRequest instantiates a new UpdateUserAccountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserAccountRequest() *UpdateUserAccountRequest {
	this := UpdateUserAccountRequest{}
	var gender string = "n"
	this.Gender = &gender
	return &this
}

// NewUpdateUserAccountRequestWithDefaults instantiates a new UpdateUserAccountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserAccountRequestWithDefaults() *UpdateUserAccountRequest {
	this := UpdateUserAccountRequest{}
	var gender string = "n"
	this.Gender = &gender
	return &this
}

// GetUserName returns the UserName field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetUserName() string {
	if o == nil || IsNil(o.UserName) {
		var ret string
		return ret
	}
	return *o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetUserNameOk() (*string, bool) {
	if o == nil || IsNil(o.UserName) {
		return nil, false
	}
	return o.UserName, true
}

// HasUserName returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasUserName() bool {
	if o != nil && !IsNil(o.UserName) {
		return true
	}

	return false
}

// SetUserName gets a reference to the given string and assigns it to the UserName field.
func (o *UpdateUserAccountRequest) SetUserName(v string) {
	o.UserName = &v
}

// GetAcceptEULA returns the AcceptEULA field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetAcceptEULA() bool {
	if o == nil || IsNil(o.AcceptEULA) {
		var ret bool
		return ret
	}
	return *o.AcceptEULA
}

// GetAcceptEULAOk returns a tuple with the AcceptEULA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetAcceptEULAOk() (*bool, bool) {
	if o == nil || IsNil(o.AcceptEULA) {
		return nil, false
	}
	return o.AcceptEULA, true
}

// HasAcceptEULA returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasAcceptEULA() bool {
	if o != nil && !IsNil(o.AcceptEULA) {
		return true
	}

	return false
}

// SetAcceptEULA gets a reference to the given bool and assigns it to the AcceptEULA field.
func (o *UpdateUserAccountRequest) SetAcceptEULA(v bool) {
	o.AcceptEULA = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetFirstName() string {
	if o == nil || IsNil(o.FirstName) {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetFirstNameOk() (*string, bool) {
	if o == nil || IsNil(o.FirstName) {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasFirstName() bool {
	if o != nil && !IsNil(o.FirstName) {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *UpdateUserAccountRequest) SetFirstName(v string) {
	o.FirstName = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetLastName() string {
	if o == nil || IsNil(o.LastName) {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetLastNameOk() (*string, bool) {
	if o == nil || IsNil(o.LastName) {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasLastName() bool {
	if o != nil && !IsNil(o.LastName) {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *UpdateUserAccountRequest) SetLastName(v string) {
	o.LastName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UpdateUserAccountRequest) SetEmail(v string) {
	o.Email = &v
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *UpdateUserAccountRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *UpdateUserAccountRequest) GetLanguage() string {
	if o == nil || IsNil(o.Language) {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserAccountRequest) GetLanguageOk() (*string, bool) {
	if o == nil || IsNil(o.Language) {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasLanguage() bool {
	if o != nil && !IsNil(o.Language) {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *UpdateUserAccountRequest) SetLanguage(v string) {
	o.Language = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
// Deprecated
func (o *UpdateUserAccountRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateUserAccountRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
// Deprecated
func (o *UpdateUserAccountRequest) SetTitle(v string) {
	o.Title = &v
}

// GetLogin returns the Login field value if set, zero value otherwise.
// Deprecated
func (o *UpdateUserAccountRequest) GetLogin() string {
	if o == nil || IsNil(o.Login) {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateUserAccountRequest) GetLoginOk() (*string, bool) {
	if o == nil || IsNil(o.Login) {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasLogin() bool {
	if o != nil && !IsNil(o.Login) {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
// Deprecated
func (o *UpdateUserAccountRequest) SetLogin(v string) {
	o.Login = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
// Deprecated
func (o *UpdateUserAccountRequest) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *UpdateUserAccountRequest) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *UpdateUserAccountRequest) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
// Deprecated
func (o *UpdateUserAccountRequest) SetGender(v string) {
	o.Gender = &v
}

func (o UpdateUserAccountRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserAccountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserName) {
		toSerialize["userName"] = o.UserName
	}
	if !IsNil(o.AcceptEULA) {
		toSerialize["acceptEULA"] = o.AcceptEULA
	}
	if !IsNil(o.FirstName) {
		toSerialize["firstName"] = o.FirstName
	}
	if !IsNil(o.LastName) {
		toSerialize["lastName"] = o.LastName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Language) {
		toSerialize["language"] = o.Language
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Login) {
		toSerialize["login"] = o.Login
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	return toSerialize, nil
}

type NullableUpdateUserAccountRequest struct {
	value *UpdateUserAccountRequest
	isSet bool
}

func (v NullableUpdateUserAccountRequest) Get() *UpdateUserAccountRequest {
	return v.value
}

func (v *NullableUpdateUserAccountRequest) Set(val *UpdateUserAccountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserAccountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserAccountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserAccountRequest(val *UpdateUserAccountRequest) *NullableUpdateUserAccountRequest {
	return &NullableUpdateUserAccountRequest{value: val, isSet: true}
}

func (v NullableUpdateUserAccountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserAccountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
