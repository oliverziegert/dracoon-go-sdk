/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
	"time"
)

// checks if the PublicKeyContainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PublicKeyContainer{}

// PublicKeyContainer Public key container
type PublicKeyContainer struct {
	// Version
	Version string `json:"version"`
	// Public key
	PublicKey string `json:"publicKey"`
	// &#128640; Since v4.24.0  Creation date
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// &#128640; Since v4.24.0  Created by user
	CreatedBy *int64 `json:"createdBy,omitempty"`
}

type _PublicKeyContainer PublicKeyContainer

// NewPublicKeyContainer instantiates a new PublicKeyContainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPublicKeyContainer(version string, publicKey string) *PublicKeyContainer {
	this := PublicKeyContainer{}
	this.Version = version
	this.PublicKey = publicKey
	return &this
}

// NewPublicKeyContainerWithDefaults instantiates a new PublicKeyContainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPublicKeyContainerWithDefaults() *PublicKeyContainer {
	this := PublicKeyContainer{}
	return &this
}

// GetVersion returns the Version field value
func (o *PublicKeyContainer) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *PublicKeyContainer) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *PublicKeyContainer) SetVersion(v string) {
	o.Version = v
}

// GetPublicKey returns the PublicKey field value
func (o *PublicKeyContainer) GetPublicKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value
// and a boolean to check if the value has been set.
func (o *PublicKeyContainer) GetPublicKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PublicKey, true
}

// SetPublicKey sets field value
func (o *PublicKeyContainer) SetPublicKey(v string) {
	o.PublicKey = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PublicKeyContainer) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyContainer) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PublicKeyContainer) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PublicKeyContainer) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *PublicKeyContainer) GetCreatedBy() int64 {
	if o == nil || IsNil(o.CreatedBy) {
		var ret int64
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PublicKeyContainer) GetCreatedByOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *PublicKeyContainer) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given int64 and assigns it to the CreatedBy field.
func (o *PublicKeyContainer) SetCreatedBy(v int64) {
	o.CreatedBy = &v
}

func (o PublicKeyContainer) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PublicKeyContainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["version"] = o.Version
	toSerialize["publicKey"] = o.PublicKey
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	return toSerialize, nil
}

func (o *PublicKeyContainer) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"version",
		"publicKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPublicKeyContainer := _PublicKeyContainer{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPublicKeyContainer)

	if err != nil {
		return err
	}

	*o = PublicKeyContainer(varPublicKeyContainer)

	return err
}

type NullablePublicKeyContainer struct {
	value *PublicKeyContainer
	isSet bool
}

func (v NullablePublicKeyContainer) Get() *PublicKeyContainer {
	return v.value
}

func (v *NullablePublicKeyContainer) Set(val *PublicKeyContainer) {
	v.value = val
	v.isSet = true
}

func (v NullablePublicKeyContainer) IsSet() bool {
	return v.isSet
}

func (v *NullablePublicKeyContainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePublicKeyContainer(val *PublicKeyContainer) *NullablePublicKeyContainer {
	return &NullablePublicKeyContainer{value: val, isSet: true}
}

func (v NullablePublicKeyContainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePublicKeyContainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
