/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PasswordPolicyViolationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PasswordPolicyViolationResponse{}

// PasswordPolicyViolationResponse List of violated password policies
type PasswordPolicyViolationResponse struct {
	// HTTP status code
	Code int32 `json:"code"`
	// HTTP status code description
	Message string `json:"message"`
	// Debug information
	DebugInfo *string `json:"debugInfo,omitempty"`
	// Internal error code
	ErrorCode *int32 `json:"errorCode,omitempty"`
	// List of violated password policies
	ViolatedPasswordPolicies []ViolatedPasswordPolicy `json:"violatedPasswordPolicies,omitempty"`
}

type _PasswordPolicyViolationResponse PasswordPolicyViolationResponse

// NewPasswordPolicyViolationResponse instantiates a new PasswordPolicyViolationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordPolicyViolationResponse(code int32, message string) *PasswordPolicyViolationResponse {
	this := PasswordPolicyViolationResponse{}
	this.Code = code
	this.Message = message
	return &this
}

// NewPasswordPolicyViolationResponseWithDefaults instantiates a new PasswordPolicyViolationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordPolicyViolationResponseWithDefaults() *PasswordPolicyViolationResponse {
	this := PasswordPolicyViolationResponse{}
	return &this
}

// GetCode returns the Code field value
func (o *PasswordPolicyViolationResponse) GetCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *PasswordPolicyViolationResponse) GetCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *PasswordPolicyViolationResponse) SetCode(v int32) {
	o.Code = v
}

// GetMessage returns the Message field value
func (o *PasswordPolicyViolationResponse) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PasswordPolicyViolationResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PasswordPolicyViolationResponse) SetMessage(v string) {
	o.Message = v
}

// GetDebugInfo returns the DebugInfo field value if set, zero value otherwise.
func (o *PasswordPolicyViolationResponse) GetDebugInfo() string {
	if o == nil || IsNil(o.DebugInfo) {
		var ret string
		return ret
	}
	return *o.DebugInfo
}

// GetDebugInfoOk returns a tuple with the DebugInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyViolationResponse) GetDebugInfoOk() (*string, bool) {
	if o == nil || IsNil(o.DebugInfo) {
		return nil, false
	}
	return o.DebugInfo, true
}

// HasDebugInfo returns a boolean if a field has been set.
func (o *PasswordPolicyViolationResponse) HasDebugInfo() bool {
	if o != nil && !IsNil(o.DebugInfo) {
		return true
	}

	return false
}

// SetDebugInfo gets a reference to the given string and assigns it to the DebugInfo field.
func (o *PasswordPolicyViolationResponse) SetDebugInfo(v string) {
	o.DebugInfo = &v
}

// GetErrorCode returns the ErrorCode field value if set, zero value otherwise.
func (o *PasswordPolicyViolationResponse) GetErrorCode() int32 {
	if o == nil || IsNil(o.ErrorCode) {
		var ret int32
		return ret
	}
	return *o.ErrorCode
}

// GetErrorCodeOk returns a tuple with the ErrorCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyViolationResponse) GetErrorCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.ErrorCode) {
		return nil, false
	}
	return o.ErrorCode, true
}

// HasErrorCode returns a boolean if a field has been set.
func (o *PasswordPolicyViolationResponse) HasErrorCode() bool {
	if o != nil && !IsNil(o.ErrorCode) {
		return true
	}

	return false
}

// SetErrorCode gets a reference to the given int32 and assigns it to the ErrorCode field.
func (o *PasswordPolicyViolationResponse) SetErrorCode(v int32) {
	o.ErrorCode = &v
}

// GetViolatedPasswordPolicies returns the ViolatedPasswordPolicies field value if set, zero value otherwise.
func (o *PasswordPolicyViolationResponse) GetViolatedPasswordPolicies() []ViolatedPasswordPolicy {
	if o == nil || IsNil(o.ViolatedPasswordPolicies) {
		var ret []ViolatedPasswordPolicy
		return ret
	}
	return o.ViolatedPasswordPolicies
}

// GetViolatedPasswordPoliciesOk returns a tuple with the ViolatedPasswordPolicies field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordPolicyViolationResponse) GetViolatedPasswordPoliciesOk() ([]ViolatedPasswordPolicy, bool) {
	if o == nil || IsNil(o.ViolatedPasswordPolicies) {
		return nil, false
	}
	return o.ViolatedPasswordPolicies, true
}

// HasViolatedPasswordPolicies returns a boolean if a field has been set.
func (o *PasswordPolicyViolationResponse) HasViolatedPasswordPolicies() bool {
	if o != nil && !IsNil(o.ViolatedPasswordPolicies) {
		return true
	}

	return false
}

// SetViolatedPasswordPolicies gets a reference to the given []ViolatedPasswordPolicy and assigns it to the ViolatedPasswordPolicies field.
func (o *PasswordPolicyViolationResponse) SetViolatedPasswordPolicies(v []ViolatedPasswordPolicy) {
	o.ViolatedPasswordPolicies = v
}

func (o PasswordPolicyViolationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PasswordPolicyViolationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	toSerialize["message"] = o.Message
	if !IsNil(o.DebugInfo) {
		toSerialize["debugInfo"] = o.DebugInfo
	}
	if !IsNil(o.ErrorCode) {
		toSerialize["errorCode"] = o.ErrorCode
	}
	if !IsNil(o.ViolatedPasswordPolicies) {
		toSerialize["violatedPasswordPolicies"] = o.ViolatedPasswordPolicies
	}
	return toSerialize, nil
}

func (o *PasswordPolicyViolationResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPasswordPolicyViolationResponse := _PasswordPolicyViolationResponse{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPasswordPolicyViolationResponse)

	if err != nil {
		return err
	}

	*o = PasswordPolicyViolationResponse(varPasswordPolicyViolationResponse)

	return err
}

type NullablePasswordPolicyViolationResponse struct {
	value *PasswordPolicyViolationResponse
	isSet bool
}

func (v NullablePasswordPolicyViolationResponse) Get() *PasswordPolicyViolationResponse {
	return v.value
}

func (v *NullablePasswordPolicyViolationResponse) Set(val *PasswordPolicyViolationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordPolicyViolationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordPolicyViolationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordPolicyViolationResponse(val *PasswordPolicyViolationResponse) *NullablePasswordPolicyViolationResponse {
	return &NullablePasswordPolicyViolationResponse{value: val, isSet: true}
}

func (v NullablePasswordPolicyViolationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordPolicyViolationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
