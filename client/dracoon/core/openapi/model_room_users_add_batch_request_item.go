/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RoomUsersAddBatchRequestItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoomUsersAddBatchRequestItem{}

// RoomUsersAddBatchRequestItem Request item model for granting user to the room
type RoomUsersAddBatchRequestItem struct {
	// Unique identifier for the user
	Id          int64           `json:"id"`
	Permissions NodePermissions `json:"permissions"`
}

type _RoomUsersAddBatchRequestItem RoomUsersAddBatchRequestItem

// NewRoomUsersAddBatchRequestItem instantiates a new RoomUsersAddBatchRequestItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoomUsersAddBatchRequestItem(id int64, permissions NodePermissions) *RoomUsersAddBatchRequestItem {
	this := RoomUsersAddBatchRequestItem{}
	this.Id = id
	this.Permissions = permissions
	return &this
}

// NewRoomUsersAddBatchRequestItemWithDefaults instantiates a new RoomUsersAddBatchRequestItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoomUsersAddBatchRequestItemWithDefaults() *RoomUsersAddBatchRequestItem {
	this := RoomUsersAddBatchRequestItem{}
	return &this
}

// GetId returns the Id field value
func (o *RoomUsersAddBatchRequestItem) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RoomUsersAddBatchRequestItem) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RoomUsersAddBatchRequestItem) SetId(v int64) {
	o.Id = v
}

// GetPermissions returns the Permissions field value
func (o *RoomUsersAddBatchRequestItem) GetPermissions() NodePermissions {
	if o == nil {
		var ret NodePermissions
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *RoomUsersAddBatchRequestItem) GetPermissionsOk() (*NodePermissions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *RoomUsersAddBatchRequestItem) SetPermissions(v NodePermissions) {
	o.Permissions = v
}

func (o RoomUsersAddBatchRequestItem) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoomUsersAddBatchRequestItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

func (o *RoomUsersAddBatchRequestItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"permissions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoomUsersAddBatchRequestItem := _RoomUsersAddBatchRequestItem{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoomUsersAddBatchRequestItem)

	if err != nil {
		return err
	}

	*o = RoomUsersAddBatchRequestItem(varRoomUsersAddBatchRequestItem)

	return err
}

type NullableRoomUsersAddBatchRequestItem struct {
	value *RoomUsersAddBatchRequestItem
	isSet bool
}

func (v NullableRoomUsersAddBatchRequestItem) Get() *RoomUsersAddBatchRequestItem {
	return v.value
}

func (v *NullableRoomUsersAddBatchRequestItem) Set(val *RoomUsersAddBatchRequestItem) {
	v.value = val
	v.isSet = true
}

func (v NullableRoomUsersAddBatchRequestItem) IsSet() bool {
	return v.isSet
}

func (v *NullableRoomUsersAddBatchRequestItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoomUsersAddBatchRequestItem(val *RoomUsersAddBatchRequestItem) *NullableRoomUsersAddBatchRequestItem {
	return &NullableRoomUsersAddBatchRequestItem{value: val, isSet: true}
}

func (v NullableRoomUsersAddBatchRequestItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoomUsersAddBatchRequestItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
