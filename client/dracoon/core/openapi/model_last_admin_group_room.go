/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the LastAdminGroupRoom type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LastAdminGroupRoom{}

// LastAdminGroupRoom Room information
type LastAdminGroupRoom struct {
	// Room ID
	Id int64 `json:"id"`
	// Room name
	Name string `json:"name"`
	// Parent node path  `/` if node is a root node (room)
	ParentPath string `json:"parentPath"`
	// Parent room ID
	ParentId *int64 `json:"parentId,omitempty"`
}

type _LastAdminGroupRoom LastAdminGroupRoom

// NewLastAdminGroupRoom instantiates a new LastAdminGroupRoom object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLastAdminGroupRoom(id int64, name string, parentPath string) *LastAdminGroupRoom {
	this := LastAdminGroupRoom{}
	this.Id = id
	this.Name = name
	this.ParentPath = parentPath
	return &this
}

// NewLastAdminGroupRoomWithDefaults instantiates a new LastAdminGroupRoom object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLastAdminGroupRoomWithDefaults() *LastAdminGroupRoom {
	this := LastAdminGroupRoom{}
	return &this
}

// GetId returns the Id field value
func (o *LastAdminGroupRoom) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *LastAdminGroupRoom) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *LastAdminGroupRoom) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *LastAdminGroupRoom) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *LastAdminGroupRoom) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *LastAdminGroupRoom) SetName(v string) {
	o.Name = v
}

// GetParentPath returns the ParentPath field value
func (o *LastAdminGroupRoom) GetParentPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParentPath
}

// GetParentPathOk returns a tuple with the ParentPath field value
// and a boolean to check if the value has been set.
func (o *LastAdminGroupRoom) GetParentPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParentPath, true
}

// SetParentPath sets field value
func (o *LastAdminGroupRoom) SetParentPath(v string) {
	o.ParentPath = v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *LastAdminGroupRoom) GetParentId() int64 {
	if o == nil || IsNil(o.ParentId) {
		var ret int64
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LastAdminGroupRoom) GetParentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *LastAdminGroupRoom) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int64 and assigns it to the ParentId field.
func (o *LastAdminGroupRoom) SetParentId(v int64) {
	o.ParentId = &v
}

func (o LastAdminGroupRoom) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LastAdminGroupRoom) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["parentPath"] = o.ParentPath
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	return toSerialize, nil
}

func (o *LastAdminGroupRoom) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"parentPath",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varLastAdminGroupRoom := _LastAdminGroupRoom{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varLastAdminGroupRoom)

	if err != nil {
		return err
	}

	*o = LastAdminGroupRoom(varLastAdminGroupRoom)

	return err
}

type NullableLastAdminGroupRoom struct {
	value *LastAdminGroupRoom
	isSet bool
}

func (v NullableLastAdminGroupRoom) Get() *LastAdminGroupRoom {
	return v.value
}

func (v *NullableLastAdminGroupRoom) Set(val *LastAdminGroupRoom) {
	v.value = val
	v.isSet = true
}

func (v NullableLastAdminGroupRoom) IsSet() bool {
	return v.isSet
}

func (v *NullableLastAdminGroupRoom) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLastAdminGroupRoom(val *LastAdminGroupRoom) *NullableLastAdminGroupRoom {
	return &NullableLastAdminGroupRoom{value: val, isSet: true}
}

func (v NullableLastAdminGroupRoom) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLastAdminGroupRoom) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
