/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateFilesBulkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFilesBulkRequest{}

// UpdateFilesBulkRequest Request model for updating files
type UpdateFilesBulkRequest struct {
	// Classification ID:  * `1` - public  * `2` - internal  * `3` - confidential  * `4` - strictly confidential
	Classification *int32            `json:"classification,omitempty"`
	Expiration     *ObjectExpiration `json:"expiration,omitempty"`
	// List of ids
	ObjectIds []int64 `json:"objectIds"`
}

type _UpdateFilesBulkRequest UpdateFilesBulkRequest

// NewUpdateFilesBulkRequest instantiates a new UpdateFilesBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFilesBulkRequest(objectIds []int64) *UpdateFilesBulkRequest {
	this := UpdateFilesBulkRequest{}
	this.ObjectIds = objectIds
	return &this
}

// NewUpdateFilesBulkRequestWithDefaults instantiates a new UpdateFilesBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFilesBulkRequestWithDefaults() *UpdateFilesBulkRequest {
	this := UpdateFilesBulkRequest{}
	return &this
}

// GetClassification returns the Classification field value if set, zero value otherwise.
func (o *UpdateFilesBulkRequest) GetClassification() int32 {
	if o == nil || IsNil(o.Classification) {
		var ret int32
		return ret
	}
	return *o.Classification
}

// GetClassificationOk returns a tuple with the Classification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFilesBulkRequest) GetClassificationOk() (*int32, bool) {
	if o == nil || IsNil(o.Classification) {
		return nil, false
	}
	return o.Classification, true
}

// HasClassification returns a boolean if a field has been set.
func (o *UpdateFilesBulkRequest) HasClassification() bool {
	if o != nil && !IsNil(o.Classification) {
		return true
	}

	return false
}

// SetClassification gets a reference to the given int32 and assigns it to the Classification field.
func (o *UpdateFilesBulkRequest) SetClassification(v int32) {
	o.Classification = &v
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *UpdateFilesBulkRequest) GetExpiration() ObjectExpiration {
	if o == nil || IsNil(o.Expiration) {
		var ret ObjectExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFilesBulkRequest) GetExpirationOk() (*ObjectExpiration, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *UpdateFilesBulkRequest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given ObjectExpiration and assigns it to the Expiration field.
func (o *UpdateFilesBulkRequest) SetExpiration(v ObjectExpiration) {
	o.Expiration = &v
}

// GetObjectIds returns the ObjectIds field value
func (o *UpdateFilesBulkRequest) GetObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value
// and a boolean to check if the value has been set.
func (o *UpdateFilesBulkRequest) GetObjectIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// SetObjectIds sets field value
func (o *UpdateFilesBulkRequest) SetObjectIds(v []int64) {
	o.ObjectIds = v
}

func (o UpdateFilesBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFilesBulkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Classification) {
		toSerialize["classification"] = o.Classification
	}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	toSerialize["objectIds"] = o.ObjectIds
	return toSerialize, nil
}

func (o *UpdateFilesBulkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateFilesBulkRequest := _UpdateFilesBulkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateFilesBulkRequest)

	if err != nil {
		return err
	}

	*o = UpdateFilesBulkRequest(varUpdateFilesBulkRequest)

	return err
}

type NullableUpdateFilesBulkRequest struct {
	value *UpdateFilesBulkRequest
	isSet bool
}

func (v NullableUpdateFilesBulkRequest) Get() *UpdateFilesBulkRequest {
	return v.value
}

func (v *NullableUpdateFilesBulkRequest) Set(val *UpdateFilesBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFilesBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFilesBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFilesBulkRequest(val *UpdateFilesBulkRequest) *NullableUpdateFilesBulkRequest {
	return &NullableUpdateFilesBulkRequest{value: val, isSet: true}
}

func (v NullableUpdateFilesBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFilesBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
