/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateUploadSharesBulkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUploadSharesBulkRequest{}

// UpdateUploadSharesBulkRequest Request model for updating a list of Download Shares
type UpdateUploadSharesBulkRequest struct {
	Expiration *ObjectExpiration `json:"expiration,omitempty"`
	// Show creator first and last name.
	ShowCreatorName *bool `json:"showCreatorName,omitempty"`
	// Show creator email address.
	ShowCreatorUsername *bool `json:"showCreatorUsername,omitempty"`
	// Allow display of already uploaded files
	ShowUploadedFiles *bool `json:"showUploadedFiles,omitempty"`
	// Maximal amount of files to upload
	MaxSlots *int32 `json:"maxSlots,omitempty"`
	// Set 'true' to reset 'maxSlots' for Upload Share
	ResetMaxSlots *bool `json:"resetMaxSlots,omitempty"`
	// Maximal total size of uploaded files (in bytes)
	MaxSize *int64 `json:"maxSize,omitempty"`
	// Set 'true' to reset 'maxSize' for Upload Share
	ResetMaxSize *bool `json:"resetMaxSize,omitempty"`
	// Number of days after which uploaded files expire
	FilesExpiryPeriod *int32 `json:"filesExpiryPeriod,omitempty"`
	// Set 'true' to reset 'filesExpiryPeriod' for Upload Share
	ResetFilesExpiryPeriod *bool `json:"resetFilesExpiryPeriod,omitempty"`
	// List of ids
	ObjectIds []int64 `json:"objectIds"`
}

type _UpdateUploadSharesBulkRequest UpdateUploadSharesBulkRequest

// NewUpdateUploadSharesBulkRequest instantiates a new UpdateUploadSharesBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUploadSharesBulkRequest(objectIds []int64) *UpdateUploadSharesBulkRequest {
	this := UpdateUploadSharesBulkRequest{}
	this.ObjectIds = objectIds
	return &this
}

// NewUpdateUploadSharesBulkRequestWithDefaults instantiates a new UpdateUploadSharesBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUploadSharesBulkRequestWithDefaults() *UpdateUploadSharesBulkRequest {
	this := UpdateUploadSharesBulkRequest{}
	return &this
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetExpiration() ObjectExpiration {
	if o == nil || IsNil(o.Expiration) {
		var ret ObjectExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetExpirationOk() (*ObjectExpiration, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given ObjectExpiration and assigns it to the Expiration field.
func (o *UpdateUploadSharesBulkRequest) SetExpiration(v ObjectExpiration) {
	o.Expiration = &v
}

// GetShowCreatorName returns the ShowCreatorName field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetShowCreatorName() bool {
	if o == nil || IsNil(o.ShowCreatorName) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorName
}

// GetShowCreatorNameOk returns a tuple with the ShowCreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetShowCreatorNameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorName) {
		return nil, false
	}
	return o.ShowCreatorName, true
}

// HasShowCreatorName returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasShowCreatorName() bool {
	if o != nil && !IsNil(o.ShowCreatorName) {
		return true
	}

	return false
}

// SetShowCreatorName gets a reference to the given bool and assigns it to the ShowCreatorName field.
func (o *UpdateUploadSharesBulkRequest) SetShowCreatorName(v bool) {
	o.ShowCreatorName = &v
}

// GetShowCreatorUsername returns the ShowCreatorUsername field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetShowCreatorUsername() bool {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorUsername
}

// GetShowCreatorUsernameOk returns a tuple with the ShowCreatorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetShowCreatorUsernameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		return nil, false
	}
	return o.ShowCreatorUsername, true
}

// HasShowCreatorUsername returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasShowCreatorUsername() bool {
	if o != nil && !IsNil(o.ShowCreatorUsername) {
		return true
	}

	return false
}

// SetShowCreatorUsername gets a reference to the given bool and assigns it to the ShowCreatorUsername field.
func (o *UpdateUploadSharesBulkRequest) SetShowCreatorUsername(v bool) {
	o.ShowCreatorUsername = &v
}

// GetShowUploadedFiles returns the ShowUploadedFiles field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetShowUploadedFiles() bool {
	if o == nil || IsNil(o.ShowUploadedFiles) {
		var ret bool
		return ret
	}
	return *o.ShowUploadedFiles
}

// GetShowUploadedFilesOk returns a tuple with the ShowUploadedFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetShowUploadedFilesOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowUploadedFiles) {
		return nil, false
	}
	return o.ShowUploadedFiles, true
}

// HasShowUploadedFiles returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasShowUploadedFiles() bool {
	if o != nil && !IsNil(o.ShowUploadedFiles) {
		return true
	}

	return false
}

// SetShowUploadedFiles gets a reference to the given bool and assigns it to the ShowUploadedFiles field.
func (o *UpdateUploadSharesBulkRequest) SetShowUploadedFiles(v bool) {
	o.ShowUploadedFiles = &v
}

// GetMaxSlots returns the MaxSlots field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetMaxSlots() int32 {
	if o == nil || IsNil(o.MaxSlots) {
		var ret int32
		return ret
	}
	return *o.MaxSlots
}

// GetMaxSlotsOk returns a tuple with the MaxSlots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetMaxSlotsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxSlots) {
		return nil, false
	}
	return o.MaxSlots, true
}

// HasMaxSlots returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasMaxSlots() bool {
	if o != nil && !IsNil(o.MaxSlots) {
		return true
	}

	return false
}

// SetMaxSlots gets a reference to the given int32 and assigns it to the MaxSlots field.
func (o *UpdateUploadSharesBulkRequest) SetMaxSlots(v int32) {
	o.MaxSlots = &v
}

// GetResetMaxSlots returns the ResetMaxSlots field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetResetMaxSlots() bool {
	if o == nil || IsNil(o.ResetMaxSlots) {
		var ret bool
		return ret
	}
	return *o.ResetMaxSlots
}

// GetResetMaxSlotsOk returns a tuple with the ResetMaxSlots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetResetMaxSlotsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetMaxSlots) {
		return nil, false
	}
	return o.ResetMaxSlots, true
}

// HasResetMaxSlots returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasResetMaxSlots() bool {
	if o != nil && !IsNil(o.ResetMaxSlots) {
		return true
	}

	return false
}

// SetResetMaxSlots gets a reference to the given bool and assigns it to the ResetMaxSlots field.
func (o *UpdateUploadSharesBulkRequest) SetResetMaxSlots(v bool) {
	o.ResetMaxSlots = &v
}

// GetMaxSize returns the MaxSize field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetMaxSize() int64 {
	if o == nil || IsNil(o.MaxSize) {
		var ret int64
		return ret
	}
	return *o.MaxSize
}

// GetMaxSizeOk returns a tuple with the MaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetMaxSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxSize) {
		return nil, false
	}
	return o.MaxSize, true
}

// HasMaxSize returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasMaxSize() bool {
	if o != nil && !IsNil(o.MaxSize) {
		return true
	}

	return false
}

// SetMaxSize gets a reference to the given int64 and assigns it to the MaxSize field.
func (o *UpdateUploadSharesBulkRequest) SetMaxSize(v int64) {
	o.MaxSize = &v
}

// GetResetMaxSize returns the ResetMaxSize field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetResetMaxSize() bool {
	if o == nil || IsNil(o.ResetMaxSize) {
		var ret bool
		return ret
	}
	return *o.ResetMaxSize
}

// GetResetMaxSizeOk returns a tuple with the ResetMaxSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetResetMaxSizeOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetMaxSize) {
		return nil, false
	}
	return o.ResetMaxSize, true
}

// HasResetMaxSize returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasResetMaxSize() bool {
	if o != nil && !IsNil(o.ResetMaxSize) {
		return true
	}

	return false
}

// SetResetMaxSize gets a reference to the given bool and assigns it to the ResetMaxSize field.
func (o *UpdateUploadSharesBulkRequest) SetResetMaxSize(v bool) {
	o.ResetMaxSize = &v
}

// GetFilesExpiryPeriod returns the FilesExpiryPeriod field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetFilesExpiryPeriod() int32 {
	if o == nil || IsNil(o.FilesExpiryPeriod) {
		var ret int32
		return ret
	}
	return *o.FilesExpiryPeriod
}

// GetFilesExpiryPeriodOk returns a tuple with the FilesExpiryPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetFilesExpiryPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.FilesExpiryPeriod) {
		return nil, false
	}
	return o.FilesExpiryPeriod, true
}

// HasFilesExpiryPeriod returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasFilesExpiryPeriod() bool {
	if o != nil && !IsNil(o.FilesExpiryPeriod) {
		return true
	}

	return false
}

// SetFilesExpiryPeriod gets a reference to the given int32 and assigns it to the FilesExpiryPeriod field.
func (o *UpdateUploadSharesBulkRequest) SetFilesExpiryPeriod(v int32) {
	o.FilesExpiryPeriod = &v
}

// GetResetFilesExpiryPeriod returns the ResetFilesExpiryPeriod field value if set, zero value otherwise.
func (o *UpdateUploadSharesBulkRequest) GetResetFilesExpiryPeriod() bool {
	if o == nil || IsNil(o.ResetFilesExpiryPeriod) {
		var ret bool
		return ret
	}
	return *o.ResetFilesExpiryPeriod
}

// GetResetFilesExpiryPeriodOk returns a tuple with the ResetFilesExpiryPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetResetFilesExpiryPeriodOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetFilesExpiryPeriod) {
		return nil, false
	}
	return o.ResetFilesExpiryPeriod, true
}

// HasResetFilesExpiryPeriod returns a boolean if a field has been set.
func (o *UpdateUploadSharesBulkRequest) HasResetFilesExpiryPeriod() bool {
	if o != nil && !IsNil(o.ResetFilesExpiryPeriod) {
		return true
	}

	return false
}

// SetResetFilesExpiryPeriod gets a reference to the given bool and assigns it to the ResetFilesExpiryPeriod field.
func (o *UpdateUploadSharesBulkRequest) SetResetFilesExpiryPeriod(v bool) {
	o.ResetFilesExpiryPeriod = &v
}

// GetObjectIds returns the ObjectIds field value
func (o *UpdateUploadSharesBulkRequest) GetObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value
// and a boolean to check if the value has been set.
func (o *UpdateUploadSharesBulkRequest) GetObjectIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// SetObjectIds sets field value
func (o *UpdateUploadSharesBulkRequest) SetObjectIds(v []int64) {
	o.ObjectIds = v
}

func (o UpdateUploadSharesBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUploadSharesBulkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.ShowCreatorName) {
		toSerialize["showCreatorName"] = o.ShowCreatorName
	}
	if !IsNil(o.ShowCreatorUsername) {
		toSerialize["showCreatorUsername"] = o.ShowCreatorUsername
	}
	if !IsNil(o.ShowUploadedFiles) {
		toSerialize["showUploadedFiles"] = o.ShowUploadedFiles
	}
	if !IsNil(o.MaxSlots) {
		toSerialize["maxSlots"] = o.MaxSlots
	}
	if !IsNil(o.ResetMaxSlots) {
		toSerialize["resetMaxSlots"] = o.ResetMaxSlots
	}
	if !IsNil(o.MaxSize) {
		toSerialize["maxSize"] = o.MaxSize
	}
	if !IsNil(o.ResetMaxSize) {
		toSerialize["resetMaxSize"] = o.ResetMaxSize
	}
	if !IsNil(o.FilesExpiryPeriod) {
		toSerialize["filesExpiryPeriod"] = o.FilesExpiryPeriod
	}
	if !IsNil(o.ResetFilesExpiryPeriod) {
		toSerialize["resetFilesExpiryPeriod"] = o.ResetFilesExpiryPeriod
	}
	toSerialize["objectIds"] = o.ObjectIds
	return toSerialize, nil
}

func (o *UpdateUploadSharesBulkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateUploadSharesBulkRequest := _UpdateUploadSharesBulkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateUploadSharesBulkRequest)

	if err != nil {
		return err
	}

	*o = UpdateUploadSharesBulkRequest(varUpdateUploadSharesBulkRequest)

	return err
}

type NullableUpdateUploadSharesBulkRequest struct {
	value *UpdateUploadSharesBulkRequest
	isSet bool
}

func (v NullableUpdateUploadSharesBulkRequest) Get() *UpdateUploadSharesBulkRequest {
	return v.value
}

func (v *NullableUpdateUploadSharesBulkRequest) Set(val *UpdateUploadSharesBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUploadSharesBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUploadSharesBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUploadSharesBulkRequest(val *UpdateUploadSharesBulkRequest) *NullableUpdateUploadSharesBulkRequest {
	return &NullableUpdateUploadSharesBulkRequest{value: val, isSet: true}
}

func (v NullableUpdateUploadSharesBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUploadSharesBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
