/*
DRACOON API

REST Web Services for DRACOON<br><br>This page provides an overview of all available and documented DRACOON APIs, which are grouped by tags.<br>Each tag provides a collection of APIs that are intended for a specific area of the DRACOON.<br><br><a title='Developer Information' href='https://developer.dracoon.com'>Developer Information</a>&emsp;&emsp;<a title='Get SDKs on GitHub' href='https://github.com/dracoon'>Get SDKs on GitHub</a><br><br><a title='Terms of service' href='https://www.dracoon.com/terms/general-terms-and-conditions/'>Terms of service</a>

API version: 5.3.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the UpdateDownloadSharesBulkRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateDownloadSharesBulkRequest{}

// UpdateDownloadSharesBulkRequest Request model for updating a list of Download Shares
type UpdateDownloadSharesBulkRequest struct {
	Expiration *ObjectExpiration `json:"expiration,omitempty"`
	// Show creator first and last name.
	ShowCreatorName *bool `json:"showCreatorName,omitempty"`
	// Show creator email address.
	ShowCreatorUsername *bool `json:"showCreatorUsername,omitempty"`
	// Max allowed downloads
	MaxDownloads *int32 `json:"maxDownloads,omitempty"`
	// Set 'true' to reset 'maxDownloads' for Download Share.
	ResetMaxDownloads *bool `json:"resetMaxDownloads,omitempty"`
	// List of ids
	ObjectIds []int64 `json:"objectIds"`
}

type _UpdateDownloadSharesBulkRequest UpdateDownloadSharesBulkRequest

// NewUpdateDownloadSharesBulkRequest instantiates a new UpdateDownloadSharesBulkRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateDownloadSharesBulkRequest(objectIds []int64) *UpdateDownloadSharesBulkRequest {
	this := UpdateDownloadSharesBulkRequest{}
	this.ObjectIds = objectIds
	return &this
}

// NewUpdateDownloadSharesBulkRequestWithDefaults instantiates a new UpdateDownloadSharesBulkRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateDownloadSharesBulkRequestWithDefaults() *UpdateDownloadSharesBulkRequest {
	this := UpdateDownloadSharesBulkRequest{}
	return &this
}

// GetExpiration returns the Expiration field value if set, zero value otherwise.
func (o *UpdateDownloadSharesBulkRequest) GetExpiration() ObjectExpiration {
	if o == nil || IsNil(o.Expiration) {
		var ret ObjectExpiration
		return ret
	}
	return *o.Expiration
}

// GetExpirationOk returns a tuple with the Expiration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadSharesBulkRequest) GetExpirationOk() (*ObjectExpiration, bool) {
	if o == nil || IsNil(o.Expiration) {
		return nil, false
	}
	return o.Expiration, true
}

// HasExpiration returns a boolean if a field has been set.
func (o *UpdateDownloadSharesBulkRequest) HasExpiration() bool {
	if o != nil && !IsNil(o.Expiration) {
		return true
	}

	return false
}

// SetExpiration gets a reference to the given ObjectExpiration and assigns it to the Expiration field.
func (o *UpdateDownloadSharesBulkRequest) SetExpiration(v ObjectExpiration) {
	o.Expiration = &v
}

// GetShowCreatorName returns the ShowCreatorName field value if set, zero value otherwise.
func (o *UpdateDownloadSharesBulkRequest) GetShowCreatorName() bool {
	if o == nil || IsNil(o.ShowCreatorName) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorName
}

// GetShowCreatorNameOk returns a tuple with the ShowCreatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadSharesBulkRequest) GetShowCreatorNameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorName) {
		return nil, false
	}
	return o.ShowCreatorName, true
}

// HasShowCreatorName returns a boolean if a field has been set.
func (o *UpdateDownloadSharesBulkRequest) HasShowCreatorName() bool {
	if o != nil && !IsNil(o.ShowCreatorName) {
		return true
	}

	return false
}

// SetShowCreatorName gets a reference to the given bool and assigns it to the ShowCreatorName field.
func (o *UpdateDownloadSharesBulkRequest) SetShowCreatorName(v bool) {
	o.ShowCreatorName = &v
}

// GetShowCreatorUsername returns the ShowCreatorUsername field value if set, zero value otherwise.
func (o *UpdateDownloadSharesBulkRequest) GetShowCreatorUsername() bool {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		var ret bool
		return ret
	}
	return *o.ShowCreatorUsername
}

// GetShowCreatorUsernameOk returns a tuple with the ShowCreatorUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadSharesBulkRequest) GetShowCreatorUsernameOk() (*bool, bool) {
	if o == nil || IsNil(o.ShowCreatorUsername) {
		return nil, false
	}
	return o.ShowCreatorUsername, true
}

// HasShowCreatorUsername returns a boolean if a field has been set.
func (o *UpdateDownloadSharesBulkRequest) HasShowCreatorUsername() bool {
	if o != nil && !IsNil(o.ShowCreatorUsername) {
		return true
	}

	return false
}

// SetShowCreatorUsername gets a reference to the given bool and assigns it to the ShowCreatorUsername field.
func (o *UpdateDownloadSharesBulkRequest) SetShowCreatorUsername(v bool) {
	o.ShowCreatorUsername = &v
}

// GetMaxDownloads returns the MaxDownloads field value if set, zero value otherwise.
func (o *UpdateDownloadSharesBulkRequest) GetMaxDownloads() int32 {
	if o == nil || IsNil(o.MaxDownloads) {
		var ret int32
		return ret
	}
	return *o.MaxDownloads
}

// GetMaxDownloadsOk returns a tuple with the MaxDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadSharesBulkRequest) GetMaxDownloadsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDownloads) {
		return nil, false
	}
	return o.MaxDownloads, true
}

// HasMaxDownloads returns a boolean if a field has been set.
func (o *UpdateDownloadSharesBulkRequest) HasMaxDownloads() bool {
	if o != nil && !IsNil(o.MaxDownloads) {
		return true
	}

	return false
}

// SetMaxDownloads gets a reference to the given int32 and assigns it to the MaxDownloads field.
func (o *UpdateDownloadSharesBulkRequest) SetMaxDownloads(v int32) {
	o.MaxDownloads = &v
}

// GetResetMaxDownloads returns the ResetMaxDownloads field value if set, zero value otherwise.
func (o *UpdateDownloadSharesBulkRequest) GetResetMaxDownloads() bool {
	if o == nil || IsNil(o.ResetMaxDownloads) {
		var ret bool
		return ret
	}
	return *o.ResetMaxDownloads
}

// GetResetMaxDownloadsOk returns a tuple with the ResetMaxDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateDownloadSharesBulkRequest) GetResetMaxDownloadsOk() (*bool, bool) {
	if o == nil || IsNil(o.ResetMaxDownloads) {
		return nil, false
	}
	return o.ResetMaxDownloads, true
}

// HasResetMaxDownloads returns a boolean if a field has been set.
func (o *UpdateDownloadSharesBulkRequest) HasResetMaxDownloads() bool {
	if o != nil && !IsNil(o.ResetMaxDownloads) {
		return true
	}

	return false
}

// SetResetMaxDownloads gets a reference to the given bool and assigns it to the ResetMaxDownloads field.
func (o *UpdateDownloadSharesBulkRequest) SetResetMaxDownloads(v bool) {
	o.ResetMaxDownloads = &v
}

// GetObjectIds returns the ObjectIds field value
func (o *UpdateDownloadSharesBulkRequest) GetObjectIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.ObjectIds
}

// GetObjectIdsOk returns a tuple with the ObjectIds field value
// and a boolean to check if the value has been set.
func (o *UpdateDownloadSharesBulkRequest) GetObjectIdsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectIds, true
}

// SetObjectIds sets field value
func (o *UpdateDownloadSharesBulkRequest) SetObjectIds(v []int64) {
	o.ObjectIds = v
}

func (o UpdateDownloadSharesBulkRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateDownloadSharesBulkRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Expiration) {
		toSerialize["expiration"] = o.Expiration
	}
	if !IsNil(o.ShowCreatorName) {
		toSerialize["showCreatorName"] = o.ShowCreatorName
	}
	if !IsNil(o.ShowCreatorUsername) {
		toSerialize["showCreatorUsername"] = o.ShowCreatorUsername
	}
	if !IsNil(o.MaxDownloads) {
		toSerialize["maxDownloads"] = o.MaxDownloads
	}
	if !IsNil(o.ResetMaxDownloads) {
		toSerialize["resetMaxDownloads"] = o.ResetMaxDownloads
	}
	toSerialize["objectIds"] = o.ObjectIds
	return toSerialize, nil
}

func (o *UpdateDownloadSharesBulkRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"objectIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateDownloadSharesBulkRequest := _UpdateDownloadSharesBulkRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateDownloadSharesBulkRequest)

	if err != nil {
		return err
	}

	*o = UpdateDownloadSharesBulkRequest(varUpdateDownloadSharesBulkRequest)

	return err
}

type NullableUpdateDownloadSharesBulkRequest struct {
	value *UpdateDownloadSharesBulkRequest
	isSet bool
}

func (v NullableUpdateDownloadSharesBulkRequest) Get() *UpdateDownloadSharesBulkRequest {
	return v.value
}

func (v *NullableUpdateDownloadSharesBulkRequest) Set(val *UpdateDownloadSharesBulkRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateDownloadSharesBulkRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateDownloadSharesBulkRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateDownloadSharesBulkRequest(val *UpdateDownloadSharesBulkRequest) *NullableUpdateDownloadSharesBulkRequest {
	return &NullableUpdateDownloadSharesBulkRequest{value: val, isSet: true}
}

func (v NullableUpdateDownloadSharesBulkRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateDownloadSharesBulkRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
